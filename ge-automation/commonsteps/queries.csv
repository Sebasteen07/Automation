update servicesettings set settingvalue = '1' where settingtype in ('POLL_INTENGINE','SEND_LOCKS','PROCESS_PAT_REG') and grouptype = 'PRACTICE_CONFIG'
select ValueString, ValueDateTime from cusMedfusionMemberMap mm inner join cusMedfusionMember m on m.memberid = mm.memberid inner join PatientProfile p on p.PatientProfileId = CAST(m.PatientProfileId as Integer) where mm.fieldid in (2,4,6,8) and p.PatientId = 
order by fieldid asc
select MemberId from cusMedfusionMemberMap where FieldId = '2' and ValueString =
select PatientProfileId, staff, MemberId from cusMedfusionMember where MemberId = 
select PatientId, PId, First, Last, EMailAddress, Birthdate, PatientProfileId from PatientProfile where PatientProfileId = 
select registrationType, status, pregId from cusMedfusionPatientRegistration where patientProfileId = 
order by pregId asc
select eventId, EventType, EligibleProvider, sdid from cusMedfusionMUEvents where patientprofileid = 
order by muEventId desc
select MUActivityLogTypeId, SDID, PVID from MUActivityLog where PID =
order by DB_Create_Timestamp desc
select Status,GeStaffId,MedfusionMemberLockedId from cusMedfusionMemberLocked where PatientProfileId = 
update servicesettings set settingvalue = 'Both' where settingtype = 'ORDER_STATUS'
update servicesettings set settingvalue = '0' where settingtype = 'CUSTOM_TOC'
update servicesettings set settingvalue = '1' where settingtype = 'RUN_BULK'
select outgoingtocid, ordernum, sdid from cusMedfusionOutgoingTOC where PatientProfileId = 
order by outgoingtocid desc
select status, mdnConfirmationDate from cusMedfusionOutgoingTOCStatus where outgoingtocid = 
select IntServProv,internalTOCaddress,ExtServProv,externalTOCaddress,status,Subject,lettertext,AttachmentName from cusMedfusionOutgoingTOCProvider where outgoingtocid = 
select patientprofileid, status, CommOutgoingId from cusMedfusionOutgoingTOCPatient where outgoingtocid = 
select PatientProfileId, CommServiceType, SubjectText,CreatedByUser, CommSentStatus, MedfusionCommId, DocumentId, CommSentDate, CommOutgoingId from cusMedfusionCommOutgoing where CommOutgoingId = 
select LOGINNAME, PVID from USR where LASTNAME = LNAME and FIRSTNAME = FNAME
update practicesolutions set enabled = 1 where solutionsid in (2,3)
select enabled from practicesolutions where solutionsid in (2,3)
select settingvalue from servicesettings where settingtype in ('ORDER_STATUS','CUSTOM_TOC','RUN_BULK') order by settingtype asc
select settingvalue from servicesettings where settingtype in ('POLL_INTENGINE','SEND_LOCKS','PROCESS_PAT_REG') and grouptype = 'PRACTICE_CONFIG'
select SDID, SUMMARY, DOCTYPE, DB_CREATE_DATE, XID from DOCUMENT where PID = 
order by DB_CREATE_DATE desc
select cvsInfoId, medfusionPatientId, gePatientId, status from cusMedfusionCVSInfo where did = 
select outboundCcdId, medfusionPatientId, gePatientId, state, status, ccdType from cusMedfusionOutboundCcd where referenceId = 
order by outboundCcdId desc
select cvsInfoId, medfusionPatientId, gePatientId, status, xid from cusMedfusionCVSExtInfo where did = 
select CommServiceType, EMRDocumentType, ResponseToDocumentId, SubjectText, ReceivedDate from cusMedfusionCommIncoming where PatientProfileId = 
order by CommIncomingId desc
select settingvalue,settingtype from servicesettings where settingtype in ('RUN_SECURE_COMM','NOTIFY_READ','NO_REPLY') order by settingtype asc
update servicesettings set settingvalue = '1' where settingtype = 'RUN_SECURE_COMM'
update servicesettings set settingvalue = '0' where settingtype = 'NO_REPLY'
update servicesettings set settingvalue = '1' where settingtype = 'NOTIFY_READ'
select settingvalue, settingtype from servicesettings where settingtype in ('RUN_APPT','VIEW_APPOINTMENT') order by settingtype asc
update servicesettings set settingvalue = '1' where settingtype = 'RUN_APPT'
update servicesettings set settingvalue = '1' where settingtype = 'VIEW_APPOINTMENT'
select settingvalue,settingtype from servicesettings where settingtype in ('fetchCCDAfterEnocunter','fetchCVS') order by settingtype asc
update servicesettings set settingvalue = '1' where settingtype = 'fetchCCDAfterEnocunter'
update servicesettings set settingvalue = '1' where settingtype = 'fetchCVS'
select settingvalue from servicesettings where settingtype = 'RUN_AAS'
update servicesettings set settingvalue = '1' where settingtype = 'RUN_AAS'