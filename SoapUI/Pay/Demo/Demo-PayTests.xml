<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="814072f8-5777-4e5b-b782-c2a354265559" created="2.8.2" activeEnvironment="Default environment" name="Project 56" resourceRoot="" updated="2.8.2 2019-08-27T17:04:01Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="4f5a0700-c560-46fd-a09c-7bf7e2889a6c" name="Demo Pay tests"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="a24694de-0f35-4c56-94b3-0df71ab6131b" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="VCS through the  modulator and directly" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="83e44b81-0604-43fa-bbe9-687e30abdcf4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderId</con:name><con:value>"d8774c10-4d9c-44fc-addd-5"</con:value></con:property><con:property><con:name>threadId</con:name><con:value>"68396729-7691636977295114"</con:value></con:property><con:property><con:name>externalTransactionId</con:name><con:value>"43813780"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-initial payment series" id="3efbc46b-48d1-4cbf-b8ff-84ac86c5a0d5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-initial payment series" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/authorize/2560805637</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 100000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id" id="c9f9d88e-7e74-4b6e-bb5b-fb4d5e3dd829"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id" id="881f15f1-34f3-4e66-beff-afc4d1efef4f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-initial payment series" id="cab0d0bf-7f22-4099-93e5-b8e56371166d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-initial payment series" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/capture/2560805637</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 100000,
       "externalTransactionId":${Properties#externalTransactionId},
         "initialTransactionInSeries":null,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="12f552fc-d7ae-475d-b6ac-f2523efe440a" name="Match content of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id of capture" id="ecf2bcf8-fe49-411d-93a0-05d552caba50"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST capture through the modulator-initial payment series#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST capture through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id of capture" id="debcd245-9768-4c2b-8cbb-15b6809b28b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST capture through the modulator-initial payment series#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST capture through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator-initial payment series" id="bf65b79f-2d7d-4d96-b85c-7aef75b6032c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator-initial payment series" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/sale/2560805637</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 100000,
       "externalTransactionId":${Properties#externalTransactionId},
         "initialTransactionInSeries":null,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3ef6b7be-0aed-4454-ab92-48334ec5871a" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator-initial payment" id="8bb8cdcb-b938-421b-94f0-9cd459b3e8f7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/sale/2560805637</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for credit" id="8cab350f-e51d-4b81-90c4-d603005ed9cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="httprequest" name="POST refund through the modulator" id="c89b191c-2199-439b-8401-baa531b62519"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST refund through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/credit/2560805637</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for void" id="2f94fd3f-dbbe-4498-a599-db0df2d10bf3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="httprequest" name="POST void through the modulator" id="0249030f-c575-4041-9309-c96a1e2cae1b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST void through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/void/2560805637</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "externalTransactionId":${Properties#externalTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Success"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 1" id="c66aa3dc-2438-4a5f-90a8-9102bc6255dd"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )


def generator3 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
threadid = generator3( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info threadid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("threadId",'"'+threadid+'"' )
</script></con:config></con:testStep><con:testStep type="httprequest" name="POST credit through the modulator after voiding" id="48dc391c-0c85-4f55-8133-3054b73a151f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST credit through the modulator after voiding" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/credit/2560805637</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize directly-intial payment" id="db6d6f5a-6684-49ba-98e3-2e5c0f8db576"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize directly-intial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay01.dev.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560805637</con:endpoint><con:request>{
    "orderId":${Properties#orderId},
     "threadId":${Properties#threadId},
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "MC",
        "accountNumber": "5541032000004422",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="d0429d13-312f-42b6-a609-30120c0fa0c2"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="3c9cbac5-fe40-4223-a6d3-db2cf9f7fcbd"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="981beecb-a94f-4878-b8bb-6fc9757b0360"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionSeriesId]" id="a19d59ed-c3b6-4db3-ac1d-1fb095b74b51"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]" id="bee473f9-a910-4375-9c19-e5bd62d08576"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [message]1" id="90aad804-c742-4746-944d-43fd9c5b2ec6"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]1" id="16c129d1-81ad-4ccf-86f5-06d578ad0972"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]1" id="0aa9bc12-9290-4d30-b9f8-9402b09332e5"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionSeriesId]1" id="76a19322-f3fa-4bfe-9c91-66096a408786"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]1" id="c617f491-8ddc-45cf-917a-1c921037907c"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]1" id="07099a6e-404e-41f5-8c49-00885646140a"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for capture" id="158a757a-caba-4a57-b576-574c6cb84859"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize directly-intial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize directly-intial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id for capture" id="db0f9480-158b-4e1e-821a-673c1226795f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize directly-intial payment#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize directly-intial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="Post capture directly" id="dc7ace3b-fdf9-41ad-b2e6-43b6f085909d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post capture directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay01.dev.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560805637</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 20000,
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "MC",
        "accountNumber": "5541032000004422",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionSeriesId]" id="a27e9184-6db7-46c1-a976-fec608276ded"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]" id="21c78439-6504-448d-8089-5ef2a54fe1f4"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for sale" id="21bda1ac-4c1d-40cb-b290-e83f0cf2d3bb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Post capture directly#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post capture directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id for sale" id="35c9eb6b-f056-4f79-9f61-df91a3dec13b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${Post capture directly#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post capture directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="Post sale directly" id="3765dd7b-8794-4868-ba76-89dfc6f78daf"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post sale directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay01.dev.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560805637</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "MC",
        "accountNumber": "5541032000004422",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionSeriesId]" id="a27e9184-6db7-46c1-a976-fec608276ded"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]" id="21c78439-6504-448d-8089-5ef2a54fe1f4"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for refund" id="8966ab47-dade-4058-b9df-c66bcd31f267"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Post sale directly#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post sale directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -order id" id="9c6a3bd5-79cc-4e28-8724-e6d4b70236be"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post refund directly" id="6b562a3e-85d2-4fa4-85e0-e17c124ad15c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post refund directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay01.dev.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/credit/2560805637</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "MC",
        "accountNumber": "5541032000004422",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionSeriesId]" id="a27e9184-6db7-46c1-a976-fec608276ded"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for void" id="9cdfa43e-5c82-4e59-a830-bbf63471fdc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Post sale directly#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post sale directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -order id 2" id="2d976d72-8aa3-4e66-97ae-01167724b321"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post void directly" id="6d6140e3-4ff3-4205-9715-62516312adf7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post void directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay01.dev.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/void/2560805637</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "MC",
        "accountNumber": "5541032000004422",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Success"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionSeriesId]" id="a27e9184-6db7-46c1-a976-fec608276ded"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-non-initial payment" id="dd6d2fed-31fd-4c42-bc4d-fbf5748a4229"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-non-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/authorize/2560805637</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 34400,
    "initialTransactionInSeries": false,
    "card": {
        "cvvNumber": "2222",
        "type": "AX",
        "accountNumber": "341111597242000",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9eceb8c6-40f1-4780-8f8a-ffde74d87483" name="Match content of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get authorize transactionid" id="fc205531-76a9-4217-94d1-48ffb70b87d8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Get authorize orderid" id="b79daf7e-4c54-45cf-b2fa-3bc4199fba5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-non-initial payment" id="136d5b01-6da2-4044-b697-640e0909fd7b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-non-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/capture/2560805637</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 34400,
     "externalTransactionId":${Properties#externalTransactionId},
    "initialTransactionInSeries": false,
    "card": {
        "cvvNumber": "2222",
        "type": "AX",
        "accountNumber": "341111597242000",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9eceb8c6-40f1-4780-8f8a-ffde74d87483" name="Match content of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator-non-initial payment" id="0fa0b09d-a1f5-4e2a-abe7-6778631b4a7e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator-non-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay03.dev.medfusion.net:8085/mfgateway-api/services/mfgateway/v4/sale/2560805637</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "VCS"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "initialTransactionInSeries": false,
    "card": {
        "cvvNumber": "222",
        "type": "DI",
        "accountNumber": "6011000990911111",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24e5a49a-f758-4a6a-b5b4-42ee7cdbc62d" name="Check for existence of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9eceb8c6-40f1-4780-8f8a-ffde74d87483" name="Match content of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d5c54e2e-71ee-4502-a662-9f7c026ffee8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a61abc31-1b1a-4628-8605-f824879bc169</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b00714c7-f9f9-4969-aa0d-0fda589723e1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8bf6996f-9dc4-4de4-be99-7a51870ede5c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>48aeb5db-4f50-4fa5-8efd-83a399355c75</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>59be85c8-01b3-44f1-8780-530bae265d82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3537e404-76ee-47a1-8145-16cd43ff5428</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cf7b36e0-0ae7-482a-8831-ae6815d99b44</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>855e8e94-deec-4cfa-adcb-dad05d549d84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>62baae7c-026a-475a-a7ff-5279dab5752e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>54ceb6d2-9fbe-409f-8616-ccca69dd3d3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a402829-b64f-46e8-9ca8-153f7e1d39ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dd1721c5-9fcb-464f-83f7-5315fabec38e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e0baac8-3a14-4af1-9244-f9330ad70eb4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30fa2db2-0076-48de-b910-b95af5e74719</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f902d976-8d1d-4515-ba32-6ad55e39f19b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f5268c-e618-43bb-a316-c238f97d9281</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13e74273-7051-4664-95e1-4e5e0762b4b2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8476c6b-4261-4593-bdf4-1b00fbc63db0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>61618669-442c-45df-8152-34a8de5231e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ba62eb2-c4ed-4c4d-806f-3f17b7411e95</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd5a1bc6-3bf1-4b41-ac69-26d81b2b9995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>de8d1c3a-7ac2-40c0-804d-e3efe8be1860</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5890964c-a86d-4d2e-8e36-39e101dd113f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e492ed3b-74ba-41eb-8d84-7d13de81b840</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>304c8d37-d867-4867-b95d-97884ece6b2b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3861431c-06a0-4a8b-87d2-73e7e3e029cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f7369f82-bcf3-4e20-9e3e-147b27981651</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94a42d34-e944-4330-92af-9c5f58f7c482</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ea7dff6-bc6f-4851-8449-439a46dcfe14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="64880d8a-a854-4dab-8331-53c2ffdda780" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="BDGB through the  modulator and directly" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" zephyrTestName="" zephyrTestId=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="4a877cc7-bafd-4ed2-9946-2932a2f94da0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderId</con:name><con:value>"f49c1c31-d2d2-4e47-9c2e-e"</con:value></con:property><con:property><con:name>threadId</con:name><con:value>"9-5921618827934531-1-5114"</con:value></con:property><con:property><con:name>externalTransactionId</con:name><con:value>"45587300"</con:value></con:property><con:property><con:name>externalTransactionSeriesId</con:name><con:value>"000090687490600"</con:value></con:property><con:property><con:name>expressNetworkTransactionId</con:name><con:value>"201040142336240"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-initial payment series" id="bb3a9441-8110-4564-892b-704a77e87dd8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-initial payment series" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 100000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aba19280-a57d-45e8-82fb-c15845c8bd3c" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id" id="e1ae6392-af33-4d09-8a14-960fec21961b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id" id="9d4ce337-691c-4e87-b299-b8dcfddd6dfb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get express id for 2nd authorize" id="4c42f948-706a-43c7-a112-7db92c39357f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-initial payment series" id="d35285ad-3e80-4790-9c6c-8c7c0e219067"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-initial payment series" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 100000,
       "externalTransactionId":${Properties#externalTransactionId},
         "initialTransactionInSeries":true,
           
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="437c86a8-3365-4322-b58d-522af2916a6d" name="Match content of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-initial payment series 2nd set" id="c5cff127-a599-46f4-86bd-1f0a6bdeca5f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-initial payment series 2nd set" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 100000,
    "initialTransactionInSeries": false,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="da8b51d5-8ea3-4b25-adea-b3e1aa2eeef0" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="04844dc8-d84e-4f39-bb2a-0e1860d9ea65" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="fe4fb773-1b03-45cb-b601-77f78d7d3120" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585862411733</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>56a76065-0621-4adf-8bca-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44327296</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>976640</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637">
   <message>Approved</message>
   <responseTime>1585862411733</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>56a76065-0621-4adf-8bca-d</orderId>
   <externalTransactionId>44327296</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930162010376</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>976640</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id of authorize" id="1fb7113c-16df-4e7b-8e1c-6d8f5d8a0113"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series 2nd set#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 2nd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id of authorize" id="54446777-7e29-4de1-ad25-1fe0d858b781"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST capture through the modulator-initial payment series#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST capture through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-initial payment series-capture 2" id="a7f7935a-00bd-40c4-8f54-a0671c785c03"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-initial payment series-capture 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 100000,
       "externalTransactionId":${Properties#externalTransactionId},
       "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
         "initialTransactionInSeries":false,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3ef6b7be-0aed-4454-ab92-48334ec5871a" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d1b90e14-38c2-4973-86cd-daa749d96e38" name="Match content of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>${POST authorize through the modulator-initial payment series 2nd set#Response#$['externalTransactionSeriesId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="716c4df8-ed16-4236-a528-6d28190c6673" name="Match content of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>${Properties#expressNetworkTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-initial payment series 3rd set" id="0bd047bd-6895-47b7-9544-36bc7cbb9334"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-initial payment series 3rd set" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 200000,
    "initialTransactionInSeries": false,
  
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0b422ee3-ed62-4560-8783-c18b98699e8f" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="e5be35d2-6685-4e31-9b79-6153b1dbc347" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585863398866</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>701ca852-f0fc-4220-8914-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44328738</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series 2nd set#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>986503</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637">
   <message>Approved</message>
   <responseTime>1585863398866</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>701ca852-f0fc-4220-8914-d</orderId>
   <externalTransactionId>44328738</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930163637960</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>986503</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="52bb7c51-7ff0-4e7a-8174-0f176a6d01e6" name="Message Content Assertion 2"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585863398866</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>701ca852-f0fc-4220-8914-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44328738</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>986503</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637">
   <message>Approved</message>
   <responseTime>1585863398866</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>701ca852-f0fc-4220-8914-d</orderId>
   <externalTransactionId>44328738</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930163637960</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>986503</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="99b84e54-dfa0-4926-abb7-b76eb129b44c" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script -Get transaction id of authorize" id="05e76327-ee11-464d-909a-0b16f8f4c960"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series 3rd set#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 3rd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script -Get order id of authorize" id="8f59c18b-a20b-4390-81f8-2c2ddf1f43f1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-initial payment series 3rd set#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 3rd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get express id" id="41ef5174-b175-443e-8445-f4ba37537c4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series 2nd set#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 2nd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-initial payment series-capture 3" id="dc58f736-4c01-40c1-9132-f147100f8f76"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-initial payment series-capture 3" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 200000,
       "externalTransactionId":${Properties#externalTransactionId},
       "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
         "initialTransactionInSeries":false,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3ef6b7be-0aed-4454-ab92-48334ec5871a" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bd4be054-5836-42be-912c-20b8055c98e2" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="12983460-8b8e-42e0-bbc9-cbe9adac84c8" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Invalid Transaction Status</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585863697463</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>-1</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>701ca852-f0fc-4220-8914-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44328738</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series 2nd set#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637">
   <message>Invalid Transaction Status</message>
   <responseTime>1585863697463</responseTime>
   <responseCode>-1</responseCode>
   <threadId null="true"/>
   <orderId>701ca852-f0fc-4220-8914-d</orderId>
   <externalTransactionId>44328738</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930163352146</expressNetworkTransactionId>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator-initial payment" id="50526ae4-ba63-434c-8f4c-e67ad997d031"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="06109012-526d-4403-8975-59c6e46f9ed4" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for credit" id="77778be2-7997-4824-b01a-4ece831eae83"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="groovy" name="Get express id for refund and void" id="778977df-0748-4b95-b024-2af0bb1eea00"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST refund through the modulator" id="6e8a8dc0-1d92-452a-9f8f-c904cd796c77"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST refund through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
    "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for void" id="fd478fa3-2604-4256-9bd9-02762c44af27"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="httprequest" name="POST void through the modulator" id="274adaeb-d7ae-4bda-9088-d794663bcb3e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST void through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/void/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "externalTransactionId":${Properties#externalTransactionId},
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Success"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST credit through the modulator after voiding" id="11ec8968-7212-44c1-b441-a38afcf824ea"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST credit through the modulator after voiding" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator-non- initial payment" id="74d9be0e-52e2-41c7-92a7-1de6e7472bab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator-non- initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "initialTransactionInSeries": false,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aa70b174-ed4b-427c-86d5-a81390d94ce5" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get transaction id for credit" id="304733b8-6fcb-4773-a95a-d848e80d6f02"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-non- initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-non- initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="httprequest" name="Copy of POST refund through the modulator" id="35699b17-c201-4413-9eb9-f95437eafb32"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Copy of POST refund through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
    "initialTransactionInSeries":false,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize directly-intial payment" id="7ddd880d-dec6-4e37-9df3-9bd8b3818846"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize directly-intial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":${Properties#orderId},
     "threadId":${Properties#threadId},
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
    "initialTransactionInSeries": true,
    "card": {
      "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="d0429d13-312f-42b6-a609-30120c0fa0c2"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="3c9cbac5-fe40-4223-a6d3-db2cf9f7fcbd"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="981beecb-a94f-4878-b8bb-6fc9757b0360"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]" id="bee473f9-a910-4375-9c19-e5bd62d08576"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a2fb579a-d973-46cf-8fde-59e7a8a5774a" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for capture" id="5994865a-d688-4980-9e9b-4fa3f58bf7dd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize directly-intial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize directly-intial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id for capture" id="6e18a2d9-883b-4814-abb4-6b4d7e6d9559"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize directly-intial payment#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize directly-intial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="Post capture directly" id="fb3df766-7fe4-40b1-a2cf-0b77b6d1ae3d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post capture directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 20000,
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":true,
    "card": {
     "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]" id="21c78439-6504-448d-8089-5ef2a54fe1f4"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id for sale" id="c8680f6d-94a3-4a6c-b6aa-90c188cfa7bf"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post sale directly" id="b7a9264c-ad8a-4f54-becc-4d82ba738f95"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post sale directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
    
 
    "initialTransactionInSeries":true,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd228b94-1c48-4049-84d9-82aeb70e7e61" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5a6dca44-f27e-4cc5-9957-5ec8fa6ef342" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for refund" id="2b45dc91-d62e-43a4-908e-f2d7fd078ecf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Post sale directly#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post sale directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -order id" id="b255c953-9d79-4e68-97ca-8a31b2f7a1c4"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post refund directly" id="a23c66cd-36fb-4295-99de-6fde1c295307"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post refund directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for void" id="3b2854cf-d5bc-47a4-97c2-52c493803414"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Post sale directly#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post sale directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -order id 2" id="3b3e84e3-3620-4618-957d-1dc866aca32c"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post void directly" id="bb4ebb16-8197-4505-9955-1a806b4769af"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post void directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/void/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Success"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-non-initial payment" id="aa57aff3-f81c-442c-9c2d-062ca3d3c87a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-non-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 34400,
    "initialTransactionInSeries": false,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="35871613-3b60-4023-856a-be33229a0941" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get authorize transactionid" id="c76d78cd-7528-4f1c-96f0-f4d515146333"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Get authorize orderid" id="8aaa52ac-fc20-4f86-b659-ba986b9a8312"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="groovy" name="Get express id" id="b5e45454-6b84-467f-b750-6b66f5b71952"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-non-initial payment" id="f20250ae-d0e0-4ab0-ba37-6d0901ee8879"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-non-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 34400,
     "externalTransactionId":${Properties#externalTransactionId},
      "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries": false,
    "card": {
         "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="55c0eba4-af87-43da-8f5e-86766efd06bb" name="Match content of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>${Properties#expressNetworkTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale series for budget plan- 1 initial payment" id="c281e7be-acc3-43b3-9487-8a351539f084"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale series for budget plan- 1 initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
     "transactionAmount": 98800,
    "initialTransactionInSeries": true,
    "card": {
       "cvvNumber": "901",
        "type": "VI",
        "accountNumber": "4960049010100011",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="28226c5b-cf06-4af0-b34d-5b0d9fd5d8a0" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="0358b576-090e-4fce-bfd5-52d33e154f66"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale series for budget plan- 1 initial payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale series for budget plan- 1 initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST sale series for budget plan-2nd payment" id="3bc254cf-a24b-42be-bb05-b0c075b397f5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale series for budget plan-2nd payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
     "transactionAmount": 2000,
    "initialTransactionInSeries": false,
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "card": {
        "cvvNumber": "901",
        "type": "VI",
        "accountNumber": "4960049010100011",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1d9bd45b-df48-4cc6-b28b-aa5ac5a55f1b" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="b2a2c620-e713-409a-8cbb-7fa29252e85b" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585865844873</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>6ad5b791-f7d3-484c-b968-6</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44332714</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST sale series for budget plan- 1 initial payment#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>15499A</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637">
   <message>Approved</message>
   <responseTime>1585865844873</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>6ad5b791-f7d3-484c-b968-6</orderId>
   <externalTransactionId>44332714</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>000093802441377</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>15499A</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get network transaction id of previous series" id="7f35c2ef-44bc-464b-9085-b0b4269af868"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale series for budget plan-2nd payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale series for budget plan-2nd payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST sale series for budget plan-3rd payment" id="9716b869-588e-48b0-a8b7-23671b2c87a5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale series for budget plan-3rd payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "BDGB"
    },
    "comment1": "hello",
    "comment2": " Test",
     "transactionAmount": 4000,
    "initialTransactionInSeries": false,
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "card": {
        "cvvNumber": "901",
        "type": "VI",
        "accountNumber": "4960049010100011",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="4cc0b6d8-7eb2-47c0-a4e7-165a44246abe" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585866079852</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>ecada844-8e4d-40db-90f5-e</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44333071</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST sale series for budget plan- 1 initial payment#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>15510A</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637">
   <message>Approved</message>
   <responseTime>1585866079852</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>ecada844-8e4d-40db-90f5-e</orderId>
   <externalTransactionId>44333071</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>000093804791386</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>15510A</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="c43deabf-4374-4db0-bec6-b22fe00fdc30" name="Message Content Assertion 2"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585866079852</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>ecada844-8e4d-40db-90f5-e</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44333071</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST sale series for budget plan-2nd payment#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>15510A</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637">
   <message>Approved</message>
   <responseTime>1585866079852</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>ecada844-8e4d-40db-90f5-e</orderId>
   <externalTransactionId>44333071</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>000093804791386</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>15510A</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d5c54e2e-71ee-4502-a662-9f7c026ffee8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a61abc31-1b1a-4628-8605-f824879bc169</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b00714c7-f9f9-4969-aa0d-0fda589723e1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8bf6996f-9dc4-4de4-be99-7a51870ede5c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>48aeb5db-4f50-4fa5-8efd-83a399355c75</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>59be85c8-01b3-44f1-8780-530bae265d82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3537e404-76ee-47a1-8145-16cd43ff5428</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cf7b36e0-0ae7-482a-8831-ae6815d99b44</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>855e8e94-deec-4cfa-adcb-dad05d549d84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>62baae7c-026a-475a-a7ff-5279dab5752e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>54ceb6d2-9fbe-409f-8616-ccca69dd3d3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a402829-b64f-46e8-9ca8-153f7e1d39ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dd1721c5-9fcb-464f-83f7-5315fabec38e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e0baac8-3a14-4af1-9244-f9330ad70eb4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30fa2db2-0076-48de-b910-b95af5e74719</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f902d976-8d1d-4515-ba32-6ad55e39f19b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f5268c-e618-43bb-a316-c238f97d9281</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13e74273-7051-4664-95e1-4e5e0762b4b2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8476c6b-4261-4593-bdf4-1b00fbc63db0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>61618669-442c-45df-8152-34a8de5231e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ba62eb2-c4ed-4c4d-806f-3f17b7411e95</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd5a1bc6-3bf1-4b41-ac69-26d81b2b9995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>de8d1c3a-7ac2-40c0-804d-e3efe8be1860</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5890964c-a86d-4d2e-8e36-39e101dd113f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e492ed3b-74ba-41eb-8d84-7d13de81b840</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>304c8d37-d867-4867-b95d-97884ece6b2b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3861431c-06a0-4a8b-87d2-73e7e3e029cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f7369f82-bcf3-4e20-9e3e-147b27981651</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94a42d34-e944-4330-92af-9c5f58f7c482</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ea7dff6-bc6f-4851-8449-439a46dcfe14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d67d5bf5-1a9e-404c-947f-1de8523c16dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d196dc48-e107-409e-ae08-571dd84b84ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9df84187-0e01-4cfc-bb5d-5a1971f05bcb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ad6e7be-859a-436e-b76b-ecf5ac332836</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d25d1686-4b7d-4caf-8cae-05df7e4df210</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bcd8c55f-0234-4f67-aa01-7b8332f3f368</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35f3e719-7935-41af-bbfb-065e0d854d88</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35846ab0-c797-4c51-9709-47333fcf1c35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d71e830-f4e5-4e35-b371-a12299e19cf4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5baeafbf-734c-430c-b0ac-73aa5432af9f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50786732-e251-4f19-bbdf-fa29599b709b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aa4001c4-2027-4490-9dc2-a68afacad511</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8c5c650-74a6-42b0-a0a0-c0760a12664f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ea3361-6808-4a10-bfdb-d2907d8c8c41</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa40f52e-3f78-48fe-82f4-44e7ac098ce9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3dea2aa8-06bb-4a93-9d69-1719af99359e" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="OLBP through the  modulator and directly" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" zephyrTestName="" zephyrTestId=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="4d59e7b1-b212-42be-b12c-d5045ae5348d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderId</con:name><con:value>"95b9aee9-fde2-4c9e-a83b-0"</con:value></con:property><con:property><con:name>threadId</con:name><con:value>"9-5921618827934531-1-5114"</con:value></con:property><con:property><con:name>externalTransactionId</con:name><con:value>"45675253"</con:value></con:property><con:property><con:name>externalTransactionSeriesId</con:name><con:value>"000090687490600"</con:value></con:property><con:property><con:name>expressNetworkTransactionId</con:name><con:value>"201050080411360"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-initial payment series" id="8e5a180a-ae23-4047-b898-3c5c9e2c4232"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-initial payment series" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 100000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aba19280-a57d-45e8-82fb-c15845c8bd3c" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id" id="83a6498d-9000-4017-b297-0b7f16e3a702"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id" id="a3539824-0797-4c67-8a12-5e4dee2d4b0d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get express id for 2nd authorize" id="731a0cb8-1346-4d19-b5b3-d9fe814baf6a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-initial payment series" id="e68527b9-6a1a-4c82-98e2-0ea7dcbea79f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-initial payment series" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 100000,
       "externalTransactionId":${Properties#externalTransactionId},
         "initialTransactionInSeries":true,
           
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="437c86a8-3365-4322-b58d-522af2916a6d" name="Match content of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-initial payment series 2nd set" id="13153e8d-df53-4ad4-9dca-ce1808682055"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-initial payment series 2nd set" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 100000,
    "initialTransactionInSeries": false,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="da8b51d5-8ea3-4b25-adea-b3e1aa2eeef0" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="04844dc8-d84e-4f39-bb2a-0e1860d9ea65" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="fe4fb773-1b03-45cb-b601-77f78d7d3120" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585862411733</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>56a76065-0621-4adf-8bca-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44327296</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>976640</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637">
   <message>Approved</message>
   <responseTime>1585862411733</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>56a76065-0621-4adf-8bca-d</orderId>
   <externalTransactionId>44327296</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930162010376</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>976640</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id of authorize" id="84bf567e-710a-455f-b7b0-2a5e5fd9604c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series 2nd set#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 2nd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id of authorize" id="d453ef6a-8c95-4eb7-af02-975335742210"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST capture through the modulator-initial payment series#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST capture through the modulator-initial payment series"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-initial payment series-capture 2" id="c54c428f-c0a3-4d7d-bd36-6a2d30232bd6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-initial payment series-capture 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 100000,
       "externalTransactionId":${Properties#externalTransactionId},
       "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
         "initialTransactionInSeries":false,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3ef6b7be-0aed-4454-ab92-48334ec5871a" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d1b90e14-38c2-4973-86cd-daa749d96e38" name="Match content of [externalTransactionSeriesId]"><con:configuration><path>$['externalTransactionSeriesId']</path><content>${POST authorize through the modulator-initial payment series 2nd set#Response#$['externalTransactionSeriesId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="716c4df8-ed16-4236-a528-6d28190c6673" name="Match content of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>${Properties#expressNetworkTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-initial payment series 3rd set" id="ad88a527-f717-49d9-93d0-87e66180000a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-initial payment series 3rd set" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 200000,
    "initialTransactionInSeries": false,
  
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0b422ee3-ed62-4560-8783-c18b98699e8f" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="e5be35d2-6685-4e31-9b79-6153b1dbc347" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585863398866</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>701ca852-f0fc-4220-8914-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44328738</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series 2nd set#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>986503</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637">
   <message>Approved</message>
   <responseTime>1585863398866</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>701ca852-f0fc-4220-8914-d</orderId>
   <externalTransactionId>44328738</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930163637960</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>986503</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="52bb7c51-7ff0-4e7a-8174-0f176a6d01e6" name="Message Content Assertion 2"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585863398866</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>701ca852-f0fc-4220-8914-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44328738</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>986503</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/authorize/2560805637">
   <message>Approved</message>
   <responseTime>1585863398866</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>701ca852-f0fc-4220-8914-d</orderId>
   <externalTransactionId>44328738</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930163637960</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>986503</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="99b84e54-dfa0-4926-abb7-b76eb129b44c" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script -Get transaction id of authorize" id="868a0611-23ae-4a79-bb5d-6c3910702755"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series 3rd set#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 3rd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script -Get order id of authorize" id="9584ff31-e917-4d9e-a59c-5e5924e10048"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-initial payment series 3rd set#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 3rd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get express id" id="b5cb4309-1d8d-4c31-8156-40991636b4b5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-initial payment series 2nd set#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-initial payment series 2nd set"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-initial payment series-capture 3" id="4a761476-de69-436f-b92e-28c413b96fbc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-initial payment series-capture 3" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
   "orderId":${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 200000,
       "externalTransactionId":${Properties#externalTransactionId},
       "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
         "initialTransactionInSeries":false,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8e4125e0-0eee-47c1-b90c-be9b4a73240e" name="Match content of [orderId]"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3ef6b7be-0aed-4454-ab92-48334ec5871a" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bd4be054-5836-42be-912c-20b8055c98e2" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="12983460-8b8e-42e0-bbc9-cbe9adac84c8" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Invalid Transaction Status</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585863697463</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>-1</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>701ca852-f0fc-4220-8914-d</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44328738</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST authorize through the modulator-initial payment series 2nd set#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/capture/2560805637">
   <message>Invalid Transaction Status</message>
   <responseTime>1585863697463</responseTime>
   <responseCode>-1</responseCode>
   <threadId null="true"/>
   <orderId>701ca852-f0fc-4220-8914-d</orderId>
   <externalTransactionId>44328738</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>200930163352146</expressNetworkTransactionId>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator-initial payment" id="7e5d4d87-bba6-491b-8348-67326cdb240b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="06109012-526d-4403-8975-59c6e46f9ed4" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for credit" id="2f9d836f-3d10-4b0b-b843-59c5bcecce4c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="groovy" name="Get express id for refund and void" id="2a9ee9ea-3e19-478c-bc51-cd08e2d74a42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST refund through the modulator" id="ca6d0842-2b54-4e32-9d33-4f6c29f9d15a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST refund through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
    "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for void" id="ee2cc257-5e04-497a-8e87-c377dde1b8e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="httprequest" name="POST void through the modulator" id="2c4f2c21-f8d5-4b56-8536-fcbaf58db6dc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST void through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/void/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "externalTransactionId":${Properties#externalTransactionId},
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Success"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST credit through the modulator after voiding" id="661897a6-754e-45e1-a73b-5dcd18b68b69"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST credit through the modulator after voiding" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be23a7d0-9152-48b9-a76f-0118c9c2b1e7" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator-non- initial payment" id="9b055cf3-c949-44df-b508-ddd1c463ea41"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator-non- initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "initialTransactionInSeries": false,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aa70b174-ed4b-427c-86d5-a81390d94ce5" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get transaction id for credit" id="dc8d89a9-3dfa-495b-b2db-21e1c3fb1fd2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator-non- initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator-non- initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')



</script></con:config></con:testStep><con:testStep type="httprequest" name="Copy of POST refund through the modulator" id="85b363f2-8dcf-43b8-93f4-4922a86847b3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Copy of POST refund through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 10000,
    "externalTransactionId":${Properties#externalTransactionId},
    "initialTransactionInSeries":false,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize directly-intial payment" id="45c4569b-caf3-4318-8a7a-d8934bbfe504"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize directly-intial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":${Properties#orderId},
     "threadId":${Properties#threadId},
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
    "initialTransactionInSeries": true,
    "card": {
      "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="d0429d13-312f-42b6-a609-30120c0fa0c2"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="3c9cbac5-fe40-4223-a6d3-db2cf9f7fcbd"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="981beecb-a94f-4878-b8bb-6fc9757b0360"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]" id="bee473f9-a910-4375-9c19-e5bd62d08576"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a2fb579a-d973-46cf-8fde-59e7a8a5774a" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for capture" id="27dbc3b8-58bb-4c47-858f-0e3410f91db3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize directly-intial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize directly-intial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id for capture" id="b65d68f5-3b8e-434a-a175-c467da7b0308"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize directly-intial payment#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize directly-intial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="httprequest" name="Post capture directly" id="0dbe9220-965e-4c61-ad94-6a339f772ceb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post capture directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 20000,
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":true,
    "card": {
     "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [initialTransactionInSeries]" id="21c78439-6504-448d-8089-5ef2a54fe1f4"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get order id for sale" id="80a89e84-ba7c-47c6-95a1-363ac07b9bde"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post sale directly" id="4af4340b-2350-4c93-900d-f3e522535f29"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post sale directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
    
 
    "initialTransactionInSeries":true,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd228b94-1c48-4049-84d9-82aeb70e7e61" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5a6dca44-f27e-4cc5-9957-5ec8fa6ef342" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for refund" id="2d142be3-1797-4981-85b7-c333ff8f0d33"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Post sale directly#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post sale directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -order id" id="5ea6816e-b540-45ae-a21d-8abb091cef7a"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post refund directly" id="8af717f9-027a-4623-8132-8e8a6c57228e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post refund directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/credit/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 20000,
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -Get transaction id for void" id="4653fa1b-815e-4864-8697-d5f0ae632921"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Post sale directly#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Post sale directly"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script -order id 2" id="ca67e02d-87fa-41d5-b657-d30c58fd0b58"><con:settings/><con:config><script>

def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
orderid = generator2( (('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')+('-')+('1'..'9')).join(), 25 )
log.info orderid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("orderId",'"'+orderid+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="Post void directly" id="bfb77a8a-2a8f-4e12-a579-979281bc1dea"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="Post void directly" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8082/mfgateway-api/services/mfgateway/v4/void/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId": null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
       "externalTransactionId":${Properties#externalTransactionId},
 
    "initialTransactionInSeries":null,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" name="Match content of [message]" id="e649787a-f34b-4593-8dba-e69447942043"><con:configuration><path>$['message']</path><content>"Success"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [responseCode]" id="dc785745-b716-4746-bf6f-01feb6fad803"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" name="Check for existence of [externalTransactionId]" id="24345397-d1cc-400b-b704-0768212cfaaa"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [orderId]" id="58522c50-b622-4d04-8e0d-a481c349dfa3"><con:configuration><path>$['orderId']</path><content>${Properties#orderId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator-non-initial payment" id="1e2f6cec-b816-4f2f-b1f6-de83ee347e1e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator-non-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId": null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 34400,
    "initialTransactionInSeries": false,
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="35871613-3b60-4023-856a-be33229a0941" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get authorize transactionid" id="e8632f3c-00a7-4e0a-a647-8542f28990c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Get authorize orderid" id="54acaba6-669c-489b-afad-89727a2c64bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="groovy" name="Get express id" id="d7358e9c-73e8-4ade-8aec-c782db5ac891"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator-non-initial payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator-non-initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST capture through the modulator-non-initial payment" id="3f30ffe8-809b-4f0b-b6bc-7881548c432e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST capture through the modulator-non-initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/capture/2560791417</con:endpoint><con:request>{
    "orderId": ${Properties#orderId},
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "amount": 34400,
     "externalTransactionId":${Properties#externalTransactionId},
      "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "initialTransactionInSeries": false,
    "card": {
         "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="55c0eba4-af87-43da-8f5e-86766efd06bb" name="Match content of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>${Properties#expressNetworkTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST sale series for budget plan- 1 initial payment" id="02d99884-2f70-4e51-881b-23d5bafc0963"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale series for budget plan- 1 initial payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
     "transactionAmount": 98800,
    "initialTransactionInSeries": true,
    "card": {
       "cvvNumber": "901",
        "type": "VI",
        "accountNumber": "4960049010100011",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="28226c5b-cf06-4af0-b34d-5b0d9fd5d8a0" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="0f549fb7-1540-4cd9-845e-efde733d9ef2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale series for budget plan- 1 initial payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale series for budget plan- 1 initial payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST sale series for budget plan-2nd payment" id="8512924c-1a93-49fd-b848-75523a7c73ab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale series for budget plan-2nd payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
     "transactionAmount": 2000,
    "initialTransactionInSeries": false,
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "card": {
        "cvvNumber": "901",
        "type": "VI",
        "accountNumber": "4960049010100011",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1d9bd45b-df48-4cc6-b28b-aa5ac5a55f1b" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="b2a2c620-e713-409a-8cbb-7fa29252e85b" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585865844873</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>6ad5b791-f7d3-484c-b968-6</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44332714</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST sale series for budget plan- 1 initial payment#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>15499A</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637">
   <message>Approved</message>
   <responseTime>1585865844873</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>6ad5b791-f7d3-484c-b968-6</orderId>
   <externalTransactionId>44332714</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>000093802441377</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>15499A</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get network transaction id of previous series" id="32489a5a-f648-4d2c-b8d1-01f596e495c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale series for budget plan-2nd payment#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale series for budget plan-2nd payment"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST sale series for budget plan-3rd payment" id="67976ef6-b6a3-4ffe-9b49-3f02286d52b6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale series for budget plan-3rd payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
     "transactionAmount": 4000,
    "initialTransactionInSeries": false,
     "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
    "card": {
        "cvvNumber": "901",
        "type": "VI",
        "accountNumber": "4960049010100011",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43bb1c49-3528-4b51-9f9a-e4a22a632a7c" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="4cc0b6d8-7eb2-47c0-a4e7-165a44246abe" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585866079852</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>ecada844-8e4d-40db-90f5-e</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44333071</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST sale series for budget plan- 1 initial payment#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>15510A</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637">
   <message>Approved</message>
   <responseTime>1585866079852</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>ecada844-8e4d-40db-90f5-e</orderId>
   <externalTransactionId>44333071</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>000093804791386</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>15510A</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="c43deabf-4374-4db0-bec6-b22fe00fdc30" name="Message Content Assertion 2"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:message[1]</con:xpath><con:element>message</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>Approved</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseTime[1]</con:xpath><con:element>responseTime</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>1585866079852</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:responseCode[1]</con:xpath><con:element>responseCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>000</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]</con:xpath><con:element>threadId</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:threadId[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:orderId[1]</con:xpath><con:element>orderId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>ecada844-8e4d-40db-90f5-e</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:externalTransactionId[1]</con:xpath><con:element>externalTransactionId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>44333071</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:initialTransactionInSeries[1]</con:xpath><con:element>initialTransactionInSeries</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>false</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:expressNetworkTransactionId[1]</con:xpath><con:element>expressNetworkTransactionId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>${POST sale series for budget plan-2nd payment#Response#$['expressNetworkTransactionId']}</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]</con:xpath><con:element>fraudResponse</con:element><con:type xsi:nil="true"/><con:operator>exists</con:operator><con:enabled>false</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:fraudResponse[1]/@null</con:xpath><con:element>@null</con:element><con:type/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>true</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637';
//ns1:Response[1]/ns1:authCode[1]</con:xpath><con:element>authCode</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>15510A</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay03.dev.medfusion.net/mfgateway-api/services/mfgateway/v4/sale/2560805637">
   <message>Approved</message>
   <responseTime>1585866079852</responseTime>
   <responseCode>000</responseCode>
   <threadId null="true"/>
   <orderId>ecada844-8e4d-40db-90f5-e</orderId>
   <externalTransactionId>44333071</externalTransactionId>
   <initialTransactionInSeries>false</initialTransactionInSeries>
   <expressNetworkTransactionId>000093804791386</expressNetworkTransactionId>
   <fraudResponse null="true"/>
   <authCode>15510A</authCode>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST authorize through the modulator" id="19f3166a-70a7-4640-8c88-f7219fb75637"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST authorize through the modulator" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/authorize/2560791417</con:endpoint><con:request>{
    "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
        "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 100000,
    "initialTransactionInSeries": true,
    "card": {
        "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
        "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4cc993e9-8622-46d8-9968-a3d01cb57f00" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aba19280-a57d-45e8-82fb-c15845c8bd3c" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script -Get transaction id" id="fb218154-6f1c-4b62-8618-282e8a7a335c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script -Get order id" id="8fbbf9c3-7472-4c35-9e92-d4144cf57b8c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;


def id = context.expand( '${POST authorize through the modulator#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')




</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script -Get express id for 2nd authorize" id="59e00944-3021-42e0-b92e-9378a9c9fdab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST authorize through the modulator#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST authorize through the modulator"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator(subsequent)" id="12e45949-4fe0-418f-b0e3-6968acdada3a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator(subsequent)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
   "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 100000,
       "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
         "initialTransactionInSeries":false,
           
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7a1c90d6-bf7a-4ad6-97bf-4f16aa067689" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0374cf08-8399-4aa0-a6d9-964630500b92" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get express id for 2nd sale" id="3a18c2a7-c740-43fd-8a5b-bb07fc6f9f7e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${POST sale through the modulator(subsequent)#Response#$.expressNetworkTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST sale through the modulator(subsequent)"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.expressNetworkTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("expressNetworkTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST sale through the modulator(subsequent)-2nd sale" id="52d7502c-0e4a-4b47-961c-2d9a0b618add"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2eadc3db-0169-45d5-95a2-ad7e4c7a4c56" name="POST sale through the modulator(subsequent)-2nd sale" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay01.demo.medfusion.net:8081/mfgateway-api/services/mfgateway/v4/sale/2560791417</con:endpoint><con:request>{
   "orderId":null,
     "threadId":null,
    "mfGatewayConsumer": {
        "accountNumber": "23345",
        "consumerName": "Test patient"
    },
    "mfGatewayMerchant": {
       "paymentSource": "OLBP"
    },
    "comment1": "hello",
    "comment2": " Test",
    "transactionAmount": 200000,
       "expressNetworkTransactionId":${Properties#expressNetworkTransactionId},
         "initialTransactionInSeries":false,
           
    "card": {
       "cvvNumber": "222",
        "type": "VI",
        "accountNumber": "4895281000000006",
        "expirationDate": "1225",
        "trackData": null,
        "bin": "489528",
        "cardPresent": false
    },
    "billToAddress": {
         "name": "Jane",
        "zipCode": "87239",
          "middleInitial": null,
        "lastName": "Patient",
        "companyName": "Medfusion",
        "addressLine1": "123 Rainbow colony",
        "addressLine2": "",
        "addressLine3": null,
        "city": "cary",
        "state": "NC",
        "country": "US",
        "zipCode": "27518",
        "email": "",
        "phone": ""
    }
}</con:request><con:assertion type="JsonPath Match" id="069c4050-d684-4a87-bf91-7dfc9cb88c6c" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce760500-3444-4e8c-ba1c-52d48bb34297" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09d1a6b1-f0f2-41c8-a8be-cb3f5147c157" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d2ecc143-ea4c-45d9-a5b3-6795ad01c777" name="Match content of [initialTransactionInSeries]"><con:configuration><path>$['initialTransactionInSeries']</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7a1c90d6-bf7a-4ad6-97bf-4f16aa067689" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0374cf08-8399-4aa0-a6d9-964630500b92" name="Check for existence of [expressNetworkTransactionId]"><con:configuration><path>$['expressNetworkTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d5c54e2e-71ee-4502-a662-9f7c026ffee8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a61abc31-1b1a-4628-8605-f824879bc169</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b00714c7-f9f9-4969-aa0d-0fda589723e1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8bf6996f-9dc4-4de4-be99-7a51870ede5c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>48aeb5db-4f50-4fa5-8efd-83a399355c75</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>59be85c8-01b3-44f1-8780-530bae265d82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3537e404-76ee-47a1-8145-16cd43ff5428</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cf7b36e0-0ae7-482a-8831-ae6815d99b44</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>855e8e94-deec-4cfa-adcb-dad05d549d84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>62baae7c-026a-475a-a7ff-5279dab5752e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>54ceb6d2-9fbe-409f-8616-ccca69dd3d3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a402829-b64f-46e8-9ca8-153f7e1d39ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dd1721c5-9fcb-464f-83f7-5315fabec38e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e0baac8-3a14-4af1-9244-f9330ad70eb4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30fa2db2-0076-48de-b910-b95af5e74719</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f902d976-8d1d-4515-ba32-6ad55e39f19b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f5268c-e618-43bb-a316-c238f97d9281</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13e74273-7051-4664-95e1-4e5e0762b4b2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8476c6b-4261-4593-bdf4-1b00fbc63db0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>61618669-442c-45df-8152-34a8de5231e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ba62eb2-c4ed-4c4d-806f-3f17b7411e95</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd5a1bc6-3bf1-4b41-ac69-26d81b2b9995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>de8d1c3a-7ac2-40c0-804d-e3efe8be1860</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5890964c-a86d-4d2e-8e36-39e101dd113f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e492ed3b-74ba-41eb-8d84-7d13de81b840</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>304c8d37-d867-4867-b95d-97884ece6b2b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3861431c-06a0-4a8b-87d2-73e7e3e029cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f7369f82-bcf3-4e20-9e3e-147b27981651</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94a42d34-e944-4330-92af-9c5f58f7c482</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ea7dff6-bc6f-4851-8449-439a46dcfe14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d67d5bf5-1a9e-404c-947f-1de8523c16dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d196dc48-e107-409e-ae08-571dd84b84ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9df84187-0e01-4cfc-bb5d-5a1971f05bcb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ad6e7be-859a-436e-b76b-ecf5ac332836</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d25d1686-4b7d-4caf-8cae-05df7e4df210</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bcd8c55f-0234-4f67-aa01-7b8332f3f368</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35f3e719-7935-41af-bbfb-065e0d854d88</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35846ab0-c797-4c51-9709-47333fcf1c35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d71e830-f4e5-4e35-b371-a12299e19cf4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5baeafbf-734c-430c-b0ac-73aa5432af9f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50786732-e251-4f19-bbdf-fa29599b709b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aa4001c4-2027-4490-9dc2-a68afacad511</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8c5c650-74a6-42b0-a0a0-c0760a12664f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ea3361-6808-4a10-bfdb-d2907d8c8c41</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa40f52e-3f78-48fe-82f4-44e7ac098ce9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="276c4271-c8c4-46f4-95ea-572cc956f18d" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Demo AWS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" zephyrTestName="" zephyrTestId=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="67758495-bb70-4a8a-9e9b-a7301bc8a851"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderId</con:name><con:value>"1baa5a8d-e936-4a48-ba29-f"</con:value></con:property><con:property><con:name>externalTransactionId</con:name><con:value>"63594052"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST token-Pay Customer" id="051a3f62-f67a-4129-b85e-5cc7da8179d9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="c382f4f4-c4df-47b4-9797-f46fe36ec207" name="POST token-Pay Customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-pt-app01.demo.medfusion.net:8080/api-customer/services/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/tokens</con:endpoint><con:request>{
  "clientId": "NGPayTeamTestClient",
  "clientSecret":"nUeddXeawVw4GP1uRhWwhIbMveWlpVXEfhCLseM6BiMMk8LUuct7tVGupMCje7cG",
  "scope": "api:pay"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="3e75155b-bf3b-4f57-80d8-dfa4ad819812" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7987b6b7-1cef-406b-aa51-b7c30d0f5deb" name="Match content of [clientId]"><con:configuration><path>$['clientId']</path><content>"NGPayTeamTestClient"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="050ef050-15f6-4c31-bfe8-4b782691484e" name="Check for existence of [token]"><con:configuration><path>$['token']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Valid authorize" id="4b06925b-4be8-46a2-a747-9bdde35f9a64"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid authorize" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791704/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9000,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Authorized without security" id="7f7c3466-1831-430d-b178-e578e10fb830"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Authorized without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://mefpungnx2.execute-api.us-east-2.amazonaws.com/Development/v1/customers/87b7e73a-ddab-4849-9af9-467b32c95ef2/pay/merchants/2560791218/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9800,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJUZXN0QVBJQ3VzdG9tZXJDbGllbnQyVjEiLCJleHAiOjE2MDI3MDkwOTUsInNjb3BlIjpbImFwaTpwYXRpZW50LWNsaW5pY2FsLWRhdGEiXX0.DYSZwvl4jJYcyxEJBLv-94ZjOSctM9egK4iIoHMoQuY</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJUZXN0QVBJQ3VzdG9tZXJDbGllbnQyVjEiLCJleHAiOjE2MDI3MDkwOTUsInNjb3BlIjpbImFwaTpwYXRpZW50LWNsaW5pY2FsLWRhdGEiXX0.DYSZwvl4jJYcyxEJBLv-94ZjOSctM9egK4iIoHMoQuY</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get order id of authorize" id="9562da6f-ac1f-4689-90ad-3a31a0762807"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id of authorize" id="0444fb2a-0af2-4c6f-9a01-f933a2b12ca8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Valid capture" id="644d0586-2f2b-47bd-b88f-4f10cd74e9f6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid capture" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/capture</con:endpoint><con:request>{
"orderId":${Properties#orderId},
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 9000,
"externalTransactionId":${Properties#externalTransactionId},
"initialTransactionInSeries":true

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f1e7bb97-3502-41b2-84e9-721a0dd53397" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid authorize 2" id="a757ff82-94f4-4363-a476-91a88f9c6cb5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid authorize 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get order id of authorize" id="6cee6aeb-947f-45e9-bfe0-b75820068dac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize 2#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get transaction id of authorize" id="f1b29e69-6e1e-4718-bb53-ee00e5bcede8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize 2#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Capture without security" id="e88c7114-eca4-4b1a-b1a6-832e16b8b3ca"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Capture without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/capture</con:endpoint><con:request>{
"orderId":${Properties#orderId},
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 900,
"externalTransactionId":${Properties#externalTransactionId},
"initialTransactionInSeries":true,

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJUZXN0QVBJQ3VzdG9tZXJDbGllbnQyVjEiLCJleHAiOjE2MDI3MDkwOTUsInNjb3BlIjpbImFwaTpwYXRpZW50LWNsaW5pY2FsLWRhdGEiXX0.DYSZwvl4jJYcyxEJBLv-94ZjOSctM9egK4iIoHMoQuY</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJUZXN0QVBJQ3VzdG9tZXJDbGllbnQyVjEiLCJleHAiOjE2MDI3MDkwOTUsInNjb3BlIjpbImFwaTpwYXRpZW50LWNsaW5pY2FsLWRhdGEiXX0.DYSZwvl4jJYcyxEJBLv-94ZjOSctM9egK4iIoHMoQuY</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Partial valid capture" id="c5926363-d5ee-4d05-b80a-9be223b9ce10"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Partial valid capture" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/capture</con:endpoint><con:request>{
"orderId":${Properties#orderId},
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 900,
"externalTransactionId":${Properties#externalTransactionId},
"initialTransactionInSeries":true

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale" id="907dbe78-e1e4-4934-82bf-b54ffe65a7ce"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 7800,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for void" id="3725e6b9-b3c9-4180-b80e-f52fafd570fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Sale without security" id="d7841e87-1126-4a4f-a9c5-8f018e5e2b7c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Sale without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 7800,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsmtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9DghM</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsmtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9DghM</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Unauthorized capture" id="89ee9a90-b95d-485b-b248-a0643a9a4501"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Unauthorized capture" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/capture</con:endpoint><con:request>{
"orderId":"29349093204-jh9324-adj",
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 900,
"externalTransactionId":"928459045",
"initialTransactionInSeries":true

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Void without security" id="831b1362-4385-4746-b2d7-3d945f558163"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Void without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/void</con:endpoint><con:request>{
"orderId": null,
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"externalTransactionId":${Properties#externalTransactionId}

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsmtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9DghM</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsmtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9DghM</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get original sale order id" id="60bae0dd-1281-417a-b330-7da934469f77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Void the sale" id="e87cc8db-c65f-41bf-91ed-42d9f761216d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Void the sale" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/void</con:endpoint><con:request>{
  "comment": "Voiding original transaction",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Void the sale again" id="702510b4-3230-4f15-b802-40d800b272e4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Void the sale again" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/void</con:endpoint><con:request>{
  "comment": "Voiding original transaction",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f7ca7118-c256-4e09-b423-7603655f5b02" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Invalid Transaction Status"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6a585977-42be-44d5-89c1-d66508f76a84" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"-1"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6b0108ef-f3a3-48ed-ba45-c14da64bb88a" name="Match content of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>${Properties#externalTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale 2" id="c0e8a4b1-3d7c-42cd-a5e5-9fb6d348db43"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 7900,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get original sale order id for refund" id="00bd0727-cc5f-4849-a006-4f3e92cc0cae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 2#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for credit" id="a7e5dbb7-5c3e-4cb0-924f-d9321cba7c9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 2#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Credit without security" id="30c05af9-c62a-417e-9065-39edef66449e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Credit without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/credit</con:endpoint><con:request>{
"orderId": null,
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"transactionAmount":7900,
"externalTransactionId":${Properties#externalTransactionId}
}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsmtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9DghM</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsmtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9DghM</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Full credit" id="ce17a1a3-bf8c-4e83-be79-e0d850ef3628"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Full credit" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/credit</con:endpoint><con:request>{
  "comment": "Amount to be refunded",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId},
  "transactionAmount": 7900
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="67829a5a-7b18-45d6-93a2-5b18139c4bb8" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale 3" id="99b5f8e4-0249-478b-bf3c-3c4b5a375c82"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale 3" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 8100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get  sale order id for refund" id="969a26f8-411d-422d-ab6a-35dcc82555c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 3#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 3"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get transaction id for credit" id="8597354d-213f-4a91-a5e0-a089f8c86c65"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 3#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 3"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Refund more than the payment" id="b953efa2-e8b7-49bc-b104-82ee3d7d18fc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Refund more than the payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/credit</con:endpoint><con:request>{
  "comment": "Amount to be refunded",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId},
  "transactionAmount": 8200
  
  }</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cde80728-e465-4185-8b60-ee579febfa10" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"RETURN AMOUNT EXCEEDS ORIGINAL TRANSACTION AMOUNT"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="df0413e3-7c00-420d-9d66-0104029a34e4" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"-1"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="75d5de10-e902-46dd-9379-abe481af5b55" name="Match content of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>${Properties#externalTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale 4" id="0b07088d-a16c-4d5c-a130-b1de287b4d0a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale 4" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 8100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get  sale order id for refund" id="7b9aa4d1-6304-4cb0-b9ec-e6700b1db79c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 4#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 4"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Copy of Get transaction id for credit" id="1b6bc15e-a343-4964-b59b-793a1e0ed93a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 4#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 4"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Partial credit" id="a6b4aa98-f74b-41c4-b59b-5cb98950a873"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Partial credit" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/credit</con:endpoint><con:request>{
  "comment": "Amount to be refunded",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId},
  "transactionAmount": 700
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Notify" id="c1206c48-8adf-4fbe-a1be-99c8ec672456"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="1e9e2140-8d94-4661-b348-c052746b4375" name="Notify" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/notify</con:endpoint><con:request>{
  "applicationID": "83984",
  "applicationName": "terminal",
  "approvalNumber": "aid90",
  
  "card": {
    "accountNumber": "4111111111111111",
    "bin": "411111",
    "cardPresent": true,
    "cvvNumber": "string",
    "expirationDate": "string",
    "trackData": ";4111111111111111=17081014764094900000?",
    "type": "MC"
  },

  "customerId": 20624,
  "emvTags": "0",
"hostResponseMessage": "Approved",
  "initialTransactionInSeries": true,
  "message": "This is a POS payment",
  "mfGatewayConsumer": {
    "accountNumber": "KJHK890",
    "consumerId": "8990",
    "consumerName": "JANE"
  },
  "mfGatewayMerchant": {
   
    "paymentSource": "TRML"

  },
  
  
  "paymentMethod": "POS",
  "paymentType": "SALE",
  "pinVerified": "true",
  "requestType": "string",
  
  "transactionAmount": 22,
  "transactionType": "SALE"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="691010fe-0705-4673-94ee-3eaaa7bf8664" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Store callback url for Pay customer" id="91e61b75-5a20-4d92-aeae-fd107bf81ee9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="Store callback url for Pay customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://d3-splunkm01.dev.medfusion.net/en-GB/app/search/search?q=search%20index%3D%22demo_mfgateway%22%20source%3D%22%2Fapp%2Fmfpay-gateway-reporting_demo%2Flog%2Fserver.log%22%20&amp;sid=1602707364.1004777&amp;display.page.search.mode=smart&amp;dispatch.sample_ratio=1&amp;earliest=&amp;latest="
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b6a86a33-89f8-4d90-b036-22b8ab20eb87" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token-Pay Customer#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Store callback url  for ngo using token of pay customer" id="b28b5897-a811-4f1d-be65-9a7bd3604dd5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="Store callback url  for ngo using token of pay customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/4ee78dbb-7b13-4c4d-95a5-b6d0cd6b96b7/pay/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://d3-splunkm01.dev.medfusion.net/en-GB/app/search/search?q=search%20index%3D%22demo_mfgateway%22%20source%3D%22%2Fapp%2Fmfpay-gateway-reporting_demo%2Flog%2Fserver.log%22%20&amp;sid=1602707364.1004777&amp;display.page.search.mode=smart&amp;dispatch.sample_ratio=1&amp;earliest=&amp;latest="
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6cb5c2ae-c3de-4d2d-821a-2e0b8fc9b56d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Cusomer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token-Pay Cusomer#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Store callback url  for pay customer with invalid auth" id="c637c2c0-5622-44cf-a17b-cd366ef87d73"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="Store callback url  for pay customer with invalid auth" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://d3-splunkm01.dev.medfusion.net/en-GB/app/search/search?q=search%20index%3D%22demo_mfgateway%22%20source%3D%22%2Fapp%2Fmfpay-gateway-reporting_demo%2Flog%2Fserver.log%22%20&amp;sid=1602707364.1004777&amp;display.page.search.mode=smart&amp;dispatch.sample_ratio=1&amp;earliest=&amp;latest="
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6cb5c2ae-c3de-4d2d-821a-2e0b8fc9b56d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9Dgh</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9Dgh</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="View callback url for Pay customer" id="c00c8658-556f-462a-bd0d-4ae6ca77d058"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="View callback url for Pay customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://d3-splunkm01.dev.medfusion.net/en-GB/app/search/search?q=search%20index%3D%22demo_mfgateway%22%20source%3D%22%2Fapp%2Fmfpay-gateway-reporting_demo%2Flog%2Fserver.log%22%20&amp;sid=1602707364.1004777&amp;display.page.search.mode=smart&amp;dispatch.sample_ratio=1&amp;earliest=&amp;latest="
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b6a86a33-89f8-4d90-b036-22b8ab20eb87" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="e2a25cfd-4047-477c-8e52-8d20d4617bfe" name="Match content of [data]"><con:configuration><path>//data[1]/text()</path><content>${Store callback url for ngo#RawRequest#$['callbackURL']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token-Pay Customer#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="View callback url for ngo using token of pay customer" id="f0bce9b0-2881-4a9b-9e1a-8632d62d973b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="View callback url for ngo using token of pay customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/4ee78dbb-7b13-4c4d-95a5-b6d0cd6b96b7/pay/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://d3-splunkm01.dev.medfusion.net/en-GB/app/search/search?q=search%20index%3D%22demo_mfgateway%22%20source%3D%22%2Fapp%2Fmfpay-gateway-reporting_demo%2Flog%2Fserver.log%22%20&amp;sid=1602707364.1004777&amp;display.page.search.mode=smart&amp;dispatch.sample_ratio=1&amp;earliest=&amp;latest="
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6cb5c2ae-c3de-4d2d-821a-2e0b8fc9b56d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Cusomer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token-Pay Cusomer#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="View callback url  for pay customer using invalid auth" id="1975be31-faaa-4d9a-a16c-b07a98d5ee98"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="View callback url  for pay customer using invalid auth" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://d3-splunkm01.dev.medfusion.net/en-GB/app/search/search?q=search%20index%3D%22demo_mfgateway%22%20source%3D%22%2Fapp%2Fmfpay-gateway-reporting_demo%2Flog%2Fserver.log%22%20&amp;sid=1602707364.1004777&amp;display.page.search.mode=smart&amp;dispatch.sample_ratio=1&amp;earliest=&amp;latest="
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b6a86a33-89f8-4d90-b036-22b8ab20eb87" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9Dgh</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJOR1BheVRlYW1UZXN0Q2xpZW50IiwiZXhwIjoxNjAyODU4MTEwLCJzY29wZSI6WyJhcGk6cGF5Il19.f9l2sF0Wozhd0HJoTuuSH3CziSWYKCYGt-SWKi9Dgh</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Sale against a ngpay merchant with Pay customer token" id="94fdedb8-abbc-4287-ab21-dcd1e50b4dba"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Sale against a ngpay merchant with Pay customer token" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560784241/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 8100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token-Pay Customer#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Valid authorize" id="1996f911-b94e-49ee-b04a-ed4095cb585b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Copy of Valid authorize" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://apisandbox.medfusion.net/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791704/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 394,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4111111111111111",
"expirationDate": "1212",
"trackData": "",
"bin": "",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token-Pay Customer#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e751e354-df4c-40c2-b898-79249a214ecd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>59461958-95ff-41df-9aab-20aa5ca695c2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0309204-dd7c-4775-9019-33c379cb347e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8028b69c-e770-46c5-9911-a3c276444d76</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>320019ee-2d3a-45d5-aa28-3673c751c9ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>39ab582d-9063-4464-8173-f48c8d3c02da</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e1afe42-fac6-40ee-9ec9-fd3eca680aef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e793bcc6-d14d-4830-b497-f5ae1a3244d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d29b7e37-adab-4b8e-943c-363c77e2b177</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c53d8b5-e530-422c-8224-1fa1706269a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90bd53f9-77b8-4aef-b4db-f486c9784d07</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b19a7b56-10a7-4b9e-92ef-01d0d3064446</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce8f69e9-c358-4109-a727-4f3985fbdf2f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56813240-a62c-4554-a6f1-9c7552eea9e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>003fdc18-d108-4630-bdc4-200b1db5bd4b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee550e74-f01b-4d95-b5f9-b76f27ba7f1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8ec7e424-7013-4e49-be82-b6b239ecbbf7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b5883765-e546-4088-8506-4d1150c0b4ac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="ecaa477a-dd8c-4f0e-9232-3a66bb17557a" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="demo gateway proxy-Pay customer" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" zephyrTestName="" zephyrTestId=""><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="f7cd1f8e-1ff0-47e8-8cec-207f03692b6f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>orderId</con:name><con:value>"c25dbf10-af41-4ae6-ac06-5"</con:value></con:property><con:property><con:name>externalTransactionId</con:name><con:value>"73254171"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST token" id="a4e4a990-bcc2-4e99-a912-23f6242d62c4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="c382f4f4-c4df-47b4-9797-f46fe36ec207" name="POST token" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-pt-app01.demo.medfusion.net:8080/api-customer/services/v1/customers/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/tokens</con:endpoint><con:request>{
  "clientId": "NGPayTeamTestClient",
  "clientSecret":"nUeddXeawVw4GP1uRhWwhIbMveWlpVXEfhCLseM6BiMMk8LUuct7tVGupMCje7cG",
  "scope": "api:pay"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="3e75155b-bf3b-4f57-80d8-dfa4ad819812" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7987b6b7-1cef-406b-aa51-b7c30d0f5deb" name="Match content of [clientId]"><con:configuration><path>$['clientId']</path><content>"NGPayTeamTestClient"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="050ef050-15f6-4c31-bfe8-4b782691484e" name="Check for existence of [token]"><con:configuration><path>$['token']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Valid authorize" id="47c4e079-b1c2-4b50-956a-f7664b530a58"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid authorize" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9000,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Authorized without security" id="5dbf9348-e652-4e4d-924e-b2747bf7ea83"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Authorized without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/pay/merchants/2560791617/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9800,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJUZXN0QVBJQ3VzdG9tZXJDbGllbnQyVjEiLCJleHAiOjE2MDI3MDkwOTUsInNjb3BlIjpbImFwaTpwYXRpZW50LWNsaW5pY2FsLWRhdGEiXX0.DYSZwvl4jJYcyxEJBLv-94ZjOSctM9egK4iIoHMoQuY</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJUZXN0QVBJQ3VzdG9tZXJDbGllbnQyVjEiLCJleHAiOjE2MDI3MDkwOTUsInNjb3BlIjpbImFwaTpwYXRpZW50LWNsaW5pY2FsLWRhdGEiXX0.DYSZwvl4jJYcyxEJBLv-94ZjOSctM9egK4iIoHMoQuY</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id of authorize" id="206c57b2-145c-4286-add9-fe0b16e23f2a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Get order id of authorize" id="a6582710-0395-4365-af63-aea827c5970b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Valid capture" id="91a0b9d3-7f11-4c33-8198-2c18de8b3661"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid capture" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/capture</con:endpoint><con:request>{
"orderId":${Properties#orderId},
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 9000,
"externalTransactionId":${Properties#externalTransactionId},
"initialTransactionInSeries":true

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f1e7bb97-3502-41b2-84e9-721a0dd53397" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid authorize 2" id="922e81e3-0048-487a-bdbf-5d3a92dd9675"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid authorize 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get order id of authorize" id="a626c6aa-3d27-44d1-9513-4d8dfada39f5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize 2#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get transaction id of authorize" id="08f5427b-596a-4d2d-b19d-61699684d724"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid authorize 2#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid authorize 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Capture without security" id="829234e6-ae52-41a7-a761-66535957873e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Capture without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/capture</con:endpoint><con:request>{
"orderId":${Properties#orderId},
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 900,
"externalTransactionId":${Properties#externalTransactionId},
"initialTransactionInSeries":true,

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Partial valid capture" id="ab0798c7-2783-4f21-aa7a-68713d6b4794"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Partial valid capture" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/capture</con:endpoint><con:request>{
"orderId":${Properties#orderId},
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 900,
"externalTransactionId":${Properties#externalTransactionId},
"initialTransactionInSeries":true

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale" id="b22992ed-8b14-42fc-a0b1-be10d5e2d269"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/sale</con:endpoint><con:request>{
"mfGatewayConsumer": {
"accountNumber": "9992346",
"consumerName": "Benita Samuel",
"consumerId":"839403"
},
"mfGatewayMerchant": {
"paymentSource": "VCS",
"merchantLocation":"Northland healthplex - Urgent care unit",
"merchantLocationId":"9289245",
"merchantName":"Customer test merchant",
"staffId":"21564",
"staffName":"Payments All"

},
"transactionAmount": 4150,
"initialTransactionInSeries": true,
"customerId":"10921",

"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",

"bin": "496004",
"cardPresent": false
},
"billToAddress": {

"zipCode": "87239",
"middleInitial": "E",
"firstName":"Benita",
"lastName": "Samuels",
"companyName": "Something",
"addressLine1": "123 Partktop dr",
"addressLine2": "#444",
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "jerald@gmail.com",
"phone": "3883038282"
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for void" id="58efe614-6084-4b4b-9ffd-0947fdf0bcbd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Sale without security" id="9c6e65b0-619d-4083-9868-762d6460e22e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Sale without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 7800,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Unauthorized capture" id="814cf108-66bf-4f30-b251-4b40d07cf607"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Unauthorized capture" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/capture</con:endpoint><con:request>{
"orderId":"29349093204-jh9324-adj",
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"amount": 900,
"externalTransactionId":"928459045",
"initialTransactionInSeries":true

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Void without security" id="3635f7ca-168a-41c0-a8f7-ce0db22debfe"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Void without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/void</con:endpoint><con:request>{
"orderId": null,
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"externalTransactionId":${Properties#externalTransactionId}

}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Get original sale order id" id="5fee1035-0268-48a1-9f8d-c2c13f2b4ab2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Void the sale" id="7138fb5b-c9a5-4265-9bf3-cad4e2897bf5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Void the sale" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/void</con:endpoint><con:request>{
  "comment": "Voiding original transaction",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Void the sale again" id="2b893234-dc28-4018-9d61-a18b02285f76"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Void the sale again" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/void</con:endpoint><con:request>{
  "comment": "Voiding original transaction",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f7ca7118-c256-4e09-b423-7603655f5b02" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Invalid Transaction Status"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6a585977-42be-44d5-89c1-d66508f76a84" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"-1"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6b0108ef-f3a3-48ed-ba45-c14da64bb88a" name="Match content of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>${Properties#externalTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale 2" id="36f2f962-0c0b-42fe-9ad1-146737ec80c5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 7900,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get original sale order id for refund" id="1927b8af-6b50-46e8-bb4f-55f4c1c05a33"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 2#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Get transaction id for credit" id="9b618c01-9d3a-40ff-8b5c-71a78eafe374"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 2#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 2"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Credit without security" id="08824e5f-88fa-4668-a470-c17b469cb3c2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Credit without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/credit</con:endpoint><con:request>{
"orderId": null,
"threadId":null,
"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"comment1": "hello",
"comment2": " Test",
"transactionAmount":7900,
"externalTransactionId":${Properties#externalTransactionId}
}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Full credit" id="16a297fe-1796-4a57-80a5-24f5386e8985"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Full credit" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/credit</con:endpoint><con:request>{
  "comment": "Amount to be refunded",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId},
  "transactionAmount": 7900
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="67829a5a-7b18-45d6-93a2-5b18139c4bb8" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale 3" id="8597b8fb-cf26-4ade-b327-ee9b5b1361f0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale 3" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 8100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Get  sale order id for refund" id="f4bb3ffa-f742-4576-b77a-e06b0753a97b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 3#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 3"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get transaction id for credit" id="c5fe8f03-9deb-4c92-8323-5d5cc98cd4ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 3#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 3"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Refund more than the payment" id="b67f81bb-e8b9-498e-8a02-43a99a928542"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Refund more than the payment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/credit</con:endpoint><con:request>{
  "comment": "Amount to be refunded",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId},
  "transactionAmount": 8200
  
  }</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cde80728-e465-4185-8b60-ee579febfa10" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"RETURN AMOUNT EXCEEDS ORIGINAL TRANSACTION AMOUNT"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="df0413e3-7c00-420d-9d66-0104029a34e4" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"-1"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="75d5de10-e902-46dd-9379-abe481af5b55" name="Match content of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>${Properties#externalTransactionId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid sale 4" id="5dbe13d1-cab3-435d-bd30-d2eb98384a01"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid sale 4" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 8100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Copy of Get  sale order id for refund" id="6577fa64-2938-4148-9b32-6f15d2577c08"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 4#Response#$.orderId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 4"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def orderid = jsonSlurper.orderId
assert orderid!=null
log.info orderid
testRunner.testCase.testSteps["Properties"].setPropertyValue("orderId",'"'+orderid+'"')

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Copy of Get transaction id for credit" id="993702e7-bd94-45bd-b9a9-c3aea82354c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import java.net.URLEncoder;

def id = context.expand( '${Valid sale 4#Response#$.externalTransactionId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Valid sale 4"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper!=null
def transid = jsonSlurper.externalTransactionId
assert transid!=null
log.info transid
testRunner.testCase.testSteps["Properties"].setPropertyValue("externalTransactionId",'"'+transid+'"')

</script></con:config></con:testStep><con:testStep type="httprequest" name="Partial credit" id="c93eb677-6b01-4c96-aeb1-9fa77da126de"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Partial credit" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/credit</con:endpoint><con:request>{
  "comment": "Amount to be refunded",
  "customerId": 20624,
  "externalTransactionId":${Properties#externalTransactionId},
  "originalOrderId": ${Properties#orderId},
  "transactionAmount": 700
}</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Notify" id="92ef640b-0add-404c-94dc-84345cbde05e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="1e9e2140-8d94-4661-b348-c052746b4375" name="Notify" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/notify</con:endpoint><con:request>{
  "applicationID": "83984",
  "applicationName": "terminal",
  "approvalNumber": "aid90",
  
  "card": {
    "accountNumber": "4111111111111111",
    "bin": "411111",
    "cardPresent": true,
    "cvvNumber": "string",
    "expirationDate": "string",
    "trackData": ";4111111111111111=17081014764094900000?",
    "type": "MC"
  },

  "customerId": 20624,
  "emvTags": "0",
"hostResponseMessage": "Approved",
  "initialTransactionInSeries": true,
  "message": "This is a POS payment",
  "mfGatewayConsumer": {
    "accountNumber": "KJHK890",
    "consumerId": "8990",
    "consumerName": "JANE"
  },
  "mfGatewayMerchant": {
   
    "paymentSource": "TRML"

  },
  
  
  "paymentMethod": "POS",
  "paymentType": "SALE",
  "pinVerified": "true",
  "requestType": "string",
  
  "transactionAmount": 22,
  "transactionType": "SALE"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="691010fe-0705-4673-94ee-3eaaa7bf8664" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>x-api-key</con:name><con:value>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:value><con:style>HEADER</con:style><con:default>4lhEFOWcWba5WvhpoLJnyaypV3yjaEu8vhJ2Zqti</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST sale with an invalid token" id="739fd125-b510-47d6-851d-3449f6a07be5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="POST sale with an invalid token" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791617/sale</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 8100,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJQYXlBcGlDbGllbnQiLCJleHAiOjE2MDI2OTA0MjYsInNjb3BlIjpbImFwaTpwYXkiXX0.Gu0C_00rE2bvAmqaxPpIwrGA8nH-e0FmkjmLOvPaEGA</con:value><con:style>HEADER</con:style><con:default>Bearer eyJhbGciOiJIUzI1NiIsImtpZCI6InBhcnRuZXJKd3RTeW1tZXRyaWNLZXkifQ.eyJjbGllbnRfaWQiOiJQYXlBcGlDbGllbnQiLCJleHAiOjE2MDI2OTA0MjYsInNjb3BlIjpbImFwaTpwYXkiXX0.Gu0C_00rE2bvAmqaxPpIwrGA8nH-e0FmkjmLOvPaEGA</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Store callback url for Pay Customer" id="c8481ac9-3639-48dd-95af-f798078b0115"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="Store callback url for Pay Customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://en5xb6d5123mrof.m.pipedream.net"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b6a86a33-89f8-4d90-b036-22b8ab20eb87" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="View callback url for pay customer" id="78e9f57a-83a6-47e3-9d65-655edd8410b7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5e4ea6-8f40-4839-9412-ea0964b1e82a" name="View callback url for pay customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/callbackURL</con:endpoint><con:request>{
  "callbackURL": "https://d3-splunkm01.dev.medfusion.net/en-GB/app/search/search?q=search%20index%3D%22demo_mfgateway%22%20source%3D%22%2Fapp%2Fmfpay-gateway-reporting_demo%2Flog%2Fserver.log%22%20&amp;sid=1602707364.1004777&amp;display.page.search.mode=smart&amp;dispatch.sample_ratio=1&amp;earliest=&amp;latest="
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b6a86a33-89f8-4d90-b036-22b8ab20eb87" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="224777da-4c6c-466b-9be1-7130613d8eea" name="Match content of [data]"><con:configuration><path>//data[1]/text()</path><content>${Store callback url for Pay Customer#RawRequest#$['callbackURL']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST token as system" id="522b5c36-4fe5-4770-aaba-cead61a3c11d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="02a5443f-0904-4c6f-9554-65e988e5d51f" name="POST token as system" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://vip-ping.demo.medfusion.net/as/token.oauth2?grant_type=client_credentials&amp;client_id=SystemJwtValidationClientV1&amp;client_secret=jEe2y4nuHT9EtAOMW4oZUY9zAmde4SgXIdmRf1gWBlKmFrk98dVxhKAHzGBspPME</con:endpoint><con:request/><con:assertion type="JsonPath Existence Match" id="82450bed-afbf-4f77-b5cc-1007e8f73650" name="Check for existence of [access_token]"><con:configuration><path>$['access_token']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="986a8037-d7d4-416b-8cc4-ad0bf0e7c214" name="Match content of [token_type]"><con:configuration><path>$['token_type']</path><content>"Bearer"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="48a26895-5e2a-4443-a85a-ddde15b0626c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get callback url in MP as system user" id="b9e462a2-a8d8-47fb-9797-94b888f82088"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="97a030c4-d043-44af-93c9-a9b75d85443a" name="Get callback url in MP as system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v9/apiCustomer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/getCallback</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="b9aa6c43-3679-4f05-bc58-bb45a12457f0" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="6f14b396-cd57-49bf-bfe5-e23a4f5002f9" name="Match content of [data]"><con:configuration><path>//data[1]/text()</path><content>${Store callback url for Pay Customer#RawRequest#$['callbackURL']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>callbackType</con:name><con:value>MERCHANT_PROVISIONED</con:value><con:style>QUERY</con:style><con:default>MERCHANT_PROVISIONED</con:default></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token as system#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token as system#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get customeruuid for pay customerr merchant" id="b2754252-59fb-4270-b13e-799eadaf6e4d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="14f3c0c9-cb85-4542-a0e7-1a500170fe28" name="Get customeruuid for pay customerr merchant" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v9/merchants/2560791617/apiCustomer</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="13d7007a-c304-499c-9997-dd71be41dac2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="ea1051a5-cdb4-4da0-acd3-f5fe758984da" name="Match content of [data]"><con:configuration><path>//data[1]/text()</path><content>d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token as system#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token as system#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get customeruuid for ngo merchant" id="033a9ea7-3b6e-4120-a13f-16e446658689"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="14f3c0c9-cb85-4542-a0e7-1a500170fe28" name="Get customeruuid for ngo merchant" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v9/merchants/2560791637/apiCustomer</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="13d7007a-c304-499c-9997-dd71be41dac2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="6d16b107-20da-4503-94d9-72b8317d112b" name="Match content of [data]"><con:configuration><path>//data[1]/text()</path><content>4ee78dbb-7b13-4c4d-95a5-b6d0cd6b96b7</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token as system#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token as system#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get customeruuid for ngpay merchant" id="8c465d72-f07b-4e1d-828e-5cc6e1682d85"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="14f3c0c9-cb85-4542-a0e7-1a500170fe28" name="Get customeruuid for ngpay merchant" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-py-pay01.dev.medfusion.net:8080/provisioning/services/v9/merchants/2560784241/apiCustomer</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="82129a21-0f0a-4de9-ae3b-69129c9ffd8b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token as system#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token as system#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Valid authorize for ngo merchant" id="5e48712e-5b76-4c7e-b145-0f7367a7c73d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Valid authorize for ngo merchant" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791637/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9000,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Valid authorize for ngo merchant" id="d350fde2-3309-46a7-ba07-33272c6dac02"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="eb58b763-c20a-449c-b9aa-306d8349bbdc" name="Copy of Valid authorize for ngo merchant" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay04.demo.medfusion.net:8083/gateway-proxy/services/v1/customer/d6fba588-4fb5-451d-8d5d-0b6f9b19bdaf/merchant/2560791637/authorize</con:endpoint><con:request>{
	"mfGatewayConsumer": {
"accountNumber": "23345",
"consumerName": "Test patient"
},
"mfGatewayMerchant": {
"paymentSource": "VCS"
},
"transactionAmount": 9000,
"initialTransactionInSeries": true,
"card": {
"cvvNumber": "901",
"type": "VI",
"accountNumber": "4960049010100011",
"expirationDate": "1225",
"trackData": null,
"bin": "496004",
"cardPresent": false
},
"billToAddress": {
"name": "Test",
"zipCode": "87239",
"middleInitial": null,
"lastName": "Patient",
"companyName": "Some company",
"addressLine1": "123 Rainbow dr",
"addressLine2": "",
"addressLine3": null,
"city": "cary",
"state": "NC",
"country": "US",
"zipCode": "27518",
"email": "",
"phone": ""
}
	}
</con:request><con:assertion type="Valid HTTP Status Codes" id="c893f517-bdff-470b-84e9-059ab6cef232" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST token#Response#$['token']}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST token#Response#$['token']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e751e354-df4c-40c2-b898-79249a214ecd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>59461958-95ff-41df-9aab-20aa5ca695c2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0309204-dd7c-4775-9019-33c379cb347e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8028b69c-e770-46c5-9911-a3c276444d76</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>320019ee-2d3a-45d5-aa28-3673c751c9ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>39ab582d-9063-4464-8173-f48c8d3c02da</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e1afe42-fac6-40ee-9ec9-fd3eca680aef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e793bcc6-d14d-4830-b497-f5ae1a3244d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d29b7e37-adab-4b8e-943c-363c77e2b177</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c53d8b5-e530-422c-8224-1fa1706269a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90bd53f9-77b8-4aef-b4db-f486c9784d07</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b19a7b56-10a7-4b9e-92ef-01d0d3064446</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce8f69e9-c358-4109-a727-4f3985fbdf2f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56813240-a62c-4554-a6f1-9c7552eea9e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>003fdc18-d108-4630-bdc4-200b1db5bd4b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee550e74-f01b-4d95-b5f9-b76f27ba7f1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3e21b8f-b544-44a0-be80-eb001340035c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="e0768085-77fc-4c2f-969c-0ba92d16931f" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="EXTERNAL API DEMO" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="Properties" id="4135c3cd-03a3-4c57-a675-dcbcafce2c28"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>mmid</con:name><con:value>2560784241</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Create partner credentials- as finance" id="597c932e-2be9-44ee-bf47-ae8eaa1857af"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Create partner credentials- as finance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername456"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="254185d8-3647-4293-b23d-56f7b64c568f" name="Match content of [username]"><con:configuration><path>$['username']</path><content>${Create partner credentials- as finance#RawRequest#$['username']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9daca940-01c1-4edb-a129-f92d9ab87953" name="Check for existence of [password]"><con:configuration><path>$['password']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="3c3b7cc6-d8bd-4dbe-a1e1-8ca431e5ca03" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners';
//ns1:Response[1]/ns1:id[1]</con:xpath><con:element>id</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>40090</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners';
//ns1:Response[1]/ns1:username[1]</con:xpath><con:element>username</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>testusername123</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners';
//ns1:Response[1]/ns1:password[1]</con:xpath><con:element>password</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>testusername123</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners">
   <id>40090</id>
   <username>testusername123</username>
   <password>c5ZYPLfus18wKyC</password>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET partner credentials- as finance" id="3ee7e574-b4ab-4dd0-8b9c-3b51c09d57d2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="GET partner credentials- as finance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername123"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Check GET partner credentials- as finance" id="a9134960-46c1-42df-ad4e-45cf33a51da3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Check GET partner credentials- as finance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/check</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername123"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${Create partner credentials- as finance#Response#$['username']}</con:value><con:style>QUERY</con:style><con:default>${Create partner credentials- as finance#Response#$['username']}</con:default></con:parameter><con:parameter><con:name>password</con:name><con:value>${Create partner credentials- as finance#Response#$['password']}</con:value><con:style>QUERY</con:style><con:default>${Create partner credentials- as finance#Response#$['password']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update partner credentials- as finance" id="44e162d9-c324-437c-bd82-968997f3abef"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Update partner credentials- as finance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/${Create partner credentials- as finance#Response#$['id']}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a523843c-b0b5-4781-b62c-94e659645a0c" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Create partner credentials- as finance#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5c213617-58c0-45e9-a130-f28bb5dce295" name="Match content of [username]"><con:configuration><path>$['username']</path><content>"Nextgenuser123"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f94496ec-e2cf-4bd4-9db4-0f836d23334a" name="Check for existence of [password]"><con:configuration><path>$['password']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>Nextgenuser123</con:value><con:style>QUERY</con:style><con:default>Nextgenuser123</con:default></con:parameter><con:parameter><con:name>password</con:name><con:value>Nextgenpassword</con:value><con:style>QUERY</con:style><con:default>Nextgenpassword</con:default></con:parameter><con:parameter><con:name>id</con:name><con:value>${Create partner credentials- as finance#Response#$['id']}</con:value><con:style>QUERY</con:style><con:default>${Create partner credentials- as finance#Response#$['id']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Reset partner credentials- as finance" id="0dbba8b0-722f-4246-bc8f-183ab6921d6d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Reset partner credentials- as finance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/${Create partner credentials- as finance#Response#$['id']}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a523843c-b0b5-4781-b62c-94e659645a0c" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Create partner credentials- as finance#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5c213617-58c0-45e9-a130-f28bb5dce295" name="Match content of [username]"><con:configuration><path>$['username']</path><content>"Nextgenuser123"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f94496ec-e2cf-4bd4-9db4-0f836d23334a" name="Check for existence of [password]"><con:configuration><path>$['password']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Delete partner - as finance" id="6e1027a0-8652-42cc-bb1c-19fa35d59f86"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Delete partner - as finance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/${Create partner credentials- as finance#Response#$['id']}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET partner after delete- as finance" id="4f738230-2c74-4342-9325-926e17664e5e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="GET partner after delete- as finance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/check</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername123"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${Update partner credentials- as finance#Response#$['username']}</con:value><con:style>QUERY</con:style><con:default>${Update partner credentials- as finance#Response#$['username']}</con:default></con:parameter><con:parameter><con:name>password</con:name><con:value>nextgenpassword</con:value><con:style>QUERY</con:style><con:default>nextgenpassword</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Create partner credentials- as implementation" id="344c4f9d-f4b5-4753-a8a3-503788604a71"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Create partner credentials- as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername1567"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="254185d8-3647-4293-b23d-56f7b64c568f" name="Match content of [username]"><con:configuration><path>$['username']</path><content>${Create partner credentials- as implementation#RawRequest#$['username']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9daca940-01c1-4edb-a129-f92d9ab87953" name="Check for existence of [password]"><con:configuration><path>$['password']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="3c3b7cc6-d8bd-4dbe-a1e1-8ca431e5ca03" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners';
//ns1:Response[1]/ns1:id[1]</con:xpath><con:element>id</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>40090</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners';
//ns1:Response[1]/ns1:username[1]</con:xpath><con:element>username</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>false</con:enabled><con:expectedValue>testusername123</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners';
//ns1:Response[1]/ns1:password[1]</con:xpath><con:element>password</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>testusername123</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-py-pay01.dev.medfusion.net/provisioning/services/v6/application/rcm/merchants/2560791218/partners">
   <id>40090</id>
   <username>testusername123</username>
   <password>c5ZYPLfus18wKyC</password>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET partner credentials- as implementation" id="473f80ad-85c7-4a4c-8585-fe513a7feec3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="GET partner credentials- as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername123"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Check GET partner credentials- as implementation" id="19ba5d42-489c-48c4-95b4-db9805d758ba"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Check GET partner credentials- as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/check</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername123"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${Create partner credentials- as implementation#Response#$['username']}</con:value><con:style>QUERY</con:style><con:default>${Create partner credentials- as implementation#Response#$['username']}</con:default></con:parameter><con:parameter><con:name>password</con:name><con:value>${Create partner credentials- as implementation#Response#$['password']}</con:value><con:style>QUERY</con:style><con:default>${Create partner credentials- as implementation#Response#$['password']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update partner credentials- as implementation" id="dcad8223-d088-43d9-b140-ca9033021f90"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Update partner credentials- as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/${Create partner credentials- as implementation#Response#$['id']}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a523843c-b0b5-4781-b62c-94e659645a0c" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Create partner credentials- as implementation#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5c213617-58c0-45e9-a130-f28bb5dce295" name="Match content of [username]"><con:configuration><path>$['username']</path><content>"Nextgenuser3456"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f94496ec-e2cf-4bd4-9db4-0f836d23334a" name="Check for existence of [password]"><con:configuration><path>$['password']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>Nextgenuser3456</con:value><con:style>QUERY</con:style><con:default>Nextgenuser3456</con:default></con:parameter><con:parameter><con:name>password</con:name><con:value>Nextgenpassword</con:value><con:style>QUERY</con:style><con:default>Nextgenpassword</con:default></con:parameter><con:parameter><con:name>id</con:name><con:value>${Create partner credentials- as implementation#Response#$['id']}</con:value><con:style>QUERY</con:style><con:default>${Create partner credentials- as implementation#Response#$['id']}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Reset partner credentials- as implementation" id="ff7a8fdf-6cb8-4d38-8f9c-b8fd77466140"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Reset partner credentials- as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/${Create partner credentials- as implementation#Response#$['id']}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a523843c-b0b5-4781-b62c-94e659645a0c" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Create partner credentials- as implementation#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5c213617-58c0-45e9-a130-f28bb5dce295" name="Match content of [username]"><con:configuration><path>$['username']</path><content>"Nextgenuser3456"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f94496ec-e2cf-4bd4-9db4-0f836d23334a" name="Check for existence of [password]"><con:configuration><path>$['password']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Delete partner - as implementation" id="22b39bc2-a04d-4d49-8ead-754f6faa54c4"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="Delete partner - as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/${Create partner credentials- as implementation#Response#$['id']}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET partner after delete- as implementation" id="8ac67e18-4179-4586-a214-05666d23db3d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="605f4115-9831-43f2-97db-811bf93c1305" name="GET partner after delete- as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/v6/application/rcm/merchants/2560784241/partners/check</con:endpoint><con:request>{
  
  "password": "testpassword",
  "username": "testusername123"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="6025613a-ecee-4a05-9936-7ef1fe1be451" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${Update partner credentials- as implementation#Response#$['username']}</con:value><con:style>QUERY</con:style><con:default>${Update partner credentials- as implementation#Response#$['username']}</con:default></con:parameter><con:parameter><con:name>password</con:name><con:value>nextgenpassword</con:value><con:style>QUERY</con:style><con:default>nextgenpassword</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Post sale in demo" id="1c5c79d0-9db7-406f-8368-5329db305dca"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7cdacece-972a-41fe-8cde-0a808ace0548" name="Post sale in demo" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://dm-py-pay05.demo.medfusion.net:8106/mfpay/services/mfgateway/v1/merchants/2560784241/sales</con:endpoint><con:request>{
  "transactionAmount": 32,
  "card": {
    "type": "VI",
    "accountNumber": "4111111111111111",
    "expirationDate": "1225",
    "trackData": "",
    "ccvNumber": "233",
    "bin": "411111",
    "cardPresent": false
  },
  "billToAddress": {
    "name": "Jane test",
    "firstName": "jane",
    "middleInitial": "",
    "lastName": "test",
    "addressLine1": "123 Rainbow dr",
    "addressLine2": "",
    "city": "cary",
    "state": "nc",
    "country": "United states",
    "zipCode": "27539"
  },
  "orderId": "",
  "customerId": "20624",
  "mfGatewayConsumer": {
    "accountNumber": "accountkjd03",
    "consumerName": "jane",
    "consumerId": "3434"
  },
  "mfGatewayMerchant": {
    "merchantLocation": "",
    "merchantLocationId": "",
    "merchantName": "Jakub's 20624 2",
    "staffId": "",
    "staffName": "Gilbert",
    "paymentSource": ""
  }
}</con:request><con:assertion type="JsonPath Existence Match" id="e9f129dd-d73e-4230-83e7-8ee12bc4b371" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d42e743a-a2b4-462c-8e76-16b8b940b6b1" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2c3fb280-5215-4426-aae7-8409c50faea9" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5aaf2ccb-d4a2-47bd-b261-38c2c276c6d0" name="Check for existence of [responseTime]"><con:configuration><path>$['responseTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="904d9fdd-1ede-4009-a491-4a1426c136ae" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHBhcnRuZXIzOmo2d25qUFFUR1dsTXlIdQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHBhcnRuZXIzOmo2d25qUFFUR1dsTXlIdQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Prod sale" id="3eef02ac-318a-432a-8264-263aeff80790"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7cdacece-972a-41fe-8cde-0a808ace0548" name="Prod sale" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://pr-py-pay05.npub.medfusion.net:8106/mfpay/services/mfgateway/v1/merchants/2560785017/sales</con:endpoint><con:request>{
  "transactionAmount":117,
  "card": {
"cvvNumber": "946",
"type": "VI",
"accountNumber": "4485590005754300",
"expirationDate": "0924",
"trackData": null,
"bin": "448559",
"cardPresent": false
},
  "billToAddress": {
    "name": "Jane test",
    "firstName": "jane",
    "middleInitial": "",
    "lastName": "test",
    "addressLine1": "123 Rainbow dr",
    "addressLine2": "",
    "city": "cary",
    "state": "nc",
    "country": "United states",
    "zipCode": "27539"
  },
  "orderId": "",
  "customerId": "24289",
  "mfGatewayConsumer": {
    "accountNumber": "accountkjd03",
    "consumerName": "jane",
    "consumerId": "3434"
  },
  "mfGatewayMerchant": {
    "merchantLocation": "",
    "merchantLocationId": "",
    "merchantName": "Jakub's 20624 2",
    "staffId": "",
    "staffName": "Gilbert",
    "paymentSource": ""
  }
}</con:request><con:assertion type="JsonPath Existence Match" id="e9f129dd-d73e-4230-83e7-8ee12bc4b371" name="Check for existence of [externalTransactionId]"><con:configuration><path>$['externalTransactionId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d42e743a-a2b4-462c-8e76-16b8b940b6b1" name="Match content of [message]"><con:configuration><path>$['message']</path><content>"Approved"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2c3fb280-5215-4426-aae7-8409c50faea9" name="Check for existence of [orderId]"><con:configuration><path>$['orderId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5aaf2ccb-d4a2-47bd-b261-38c2c276c6d0" name="Check for existence of [responseTime]"><con:configuration><path>$['responseTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="904d9fdd-1ede-4009-a491-4a1426c136ae" name="Match content of [responseCode]"><con:configuration><path>$['responseCode']</path><content>"000"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdGU6ZVJMbnhyMmpHZkFWazlB</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdGU6ZVJMbnhyMmpHZkFWazlB</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>92044f3b-a216-4aa3-aef7-800af02ea97c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2ba5299d-b952-4a87-8e87-e70175134930</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="acaf0239-d516-436f-bcd1-dfeefef7ed29" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Provisioning tests" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="httprequest" name="Provision a new merchant as finance without infi id" id="8834d760-de3e-4d75-8868-59b50f5ad711"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as finance without infi id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  "merchantName": "Test BE merchant",
  "merchantLegalName": "infinicept merchant testing",
  "doingBusinessAs": "Robert Pine Realty",
  "externalMerchantId": "12345",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Anchorage",
      "state": "AK",
      "zip": 99501,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD"
  ],
  "accountDetails": {
    "preferredProcessor": "ELEMENT",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "03/16/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1989",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 10000,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Ken",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9a1ae0a7-5339-406d-ab6d-7deed835d817" name="Match content of [payAPICustomer]"><con:configuration><path>$['payAPICustomer']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get a merchant without infinicept id" id="6d4eea5b-d6af-4375-9360-3a2963d1225f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Get a merchant without infinicept id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance without infi id#Response#$['id']}</con:endpoint><con:request>
{
  "merchantName": "WP Test merchant 3",
  "merchantLegalName": "WP Test merchant inc",
  "doingBusinessAs": "WP Test merchant 3",
  "externalMerchantId": "39484",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Berea",
      "state": "OH",
      "zip": 44017,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD", 
"AMEX",
"DISCV"
  ],
  "accountDetails": {
    "preferredProcessor": "ELEMENT",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "06/05/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1948",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 100000,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Matt",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  },
  "infiniceptMerchantApplicationId":"1111"
}


</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="176a773c-e5eb-4f00-9fa7-a5eac285eca9" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Edit  merchant as finance without infi id" id="660899d9-38ab-43ac-95ea-369e637c6b34"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Edit  merchant as finance without infi id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance without infi id#Response#$['id']}/wpSubMerchant?updateType=GENERAL_INFO</con:endpoint><con:request>{
  "merchantName": "Di da merchant",
  "merchantLegalName": "infi merchant testing 2",
  "doingBusinessAs": "Robert Pine Realty",
  "externalMerchantId": "12345",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Anchorage",
      "state": "AK",
      "zip": 99501,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD"
  ],
  "accountDetails": {
    "preferredProcessor": "element",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "03/16/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1989",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 100,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Ken",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Provision a new merchant as finance with infinicept id" id="cc0f93d6-b531-4fc9-ab70-b7155ff61915"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as finance with infinicept id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants</con:endpoint><con:request>{
  "merchantName": "Test BE merchant",
  "merchantLegalName": "infinicept merchant testing",
  "doingBusinessAs": "Robert Pine Realty",
  "externalMerchantId": "12345",
  "infiniceptMerchantApplicationId":"2323",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Anchorage",
      "state": "AK",
      "zip": 99501,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD"
  ],
  "accountDetails": {
    "preferredProcessor": "ELEMENT",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "03/16/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1989",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 10000,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Ken",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2e77a4b0-0b85-4e4a-8f0a-91924608292c" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${Provision a new merchant as finance with infinicept id#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07a00f40-7660-4950-88f2-4650f0567066" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Provision a new merchant as finance with infinicept id#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get merchant created" id="ebbc8dbc-0f47-48c1-bc69-d6c273b932cf"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Get merchant created" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}</con:endpoint><con:request>{
  
  "merchantName": "provisioning merchant test",
  "merchantLegalName": "MedFusion, Inc.",
  "doingBusinessAs": "MEDFUSION",
  "externalMerchantId": 38949,
  "merchantAddress": {
    "address1": "5501 DILLARD DR",
    "address2": null,
    "city": "Cary",
    "state": "NC",
    "zip": "27518",
    "country": "US"
  },
  "remitToAddress": {
    "address1": "address1",
    "address2": "address2",
    "city": "city",
    "state": "NC",
    "zip": "276074",
    "country": "US",
    "merchantName": "Test"
  },
  "statementOptions": {
    "BILLQUERYHOURS": "23",
    "DISPLAYDETACHRETURNBYMAIL": "true",
    "STMTDUEDATELEADDAYS": "2",
    "PAYBYPHONENO": "2882882828",
    "DISPLAYSTMTDETAIL": "true",
    "PAYBYPHONEHOURS": "2",
    "PAYBYCHECKOK": "true",
    "DISPLAYINSAGEBRACKETS": "false",
    "BILLQUERYPHONENO": "22229292929",
    "MERCHANTTAGLINE": "blop",
    "STMTTESTMODE": "false",
    "DISPLAYMERCHANTNAME": "true",
    "DISPLAYGUARAGEBRACKETS": "true",
    "PAYBYMONEYORDEROK": "true"
  },
  "acceptedCreditCards": [
    "AMEX",
    "DISCV",
    "MCARD",
    "VISA"
  ],
  "phoneNumber": "1234567891",
  "maxTransactionLimit": 59996,
  "accountDetails": {
    "routingNumber": "042000314",
    "accountNumber": "7027485577",
    "accountType": "C",
    "checkingDepositType": "PrivateChecking",
    "amexSid": "555",
    "preferredProcessor": "ELEMENT",
    "federalTaxId": "562224713",
    "worldPayAccountDetails": {

      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "mccCode": "8011",
      "businessEstablishedDate": "12/12/1990",
      "websiteURL": "www.bkj@example.orfg",
      "beneficialOwners": [],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
}
      
    },
    
  "contractedRates": {
    "perTransAuthFee": 30,
    "perTransRefundFee": 30,
    "qualifiedUpperBoundaryPercent": 0.5,
    "qualifiedFeePercent": 50,
    "midQualifiedUpperBoundaryPercent": 2,
    "midQualifiedFeePercent": 50,
    "nonQualifiedUpperBoundaryPercent": 3,
    "nonQualifiedFeePercent": 50,
    "amexPercent": 5,
    "suppressFeeSettlement": false
  },
  "status": "TEST",
  "fraudVars": {
    "duplicateDollarTxCount": 0,
    "duplicateDollarTxAmount": 0,
    "excessiveVolumeIncreasePercent1vs90": 100,
    "excessiveVolumeIncreaseAmount1vs90": 0,
    "excessiveVolumeIncreasePercent1vs30": 100,
    "excessiveVolumeIncreaseAmount1vs30": 0,
    "excessiveVolumeIncreasePercent1vs7": 100,
    "excessiveVolumeIncreaseAmount1vs7": 0,
    "excessiveVolumeIncreasePercent7vs90": 100,
    "excessiveVolumeIncreaseAmount7vs90": 0,
    "dailyUnmatchedCreditsCount": 0,
    "dailyUnmatchedCreditsAmount": 0,
    "sameCardTxCount": 0,
    "sameCardTxAmount": 0,
    "totalDailyForeignCardCount": 0,
    "totalDailyForeignCardTxAmount": 0,
    "txLimitToAlert": 0,
    "singleForcedTxAmount": 0,
    "aggregateForcedTxAmount": 0,
    "staleTxDays": 0
  },
  
  "customerAccountNumber": "93844",
  "alsoKnownAsName": "",

  "primaryContactFirstName": "Nia",
  "primaryContactLastName": "Lahi",
  "primaryContactEmail": "test@gmail.com",
  "primaryContactPhoneNumber": "3878377373",
  
  "legalEntityPhoneNumber": "",
  "infiniceptMerchantApplicationId": "98898900"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2e77a4b0-0b85-4e4a-8f0a-91924608292c" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${Provision a new merchant as finance with infinicept id#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3adcc3a7-9eaa-4647-8c5b-b56937e16090" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Provision a new merchant as finance with infinicept id#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Edit general merchant details" id="4c4cb6b5-f98f-4c47-8f3c-2ff3106846d6"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Edit general merchant details" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}/wpSubMerchant?updateType=GENERAL_INFO</con:endpoint><con:request>{
	"id":${Provision a new merchant as finance with infinicept id#Response#$['id']},
	"merchantName":"provisioning merchant test",
	"doingBusinessAs":"MEDFUSION",
	"alsoKnownAsName":"MP merchant",
	"externalMerchantId":38949,
	 "infiniceptMerchantApplicationId": "1234483989039090",
	"customerAccountNumber":"93844454",
	"phoneNumber":"1234567891",
	"maxTransactionLimit":59996,
	"primaryContactFirstName":"Nia",
	"primaryContactLastName":"Lahi",
	"primaryContactEmail":"test@gmail.com",
	"primaryContactPhoneNumber":"3878377373",
	"merchantAddress":{
		"address1":"5501 DILLARD DR",
		"address2":null,
		"city":"Cary",
		"zip":"27518",
		"country":"US",
		"state":"NC"
		},
		"remitToAddress":{
			"address1":"address1",
			"address2":"address2",
			"city":"city",
			"zip":"276074",
			"country":"US",
			"state":"NC",
			"merchantName":"Test"
			},
			"merchantLegalName":"MedFusion, Inc.",
			"legalEntityPhoneNumber":"",
			"legalEntityAddress":{},
			"acceptedCreditCards":["VISA","MCARD","AMEX","DISCV"],
			"accountDetails":{
				"accountType":"C",
				"routingNumber":"042000314",
				"accountNumber":"7027485577",
				"federalTaxId":"562224713",
				"preferredProcessor":"ELEMENT",
				"checkingDepositType":"PrivateChecking",
				"worldPayAccountDetails":{
					"chainCode":"0N3859",
					"billingDescriptor":"PFA*SM",
					"businessEstablishedDate":"12/12/1990",
					"businessType":"ECommerce",
					"ownershipType":"PublicCorporation",
					"websiteURL":"www.bkj@example.orfg",
					"mccCode":"8011",
					"beneficialOwners":[]
					}
					},
					"contractedRates":null
					}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2e77a4b0-0b85-4e4a-8f0a-91924608292c" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${Edit general merchant details#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07a00f40-7660-4950-88f2-4650f0567066" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Provision a new merchant as finance with infinicept id#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get edited merchant" id="0442eb24-ecea-4ce9-b8ec-b24b3a780fad"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Get edited merchant" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Edit general merchant details#Response#$['id']}</con:endpoint><con:request>{
  
  "merchantName": "provisioning merchant test",
  "merchantLegalName": "MedFusion, Inc.",
  "doingBusinessAs": "MEDFUSION",
  "externalMerchantId": 38949,
  "merchantAddress": {
    "address1": "5501 DILLARD DR",
    "address2": null,
    "city": "Cary",
    "state": "NC",
    "zip": "27518",
    "country": "US"
  },
  "remitToAddress": {
    "address1": "address1",
    "address2": "address2",
    "city": "city",
    "state": "NC",
    "zip": "276074",
    "country": "US",
    "merchantName": "Test"
  },
  "statementOptions": {
    "BILLQUERYHOURS": "23",
    "DISPLAYDETACHRETURNBYMAIL": "true",
    "STMTDUEDATELEADDAYS": "2",
    "PAYBYPHONENO": "2882882828",
    "DISPLAYSTMTDETAIL": "true",
    "PAYBYPHONEHOURS": "2",
    "PAYBYCHECKOK": "true",
    "DISPLAYINSAGEBRACKETS": "false",
    "BILLQUERYPHONENO": "22229292929",
    "MERCHANTTAGLINE": "blop",
    "STMTTESTMODE": "false",
    "DISPLAYMERCHANTNAME": "true",
    "DISPLAYGUARAGEBRACKETS": "true",
    "PAYBYMONEYORDEROK": "true"
  },
  "acceptedCreditCards": [
    "AMEX",
    "DISCV",
    "MCARD",
    "VISA"
  ],
  "phoneNumber": "1234567891",
  "maxTransactionLimit": 59996,
  "accountDetails": {
    "routingNumber": "042000314",
    "accountNumber": "7027485577",
    "accountType": "C",
    "checkingDepositType": "PrivateChecking",
    "amexSid": "555",
    "preferredProcessor": "ELEMENT",
    "federalTaxId": "562224713",
    "worldPayAccountDetails": {

      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "mccCode": "8011",
      "businessEstablishedDate": "12/12/1990",
      "websiteURL": "www.bkj@example.orfg",
      "beneficialOwners": [],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
}
      
    },
    
  "contractedRates": {
    "perTransAuthFee": 30,
    "perTransRefundFee": 30,
    "qualifiedUpperBoundaryPercent": 0.5,
    "qualifiedFeePercent": 50,
    "midQualifiedUpperBoundaryPercent": 2,
    "midQualifiedFeePercent": 50,
    "nonQualifiedUpperBoundaryPercent": 3,
    "nonQualifiedFeePercent": 50,
    "amexPercent": 5,
    "suppressFeeSettlement": false
  },
  "status": "TEST",
  "fraudVars": {
    "duplicateDollarTxCount": 0,
    "duplicateDollarTxAmount": 0,
    "excessiveVolumeIncreasePercent1vs90": 100,
    "excessiveVolumeIncreaseAmount1vs90": 0,
    "excessiveVolumeIncreasePercent1vs30": 100,
    "excessiveVolumeIncreaseAmount1vs30": 0,
    "excessiveVolumeIncreasePercent1vs7": 100,
    "excessiveVolumeIncreaseAmount1vs7": 0,
    "excessiveVolumeIncreasePercent7vs90": 100,
    "excessiveVolumeIncreaseAmount7vs90": 0,
    "dailyUnmatchedCreditsCount": 0,
    "dailyUnmatchedCreditsAmount": 0,
    "sameCardTxCount": 0,
    "sameCardTxAmount": 0,
    "totalDailyForeignCardCount": 0,
    "totalDailyForeignCardTxAmount": 0,
    "txLimitToAlert": 0,
    "singleForcedTxAmount": 0,
    "aggregateForcedTxAmount": 0,
    "staleTxDays": 0
  },
  
  "customerAccountNumber": "93844",
  "alsoKnownAsName": "",

  "primaryContactFirstName": "Nia",
  "primaryContactLastName": "Lahi",
  "primaryContactEmail": "test@gmail.com",
  "primaryContactPhoneNumber": "3878377373",
  
  "legalEntityPhoneNumber": "",
  "infiniceptMerchantApplicationId": "98898900"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2e77a4b0-0b85-4e4a-8f0a-91924608292c" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${Provision a new merchant as finance with infinicept id#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3adcc3a7-9eaa-4647-8c5b-b56937e16090" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Provision a new merchant as finance with infinicept id#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Deactivate merchant" id="153a074d-f2d3-459d-839e-f10677059632"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Deactivate merchant" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}/status</con:endpoint><con:request>{"status":"INACTIVE"}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e9626b59-4a22-4d63-8201-dad0c535b88b" name="Match content of [status]"><con:configuration><path>$['status']</path><content>"INACTIVE"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b04f9e38-f6f5-4712-a359-a973c6fac559" name="Check for existence of [deactivatedDate]"><con:configuration><path>$['deactivatedDate']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Reactivate merchant" id="27c13f5e-82d4-4d60-8f50-53d25a59c729"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Reactivate merchant" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}/status</con:endpoint><con:request>{"status":"ACTIVE"}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e9626b59-4a22-4d63-8201-dad0c535b88b" name="Match content of [status]"><con:configuration><path>$['status']</path><content>"ACTIVE"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b04f9e38-f6f5-4712-a359-a973c6fac559" name="Check for existence of [deactivatedDate]"><con:configuration><path>$['deactivatedDate']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Set status to TEST" id="14f775d4-c691-49cc-a100-959daa2d18db"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Set status to TEST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}/status</con:endpoint><con:request>{"status":"TEST"}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e9626b59-4a22-4d63-8201-dad0c535b88b" name="Match content of [status]"><con:configuration><path>$['status']</path><content>"TEST"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b04f9e38-f6f5-4712-a359-a973c6fac559" name="Check for existence of [deactivatedDate]"><con:configuration><path>$['deactivatedDate']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="WP health check" id="598de146-9ec0-4001-8542-fd3bed69d216"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="WP health check" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/wphealthcheck</con:endpoint><con:request>{"status":"TEST"}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e9626b59-4a22-4d63-8201-dad0c535b88b" name="Match content of [status]"><con:configuration><path>$['status']</path><content>"UP"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get underwriting status" id="aaa1e590-f466-4e5a-91cf-609e5afefcb1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Get underwriting status" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}/status</con:endpoint><con:request>{"status":"TEST"}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6bd2ec01-666b-4c30-a2a8-819633d762a8" name="Check for existence of [status]"><con:configuration><path>$['status']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="89cf1bd5-b171-4120-9048-8e2caa2183b3" name="Check for existence of [reason]"><con:configuration><path>$['reason']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Edit customer contact details" id="cc453d3b-4716-464f-b9b4-41f00d039a4e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Edit customer contact details" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}/wpSubMerchant?updateType=CONTACTS</con:endpoint><con:request>{
	"id":${Provision a new merchant as finance with infinicept id#Response#$['id']},
	"merchantName":"provisioning merchant test",
	"doingBusinessAs":"MEDFUSION test",
	"alsoKnownAsName":"MP merchant",
	"externalMerchantId":38949,
	"customerAccountNumber":"93844454",
	"phoneNumber":"1234567891",
	"maxTransactionLimit":59996,
	"primaryContactFirstName":"Nate",
	"primaryContactLastName":"Lahi",
	"primaryContactEmail":"testnate@gmail.com",
	"primaryContactPhoneNumber":"3878377373",
	"merchantAddress":{
		"address1":"5501 DILLARD DR",
		"address2":null,
		"city":"Cary",
		"zip":"27518",
		"country":"US",
		"state":"NC"
		},
		"remitToAddress":{
			"address1":"address1",
			"address2":"address2",
			"city":"city",
			"zip":"276074",
			"country":"US",
			"state":"NC",
			"merchantName":"Test"
			},
			"merchantLegalName":"MedFusion, Inc.",
			"legalEntityPhoneNumber":"",
			"legalEntityAddress":{},
			"acceptedCreditCards":["VISA","MCARD","AMEX","DISCV"],
			"accountDetails":{
				"accountType":"C",
				"routingNumber":"042000314",
				"accountNumber":"7027485577",
				"federalTaxId":"562224713",
				"preferredProcessor":"ELEMENT",
				"checkingDepositType":"PrivateChecking",
				"worldPayAccountDetails":{
					"chainCode":"0N3859",
					"billingDescriptor":"PFA*SM",
					"businessEstablishedDate":"12/12/1990",
					"businessType":"AutoRental",
					"ownershipType":"PublicCorporation",
					"websiteURL":"www.bkj@example.orfg",
					"mccCode":"8011",
					"beneficialOwners":[]
					}
					},
					"contractedRates":null
					}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2e77a4b0-0b85-4e4a-8f0a-91924608292c" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07a00f40-7660-4950-88f2-4650f0567066" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Provision a new merchant as finance with infinicept id#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Provision a new merchant as implementation with infinicept id" id="580fabd8-730e-41b4-9695-258e865f2734"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as implementation with infinicept id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  
  "merchantName": "provisioning merchant test",
  "merchantLegalName": "MedFusion, Inc.",
  "doingBusinessAs": "MEDFUSION",
  "externalMerchantId": 38949,
  "merchantAddress": {
    "address1": "5501 DILLARD DR",
    "address2": null,
    "city": "Cary",
    "state": "NC",
    "zip": "27518",
    "country": "US"
  },
  "remitToAddress": {
    "address1": "address1",
    "address2": "address2",
    "city": "city",
    "state": "NC",
    "zip": "276074",
    "country": "US",
    "merchantName": "Test"
  },
  "statementOptions": {
    "BILLQUERYHOURS": "23",
    "DISPLAYDETACHRETURNBYMAIL": "true",
    "STMTDUEDATELEADDAYS": "2",
    "PAYBYPHONENO": "2882882828",
    "DISPLAYSTMTDETAIL": "true",
    "PAYBYPHONEHOURS": "2",
    "PAYBYCHECKOK": "true",
    "DISPLAYINSAGEBRACKETS": "false",
    "BILLQUERYPHONENO": "22229292929",
    "MERCHANTTAGLINE": "blop",
    "STMTTESTMODE": "false",
    "DISPLAYMERCHANTNAME": "true",
    "DISPLAYGUARAGEBRACKETS": "true",
    "PAYBYMONEYORDEROK": "true"
  },
  "acceptedCreditCards": [
    "AMEX",
    "DISCV",
    "MCARD",
    "VISA"
  ],
  "phoneNumber": "1234567891",
  "maxTransactionLimit": 59996,
  "accountDetails": {
    "routingNumber": "042000314",
    "accountNumber": "7027485577",
    "accountType": "C",
    "checkingDepositType": "PrivateChecking",
    "amexSid": "555",
    "preferredProcessor": "ELEMENT",
    "federalTaxId": "562224713",
    "worldPayAccountDetails": {

      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "mccCode": "8011",
      "businessEstablishedDate": "12/12/1990",
      "websiteURL": "www.bkj@example.orfg",
      "beneficialOwners": [],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
}
      
    },
    
  "contractedRates": {
    "perTransAuthFee": 30,
    "perTransRefundFee": 30,
    "qualifiedUpperBoundaryPercent": 0.5,
    "qualifiedFeePercent": 50,
    "midQualifiedUpperBoundaryPercent": 2,
    "midQualifiedFeePercent": 50,
    "nonQualifiedUpperBoundaryPercent": 3,
    "nonQualifiedFeePercent": 50,
    "amexPercent": 5,
    "suppressFeeSettlement": false
  },
  "status": "TEST",
  "fraudVars": {
    "duplicateDollarTxCount": 0,
    "duplicateDollarTxAmount": 0,
    "excessiveVolumeIncreasePercent1vs90": 100,
    "excessiveVolumeIncreaseAmount1vs90": 0,
    "excessiveVolumeIncreasePercent1vs30": 100,
    "excessiveVolumeIncreaseAmount1vs30": 0,
    "excessiveVolumeIncreasePercent1vs7": 100,
    "excessiveVolumeIncreaseAmount1vs7": 0,
    "excessiveVolumeIncreasePercent7vs90": 100,
    "excessiveVolumeIncreaseAmount7vs90": 0,
    "dailyUnmatchedCreditsCount": 0,
    "dailyUnmatchedCreditsAmount": 0,
    "sameCardTxCount": 0,
    "sameCardTxAmount": 0,
    "totalDailyForeignCardCount": 0,
    "totalDailyForeignCardTxAmount": 0,
    "txLimitToAlert": 0,
    "singleForcedTxAmount": 0,
    "aggregateForcedTxAmount": 0,
    "staleTxDays": 0
  },
  
  "customerAccountNumber": "93844",
  "alsoKnownAsName": "",

  "primaryContactFirstName": "Nia",
  "primaryContactLastName": "Lahi",
  "primaryContactEmail": "test@gmail.com",
  "primaryContactPhoneNumber": "3878377373",
  
  "legalEntityPhoneNumber": "",
  "infiniceptMerchantApplicationId": "98898900"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get merchant with infinicept id as implementation" id="e64bc468-d3e0-4015-977c-753e055fb30f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Get merchant with infinicept id as implementation" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance with infinicept id#Response#$['id']}</con:endpoint><con:request>
{
  "merchantName": "WP Test merchant 3",
  "merchantLegalName": "WP Test merchant inc",
  "doingBusinessAs": "WP Test merchant 3",
  "externalMerchantId": "39484",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Berea",
      "state": "OH",
      "zip": 44017,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD", 
"AMEX",
"DISCV"
  ],
  "accountDetails": {
    "preferredProcessor": "ELEMENT",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "06/05/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1948",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 100000,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Matt",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  },
  "infiniceptMerchantApplicationId":"1111"
}


</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="176a773c-e5eb-4f00-9fa7-a5eac285eca9" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${Provision a new merchant as finance with infinicept id#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="050286c1-99c0-464c-ae18-46a0682d03fd" name="Match content of [id]"><con:configuration><path>$['id']</path><content>${Provision a new merchant as finance with infinicept id#Response#$['id']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Provision a new merchant as finance with alpha numeric infinicept id" id="a0c64105-5ef0-4030-b676-079df215c804"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as finance with alpha numeric infinicept id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  
  "merchantName": "provisioning merchant test alpha numeric",
  "merchantLegalName": "MedFusion, Inc.",
  "doingBusinessAs": "MEDFUSION",
  "externalMerchantId": 38949,
  "merchantAddress": {
    "address1": "5501 DILLARD DR",
    "address2": null,
    "city": "Cary",
    "state": "NC",
    "zip": "27518",
    "country": "US"
  },
  "remitToAddress": {
    "address1": "address1",
    "address2": "address2",
    "city": "city",
    "state": "NC",
    "zip": "276074",
    "country": "US",
    "merchantName": "Test"
  },
  "statementOptions": {
    "BILLQUERYHOURS": "23",
    "DISPLAYDETACHRETURNBYMAIL": "true",
    "STMTDUEDATELEADDAYS": "2",
    "PAYBYPHONENO": "2882882828",
    "DISPLAYSTMTDETAIL": "true",
    "PAYBYPHONEHOURS": "2",
    "PAYBYCHECKOK": "true",
    "DISPLAYINSAGEBRACKETS": "false",
    "BILLQUERYPHONENO": "22229292929",
    "MERCHANTTAGLINE": "blop",
    "STMTTESTMODE": "false",
    "DISPLAYMERCHANTNAME": "true",
    "DISPLAYGUARAGEBRACKETS": "true",
    "PAYBYMONEYORDEROK": "true"
  },
  "acceptedCreditCards": [
    "AMEX",
    "DISCV",
    "MCARD",
    "VISA"
  ],
  "phoneNumber": "1234567891",
  "maxTransactionLimit": 59996,
  "accountDetails": {
    "routingNumber": "042000314",
    "accountNumber": "7027485577",
    "accountType": "C",
    "checkingDepositType": "PrivateChecking",
    "amexSid": "555",
    "preferredProcessor": "ELEMENT",
    "federalTaxId": "562224713",
    "worldPayAccountDetails": {

      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "mccCode": "8011",
      "businessEstablishedDate": "12/12/1990",
      "websiteURL": "www.bkj@example.orfg",
      "beneficialOwners": [],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
}
      
    },
    
  "contractedRates": {
    "perTransAuthFee": 30,
    "perTransRefundFee": 30,
    "qualifiedUpperBoundaryPercent": 0.5,
    "qualifiedFeePercent": 50,
    "midQualifiedUpperBoundaryPercent": 2,
    "midQualifiedFeePercent": 50,
    "nonQualifiedUpperBoundaryPercent": 3,
    "nonQualifiedFeePercent": 50,
    "amexPercent": 5,
    "suppressFeeSettlement": false
  },
  "status": "TEST",
  "fraudVars": {
    "duplicateDollarTxCount": 0,
    "duplicateDollarTxAmount": 0,
    "excessiveVolumeIncreasePercent1vs90": 100,
    "excessiveVolumeIncreaseAmount1vs90": 0,
    "excessiveVolumeIncreasePercent1vs30": 100,
    "excessiveVolumeIncreaseAmount1vs30": 0,
    "excessiveVolumeIncreasePercent1vs7": 100,
    "excessiveVolumeIncreaseAmount1vs7": 0,
    "excessiveVolumeIncreasePercent7vs90": 100,
    "excessiveVolumeIncreaseAmount7vs90": 0,
    "dailyUnmatchedCreditsCount": 0,
    "dailyUnmatchedCreditsAmount": 0,
    "sameCardTxCount": 0,
    "sameCardTxAmount": 0,
    "totalDailyForeignCardCount": 0,
    "totalDailyForeignCardTxAmount": 0,
    "txLimitToAlert": 0,
    "singleForcedTxAmount": 0,
    "aggregateForcedTxAmount": 0,
    "staleTxDays": 0
  },
  
  "customerAccountNumber": "93844",
  "alsoKnownAsName": "",

  "primaryContactFirstName": "Nia",
  "primaryContactLastName": "Lahi",
  "primaryContactEmail": "test@gmail.com",
  "primaryContactPhoneNumber": "3878377373",
  
  "legalEntityPhoneNumber": "",
  "infiniceptMerchantApplicationId": "98898900jhe9k03924_ajd893498203_masd09"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="7765aa56-7498-41d8-9b17-9aa7cdf9e99d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ddd7bc93-5183-4dbc-ad8c-4d458d6f0cb5" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8d39a070-07f7-41b7-90a8-44701b55d0ee" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${Provision a new merchant as finance with alpha numeric infinicept id#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Provision a new merchant as finance with  infinicept id starting with zero" id="44002a7b-9d76-41f9-ba0a-304341a27a22"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as finance with  infinicept id starting with zero" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  
  "merchantName": "provisioning merchant test alpha numeric",
  "merchantLegalName": "MedFusion, Inc.",
  "doingBusinessAs": "MEDFUSION",
  "externalMerchantId": 38949,
  "merchantAddress": {
    "address1": "5501 DILLARD DR",
    "address2": null,
    "city": "Cary",
    "state": "NC",
    "zip": "27518",
    "country": "US"
  },
  "remitToAddress": {
    "address1": "address1",
    "address2": "address2",
    "city": "city",
    "state": "NC",
    "zip": "276074",
    "country": "US",
    "merchantName": "Test"
  },
  "statementOptions": {
    "BILLQUERYHOURS": "23",
    "DISPLAYDETACHRETURNBYMAIL": "true",
    "STMTDUEDATELEADDAYS": "2",
    "PAYBYPHONENO": "2882882828",
    "DISPLAYSTMTDETAIL": "true",
    "PAYBYPHONEHOURS": "2",
    "PAYBYCHECKOK": "true",
    "DISPLAYINSAGEBRACKETS": "false",
    "BILLQUERYPHONENO": "22229292929",
    "MERCHANTTAGLINE": "blop",
    "STMTTESTMODE": "false",
    "DISPLAYMERCHANTNAME": "true",
    "DISPLAYGUARAGEBRACKETS": "true",
    "PAYBYMONEYORDEROK": "true"
  },
  "acceptedCreditCards": [
    "AMEX",
    "DISCV",
    "MCARD",
    "VISA"
  ],
  "phoneNumber": "1234567891",
  "maxTransactionLimit": 59996,
  "accountDetails": {
    "routingNumber": "042000314",
    "accountNumber": "7027485577",
    "accountType": "C",
    "checkingDepositType": "PrivateChecking",
    "amexSid": "555",
    "preferredProcessor": "ELEMENT",
    "federalTaxId": "562224713",
    "worldPayAccountDetails": {

      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "mccCode": "8011",
      "businessEstablishedDate": "12/12/1990",
      "websiteURL": "www.bkj@example.orfg",
      "beneficialOwners": [],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
}
      
    },
    
  "contractedRates": {
    "perTransAuthFee": 30,
    "perTransRefundFee": 30,
    "qualifiedUpperBoundaryPercent": 0.5,
    "qualifiedFeePercent": 50,
    "midQualifiedUpperBoundaryPercent": 2,
    "midQualifiedFeePercent": 50,
    "nonQualifiedUpperBoundaryPercent": 3,
    "nonQualifiedFeePercent": 50,
    "amexPercent": 5,
    "suppressFeeSettlement": false
  },
  "status": "TEST",
  "fraudVars": {
    "duplicateDollarTxCount": 0,
    "duplicateDollarTxAmount": 0,
    "excessiveVolumeIncreasePercent1vs90": 100,
    "excessiveVolumeIncreaseAmount1vs90": 0,
    "excessiveVolumeIncreasePercent1vs30": 100,
    "excessiveVolumeIncreaseAmount1vs30": 0,
    "excessiveVolumeIncreasePercent1vs7": 100,
    "excessiveVolumeIncreaseAmount1vs7": 0,
    "excessiveVolumeIncreasePercent7vs90": 100,
    "excessiveVolumeIncreaseAmount7vs90": 0,
    "dailyUnmatchedCreditsCount": 0,
    "dailyUnmatchedCreditsAmount": 0,
    "sameCardTxCount": 0,
    "sameCardTxAmount": 0,
    "totalDailyForeignCardCount": 0,
    "totalDailyForeignCardTxAmount": 0,
    "txLimitToAlert": 0,
    "singleForcedTxAmount": 0,
    "aggregateForcedTxAmount": 0,
    "staleTxDays": 0
  },
  
  "customerAccountNumber": "93844",
  "alsoKnownAsName": "",

  "primaryContactFirstName": "Nia",
  "primaryContactLastName": "Lahi",
  "primaryContactEmail": "test@gmail.com",
  "primaryContactPhoneNumber": "3878377373",
  
  "legalEntityPhoneNumber": "",
  "infiniceptMerchantApplicationId": "082374"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="7765aa56-7498-41d8-9b17-9aa7cdf9e99d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ddd7bc93-5183-4dbc-ad8c-4d458d6f0cb5" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8d39a070-07f7-41b7-90a8-44701b55d0ee" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${Provision a new merchant as finance with  infinicept id starting with zero#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="provision a new merchant as finance with a null infinicept id" id="94be7058-f529-4fae-aaeb-a42f75441586"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="provision a new merchant as finance with a null infinicept id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  
  "merchantName": "provisioning merchant test alpha numeric",
  "merchantLegalName": "MedFusion, Inc.",
  "doingBusinessAs": "MEDFUSION",
  "externalMerchantId": 38949,
  "merchantAddress": {
    "address1": "5501 DILLARD DR",
    "address2": null,
    "city": "Cary",
    "state": "NC",
    "zip": "27518",
    "country": "US"
  },
  "remitToAddress": {
    "address1": "address1",
    "address2": "address2",
    "city": "city",
    "state": "NC",
    "zip": "276074",
    "country": "US",
    "merchantName": "Test"
  },
  "statementOptions": {
    "BILLQUERYHOURS": "23",
    "DISPLAYDETACHRETURNBYMAIL": "true",
    "STMTDUEDATELEADDAYS": "2",
    "PAYBYPHONENO": "2882882828",
    "DISPLAYSTMTDETAIL": "true",
    "PAYBYPHONEHOURS": "2",
    "PAYBYCHECKOK": "true",
    "DISPLAYINSAGEBRACKETS": "false",
    "BILLQUERYPHONENO": "22229292929",
    "MERCHANTTAGLINE": "blop",
    "STMTTESTMODE": "false",
    "DISPLAYMERCHANTNAME": "true",
    "DISPLAYGUARAGEBRACKETS": "true",
    "PAYBYMONEYORDEROK": "true"
  },
  "acceptedCreditCards": [
    "AMEX",
    "DISCV",
    "MCARD",
    "VISA"
  ],
  "phoneNumber": "1234567891",
  "maxTransactionLimit": 59996,
  "accountDetails": {
    "routingNumber": "042000314",
    "accountNumber": "7027485577",
    "accountType": "C",
    "checkingDepositType": "PrivateChecking",
    "amexSid": "555",
    "preferredProcessor": "ELEMENT",
    "federalTaxId": "562224713",
    "worldPayAccountDetails": {

      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "mccCode": "8011",
      "businessEstablishedDate": "12/12/1990",
      "websiteURL": "www.bkj@example.orfg",
      "beneficialOwners": [],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
}
      
    },
    
  "contractedRates": {
    "perTransAuthFee": 30,
    "perTransRefundFee": 30,
    "qualifiedUpperBoundaryPercent": 0.5,
    "qualifiedFeePercent": 50,
    "midQualifiedUpperBoundaryPercent": 2,
    "midQualifiedFeePercent": 50,
    "nonQualifiedUpperBoundaryPercent": 3,
    "nonQualifiedFeePercent": 50,
    "amexPercent": 5,
    "suppressFeeSettlement": false
  },
  "status": "TEST",
  "fraudVars": {
    "duplicateDollarTxCount": 0,
    "duplicateDollarTxAmount": 0,
    "excessiveVolumeIncreasePercent1vs90": 100,
    "excessiveVolumeIncreaseAmount1vs90": 0,
    "excessiveVolumeIncreasePercent1vs30": 100,
    "excessiveVolumeIncreaseAmount1vs30": 0,
    "excessiveVolumeIncreasePercent1vs7": 100,
    "excessiveVolumeIncreaseAmount1vs7": 0,
    "excessiveVolumeIncreasePercent7vs90": 100,
    "excessiveVolumeIncreaseAmount7vs90": 0,
    "dailyUnmatchedCreditsCount": 0,
    "dailyUnmatchedCreditsAmount": 0,
    "sameCardTxCount": 0,
    "sameCardTxAmount": 0,
    "totalDailyForeignCardCount": 0,
    "totalDailyForeignCardTxAmount": 0,
    "txLimitToAlert": 0,
    "singleForcedTxAmount": 0,
    "aggregateForcedTxAmount": 0,
    "staleTxDays": 0
  },
  
  "customerAccountNumber": "93844",
  "alsoKnownAsName": "",

  "primaryContactFirstName": "Nia",
  "primaryContactLastName": "Lahi",
  "primaryContactEmail": "test@gmail.com",
  "primaryContactPhoneNumber": "3878377373",
  
  "legalEntityPhoneNumber": "",
  "infiniceptMerchantApplicationId": null
}</con:request><con:assertion type="Valid HTTP Status Codes" id="7765aa56-7498-41d8-9b17-9aa7cdf9e99d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ddd7bc93-5183-4dbc-ad8c-4d458d6f0cb5" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8d39a070-07f7-41b7-90a8-44701b55d0ee" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content>${provision a new merchant as finance with a null infinicept id#RawRequest#$['infiniceptMerchantApplicationId']}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="provision a new merchant as finance with an empty string infinicept id" id="7d446a6a-a1ed-4413-95d4-077b7f9017ad"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="provision a new merchant as finance with an empty string infinicept id" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  
  "merchantName": "provisioning merchant test alpha numeric",
  "merchantLegalName": "MedFusion, Inc.",
  "doingBusinessAs": "MEDFUSION",
  "externalMerchantId": 38949,
  "merchantAddress": {
    "address1": "5501 DILLARD DR",
    "address2": null,
    "city": "Cary",
    "state": "NC",
    "zip": "27518",
    "country": "US"
  },
  "remitToAddress": {
    "address1": "address1",
    "address2": "address2",
    "city": "city",
    "state": "NC",
    "zip": "276074",
    "country": "US",
    "merchantName": "Test"
  },
  "statementOptions": {
    "BILLQUERYHOURS": "23",
    "DISPLAYDETACHRETURNBYMAIL": "true",
    "STMTDUEDATELEADDAYS": "2",
    "PAYBYPHONENO": "2882882828",
    "DISPLAYSTMTDETAIL": "true",
    "PAYBYPHONEHOURS": "2",
    "PAYBYCHECKOK": "true",
    "DISPLAYINSAGEBRACKETS": "false",
    "BILLQUERYPHONENO": "22229292929",
    "MERCHANTTAGLINE": "blop",
    "STMTTESTMODE": "false",
    "DISPLAYMERCHANTNAME": "true",
    "DISPLAYGUARAGEBRACKETS": "true",
    "PAYBYMONEYORDEROK": "true"
  },
  "acceptedCreditCards": [
    "AMEX",
    "DISCV",
    "MCARD",
    "VISA"
  ],
  "phoneNumber": "1234567891",
  "maxTransactionLimit": 59996,
  "accountDetails": {
    "routingNumber": "042000314",
    "accountNumber": "7027485577",
    "accountType": "C",
    "checkingDepositType": "PrivateChecking",
    "amexSid": "555",
    "preferredProcessor": "ELEMENT",
    "federalTaxId": "562224713",
    "worldPayAccountDetails": {

      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "mccCode": "8011",
      "businessEstablishedDate": "12/12/1990",
      "websiteURL": "www.bkj@example.orfg",
      "beneficialOwners": [],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
}
      
    },
    
  "contractedRates": {
    "perTransAuthFee": 30,
    "perTransRefundFee": 30,
    "qualifiedUpperBoundaryPercent": 0.5,
    "qualifiedFeePercent": 50,
    "midQualifiedUpperBoundaryPercent": 2,
    "midQualifiedFeePercent": 50,
    "nonQualifiedUpperBoundaryPercent": 3,
    "nonQualifiedFeePercent": 50,
    "amexPercent": 5,
    "suppressFeeSettlement": false
  },
  "status": "TEST",
  "fraudVars": {
    "duplicateDollarTxCount": 0,
    "duplicateDollarTxAmount": 0,
    "excessiveVolumeIncreasePercent1vs90": 100,
    "excessiveVolumeIncreaseAmount1vs90": 0,
    "excessiveVolumeIncreasePercent1vs30": 100,
    "excessiveVolumeIncreaseAmount1vs30": 0,
    "excessiveVolumeIncreasePercent1vs7": 100,
    "excessiveVolumeIncreaseAmount1vs7": 0,
    "excessiveVolumeIncreasePercent7vs90": 100,
    "excessiveVolumeIncreaseAmount7vs90": 0,
    "dailyUnmatchedCreditsCount": 0,
    "dailyUnmatchedCreditsAmount": 0,
    "sameCardTxCount": 0,
    "sameCardTxAmount": 0,
    "totalDailyForeignCardCount": 0,
    "totalDailyForeignCardTxAmount": 0,
    "txLimitToAlert": 0,
    "singleForcedTxAmount": 0,
    "aggregateForcedTxAmount": 0,
    "staleTxDays": 0
  },
  
  "customerAccountNumber": "93844",
  "alsoKnownAsName": "",

  "primaryContactFirstName": "Nia",
  "primaryContactLastName": "Lahi",
  "primaryContactEmail": "test@gmail.com",
  "primaryContactPhoneNumber": "3878377373",
  
  "legalEntityPhoneNumber": "",
  "infiniceptMerchantApplicationId":""
}</con:request><con:assertion type="Valid HTTP Status Codes" id="7765aa56-7498-41d8-9b17-9aa7cdf9e99d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ddd7bc93-5183-4dbc-ad8c-4d458d6f0cb5" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8d39a070-07f7-41b7-90a8-44701b55d0ee" name="Match content of [infiniceptMerchantApplicationId]"><con:configuration><path>$['infiniceptMerchantApplicationId']</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Provision a new merchant as finance as pay customer" id="00b94b09-3052-44e7-8b0c-c42d072346aa"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as finance as pay customer" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  "merchantName": "Pay cust with reference ids",
  "merchantLegalName": "infi merchant testing 2",
  "doingBusinessAs": "Robert Pine Realty",
  "externalMerchantId": "12345",
  "customerAccountNumber":"389494",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Anchorage",
      "state": "AK",
      "zip": 99501,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD"
  ],
   "merchantAttributes": [
    {
      "attributeName": "Test pay customer Practice id",
      "attributeType": "REFERENCE_ID",
      "attributeValue": "KDJFKJK3408"
    },
   
    {
      "attributeName": "SAP ID",
      "attributeType": "REFERENCE_ID",
      "attributeValue": "94045"
    }
  ],
  "accountDetails": {
    "preferredProcessor": "ELEMENT",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "03/16/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1989",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 1000000,
  "phoneNumber":3483938393,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Ken",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  },
  "payAPICustomer":{"id":2000,"customerName":"Test Pay Customer"}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ef91e47b-587f-4810-91c0-3c8f5535e013" name="Match content of [customerName]"><con:configuration><path>$['payAPICustomer']['customerName']</path><content>"Test Pay Customer"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Provision a new merchant as finance as ngo" id="97fd6246-ba9a-4938-b2d0-b9ccbceba50a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as finance as ngo" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
	
  "merchantName": "office test merchant",
  "merchantLegalName": "infi merchant testing 2",
  "doingBusinessAs": "Robert Pine Realty",
  "externalMerchantId": "12345",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Anchorage",
      "state": "AK",
      "zip": 99501,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD"
  ],
  "accountDetails": {
    "preferredProcessor": "ELEMENT",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "03/16/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1989",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 100,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Ken",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  },
  "payAPICustomer":{"id":4000,"customerName":"NG Office"}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7c23b7cd-184a-4ff7-b942-38eb2df2302b" name="Match content of [customerName]"><con:configuration><path>$['payAPICustomer']['customerName']</path><content>"NG Office"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update merchant as ngpay(implementation)" id="25589925-cda1-4431-b41c-77523a508539"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Update merchant as ngpay(implementation)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants/${Provision a new merchant as finance as pay customer#Response#$['id']}/wpSubMerchant?updateType=GENERAL_INFO</con:endpoint><con:request>{
	"id":${Provision a new merchant as finance as pay customer#Response#$['id']},
  "merchantName": "nGpay Test merchant",
  "merchantLegalName": "infi merchant testing 2",
  "doingBusinessAs": "Robert Pine Realty",
  "externalMerchantId": "12345",
  
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Anchorage",
      "state": "AK",
      "zip": 99501,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD"
  ],
  "accountDetails": {
    "preferredProcessor": "ELEMENT",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "03/16/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1989",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 100,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Ken",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  },
 "payAPICustomer":{"id":0,"customerName":"NG Pay"}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3ba5e933-6ca5-4acf-b4c7-ab810c166df2" name="Match content of [payAPICustomer]"><con:configuration><path>$['payAPICustomer']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3d511115-c20b-47cc-afdd-0efa1792bd88" name="Match content of [payAPICustomer]"><con:configuration><path>$['payAPICustomer']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdEltcGxlbWVudGF0aW9uMTpuRzk7JihMJjM5bWo=</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Provision a new merchant as finance with a customer not in the customer table" id="5c162c54-8337-472b-b805-ebfc4617c891"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="707ed2f1-1939-4de2-aa9e-c7060bf5c264" name="Provision a new merchant as finance with a customer not in the customer table" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://vip-gwprov.demo.medfusion.net:8080/provisioning/services/internal/merchants </con:endpoint><con:request>{
  "merchantName": "I am not a customer",
  "merchantLegalName": "firstAutoProvisionTestLegalName",
  "doingBusinessAs": "Robert Pine Realty",
  "externalMerchantId": "12345",
  "infiniceptMerchantApplicationId" : "9876543241",
   "merchantAddress": {
      "address1": "100 West St",
      "city": "Anchorage",
      "state": "AK",
      "zip": 99501,
      "country": "US",
      "worldPayAddressType": "Physical"
  },
  "acceptedCreditCards": [
    "VISA",
    "MCARD"
  ],
  "accountDetails": {
    "preferredProcessor": "element",
    "accountNumber": "4344421",
    "routingNumber": "064103707",
    "accountType": "C",
    "checkingDepositType" : "CommercialChecking",
    "federalTaxId": "123456789",
    "worldPayAccountDetails": {
      "chainCode": "0N3859",
      "billingDescriptor": "PFA*SM",
      "ownershipType": "PublicCorporation",
      "businessType": "ECommerce",
      "businessEstablishedDate": "03/16/2020",
      "websiteURL": "https://payfacsm.com",
      "mccCode": "8021",
      "beneficialOwners": [
        {
          "title": "President",
          "firstName": "John",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135551234",
          "email": "jsmith@payfacsm.com",
          "percentOwned": 51,
          "ssn": "123456789",
          "dateOfBirth": "12/05/1989",
          "addressLine1": "123 South St",
          "addressLine2": "Apt 500",
          "city": "Anchorage",
          "state": "AK",
          "country": "US",
	      "zipCode": "99501",
          "ownerType": "ControlOwner"
        }
      ],
      "contact": [
        {
          "title": "Relationship Manager",
          "firstName": "Jane",
          "middleInitial": "S",
          "lastName": "Smith",
          "phoneNumber": "5135559876",
          "phoneNumberExt": "5432",
          "email": "jasmith@payfacsm.com",
          "faxNumber": "5135559876",
          "type": "CustomerService"
        }
      ]
    }
  },
  "maxTransactionLimit": 10000,
  "principleDetails": {
    "principleName": "Julio Jones",
    "principleTitle": "Sr. Principle Engineer",
    "principleSocialSecurityNumber": "123456789"
  },
  "primaryContactFirstName": "Ken",
  "primaryContactLastName": "Jennings",
  "primaryContactEmail": "dudeBro75@hotmail.com",
  "primaryContactPhoneNumber": "2521543586",
  "contractedRates" : {
  	"perTransAuthFee" : 1,
  	"perTransRefundFee" : 1,
  	"qualifiedUpperBoundaryPercent" : 1,
  	"qualifiedFeePercent" : 1,
  	"midQualifiedUpperBoundaryPercent" : 1,
  	"midQualifiedFeePercent" : 1,
  	"nonQualifiedUpperBoundaryPercent" : 1,
  	"nonQualifiedFeePercent" : 1,
  	"amexPercent" : 1
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1f1e8a5f-16ed-4269-9bec-23e553871475" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="32ecdf74-c686-4ba3-a61a-212fed3dd6f1" name="Check for existence of [id]"><con:configuration><path>$['id']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5fad19ba-2337-41be-a42c-c33e2e7d1b64" name="Match content of [payAPICustomer]"><con:configuration><path>$['payAPICustomer']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="114d747a-60b1-40d5-9837-df8b5761dcd9" name="Match content of [payAPICustomer]"><con:configuration><path>$['payAPICustomer']</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:value><con:style>HEADER</con:style><con:default>Basic dGVzdHVzZXJGaW5hbmNlMTpGczNKbjImTQ==</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>d066b100-4a43-40e7-9ea7-6c5a3a9878ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>628ac0f6-e785-4e86-a6d4-41d5dea0e65e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>