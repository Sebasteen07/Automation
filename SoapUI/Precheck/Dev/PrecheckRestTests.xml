<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="942934c1-65d7-40c2-946d-ba4fb9d2692e" activeEnvironment="dev3" name="REST Project 39" lastOpened="2018-11-13T14:05:23.319-05:00" resourceRoot="" soapui-version="6.0.0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="DEV 3 PRECHECK ENDPOINTS"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style HTML Report"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="true"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\ReadyAPI-1.6.0\bin"/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="C:\Users\jrasika\Desktop\ReadyApiResults"/>
  <con:entry key="Ignore Errors" value="true"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="true"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="e014625a-3eb4-4401-9faf-7d2ac3eba6df" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://d1-prechk01.ops.medfusion.net:8081" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://d1-prechk01.ops.medfusion.net:8081</con:endpoint></con:endpoints><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec><con:resource name="Precheck" path="/precheck/services/v3/practices/${Properties#practiceId}/forms" id="6d0b6248-d373-4938-a525-88840ce5582c"><con:settings/><con:parameters><con:parameter disableUrlEncoding="false"><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>sendEmail</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Precheck" id="8d8b74f0-df05-42fb-9fc9-1034f24515ee" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>405 400 403</con:status><con:params/><con:element xmlns:app="http://d1-prechk01.ops.medfusion.net/precheck/services/appointments">app:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="06d5a32b-1b71-4045-a855-1fed35d51311" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d1-prechk01.ops.medfusion.net:8081</con:endpoint><con:request/><con:originalUri>http://d1-prechk01.ops.medfusion.net/precheck/services/appointments</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:request><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:method><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:resource></con:interface><con:testSuite id="565bf36a-cc95-478c-ad97-d6008087d8a2" name="DEV 3 PRECHECK ENDPOINTS"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="8731f287-063d-418d-b730-260b6d11486f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Create precheck appointments" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="a51acb9f-98d5-4b13-9283-eb81e018ad40"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>47557514</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1540924260466</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>641520000000</con:value></con:property><con:property><con:name>email</con:name><con:value>"soapuidev@mailinator.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>46482</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>appointmentTime3DaysOut</con:name><con:value/></con:property><con:property><con:name>startTime</con:name><con:value>"10/28/2018 16:30:57 PM"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="d732af9a-5a67-41e9-a3ee-00b74abfeff3"><con:settings/><con:config><script>

def generator1 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
appointmentid = generator1( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 8 )
log.info appointmentid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmAppointmentId",appointmentid )




def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
patientid = generator2( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 5 )
log.info patientid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmExternalId",patientid )




import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    appointment3Days0ut = currenttime + 1.week - 4.days + 2.hours - 3.seconds
    log.info appointment3Days0ut
    def timeInUtc = appointment3Days0ut.format("yyyy-MM-dd'T'HH:mm:00'Z'")
    log.info timeInUtc
 
    
}
currenttime = new Date()
use(TimeCategory) {
    appointment3Days0ut = currenttime + 1.week - 4.days + 2.hours - 3.seconds
    log.info appointment3Days0ut
    def timeInUtc = appointment3Days0ut.format("M/dd/yyyy H:mm:ss a")
    log.info timeInUtc
 	 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("startTime",'"'+timeInUtc+'"' )
}



import groovy.time.TimeCategory
now = new Date()
use(TimeCategory) {
 def futuretime = now + 5.days 
 def timeinmillis = futuretime.getTime().toString()
 log.info timeinmillis
 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("appointmentTime",timeinmillis )

}

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST appointments v1 as staff user with email-UI endpoint" id="5e253262-04af-4df0-93d3-3d5258e45a25"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="POST appointments v1 as staff user with email-UI endpoint" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"middleName":"",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9195662525",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointments v1 as staff user without email-UI endpoint" id="3cf23ccc-9043-43eb-908d-48ec06b35b40"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="POST appointments v1 as staff user without email-UI endpoint" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9195662525",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointments v1 as system user with email" id="a660be32-967e-4a34-85ee-425dd83c95f3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="POST appointments v1 as system user with email" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"practiceId":"20624",
	"time":${Properties#appointmentTime},
	"locationName":${Properties#location},
	"providerName":${Properties#provider},
	"appointmentAddress": {
    "zip": 27513,
    "address": "1225 parktop drive",
    "phone": 9892373837,
    "address2": "",
    "city": "cary",
    "state": "NC"
  },
	"practiceDemographics":
	{
		"pmExternalId":${Properties#pmExternalId},
		"firstName":"Rest",
		"lastName":"Test",
		"dob":${Properties#dob},
		"address":"address1",
		"city":"cary",
		"state":"NC",
		"zip":"27513",
		"phone":"9195662525",
		"email":${Properties#email}},
		"insurance": {
    "insuranceInfo": [
      {
        "dateIssued": "",
        "tier": "PRIMARY",
        "insuranceName": "Medicare",
        "memberName": "test",
        "claimsPhoneNumber": 9198991718,
        "groupNumber": "2983",
        "memberId": "938409",
        "imageLocation": "null"
      }
    ],
    "status": "COMPLETE"
  },"coPayment":{"status":"INCOMPLETE","amount":"35"},
  "balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#SystemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#SystemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointments v1 as system user without email" id="4e5f65c4-c6e8-44af-91f6-f4184186bf0f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="POST appointments v1 as system user without email" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"practiceId":"20624",
	"time":${Properties#appointmentTime},
	"locationName":${Properties#location},
	"providerName":${Properties#provider},
	"appointmentAddress": {
    "zip": 27513,
    "address": "1225 parktop drive",
    "phone": 9892373837,
    "address2": "",
    "city": "cary",
    "state": "NC"
  },
	"practiceDemographics":
	{
		"pmExternalId":${Properties#pmExternalId},
		"firstName":"Rest",
		"lastName":"Test",
		"dob":${Properties#dob},
		"address":"address1",
		"city":"cary",
		"state":"NC",
		"zip":"27513",
		"phone":"9195662525",
		"email":${Properties#email}},
		"insurance": {
    "insuranceInfo": [
      {
        "dateIssued": "",
        "tier": "PRIMARY",
        "insuranceName": "Medicare",
        "memberName": "test",
        "claimsPhoneNumber": 9198991718,
        "groupNumber": "2983",
        "memberId": "938409",
        "imageLocation": "null"
      }
    ],
    "status": "COMPLETE"
  },"coPayment":{"status":"INCOMPLETE","amount":"35"},
  "balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2396b5c7-ca0b-4121-9d5c-8fdc271b5102" name="Check for existence of [insurance]"><con:configuration><path>$.insurance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="47b78121-87e6-4098-b13e-425aa5c81d65" name="Check for existence of [status]"><con:configuration><path>$.insurance.status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#SystemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#SystemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointments v1 (NOT as staff user )" id="e8b4d4f7-6d41-48bb-bb84-d970717ec662"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="POST appointments v1 (NOT as staff user )" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW","time":${Properties#appointmentTime},"locationName":${Properties#location},"providerName":${Properties#provider},"appointmentAddress":{},"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},"firstName":"Rest","lastName":"Test","dob":${Properties#dob},"address":"address1","city":"cary","state":"NC","zip":"27513","phone":"9195662525","email":${Properties#email}},"insurance":{"status":"INCOMPLETE"},"coPayment":{"status":"INCOMPLETE","amount":"35"},"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="79f703b8-e445-4230-8b71-6c488067c8a4" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v2 POST APPOINTMENTS as STAFF user" id="184ac129-26c7-4633-a14a-60099bfcd584"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cedbf1fc-4536-479a-8848-addb30fd8a4b" name="v2 POST APPOINTMENTS as STAFF user" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/v2/appointments</con:endpoint><con:request>{
  "insurance": {
    "insuranceInfo": [
       {
        "dateIssued": "",
        "tier": "PRIMARY",
        "insuranceName": "Primary REST",
        "memberName": "Sonali Diaz",
        "claimsPhoneNumber":9283938393,
        "groupNumber": "93489",
        "memberId": "39489",
        "imageLocation": ""
      }
    ],
    "status": "INCOMPLETE"
  },
  "locationName": ${Properties#location},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "patientDemographics": {
  },
  "cancellationReason": "operator error",
  "practiceDemographics": {
    "zip": ${Properties#zip},
    "lastName": "practices",
    "address": "practice address1",
    "address2": "practice address2",
    "city": "cary",
    "pmInternalId": "2016052301",
    "firstName": "best",
    "phone": 9194554883,
    "dob": ${Properties#dob},
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "test",
    "state": "NC",
    "email": ${Properties#email}
  },
 "practiceId": ${Properties#practiceId},
"type": "xyz",
  "integrationId": "9",
  "coPayment": {
    "amount": 23,
    "inOffice": "false",
    "status": "INCOMPLETE"
  },
  "balance": {
    "amount": 12,
    "inOffice": "false",
    "payments": [
      {
        
      }
    ],
    "dueBy": "",
    "status": "INCOMPLETE"
  },
  "merchantId": ${Properties#merchantId},
  "time": ${Properties#appointmentTime},
  "staffUnread": "false",
  "appointmentAddress": {
    "zip": "27513",
    "address": "appointment address1",
    "phone": 9197882526,
    "address2": " appointment address2",
    "city": "CARY",
    "state": "NC"
  },
  "facility": "Some facility",
  "providerName": ${Properties#provider}
 
}</con:request><con:assertion type="Valid HTTP Status Codes" id="850e1588-34bc-458a-8915-826e5c5d3020" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v2 POST APPOINTMENTS as system user" id="3ba32792-6a63-48c5-9b56-0cb32c365909"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cedbf1fc-4536-479a-8848-addb30fd8a4b" name="v2 POST APPOINTMENTS as system user" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v2/appointments</con:endpoint><con:request>{
  "insurance": {
    "insuranceInfo": [
       {
        "dateIssued": "",
        "tier": "PRIMARY",
        "insuranceName": "Primary REST",
        "memberName": "Sonali Diaz",
        "claimsPhoneNumber":9283938393,
        "groupNumber": "93489",
        "memberId": "39489",
        "imageLocation": ""
      }
    ],
    "status": "INCOMPLETE"
  },
  "locationName": ${Properties#location},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "patientDemographics": {
  },
  "cancellationReason": "",
  "practiceDemographics": {
    "zip": ${Properties#zip},
    "lastName": "practices",
    "address": "practice address1",
    "address2": "practice address2",
    "city": "cary",
    "pmInternalId": "2016052301",
    "firstName": "best",
    "phone": 9194554883,
    "dob": ${Properties#dob},
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "test",
    "state": "NC",
    "email": ${Properties#email}
  },
 "practiceId": ${Properties#practiceId},
"type": "xyz",
  "integrationId": "9",
  "coPayment": {
    "amount": 23,
    "inOffice": "false",
    "status": "INCOMPLETE"
  },
  "balance": {
    "amount": 12,
    "inOffice": "false",
    "payments": [
      {
        
      }
    ],
    "dueBy": "",
    "status": "INCOMPLETE"
  },
  "merchantId": "",
  "time": ${Properties#appointmentTime},
   "startTime": ${Properties#startTime},
  "staffUnread": "false",
  "appointmentAddress": {
    "zip": "27513",
    "address": "appointment address1",
    "phone": 9197882526,
    "address2": " appointment address2",
    "city": "CARY",
    "state": "NC"
  },
  "status":"NEW",
  "facility": "Some facility",
  "providerName": ${Properties#provider}
 
}</con:request><con:assertion type="Valid HTTP Status Codes" id="850e1588-34bc-458a-8915-826e5c5d3020" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7b028dc7-68f3-43b5-ac31-c7638f0637b7" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e0434f77-d637-4fc8-abea-38d6a8788b99" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="76c134e5-0c0e-4052-8f11-e4812044c7a7" name="Check for existence of [pmAppointmentId]"><con:configuration><path>$.pmAppointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e79bc7f5-4a38-475f-acf6-d08244afd213" name="Match content of [pmAppointmentId]"><con:configuration><path>$.pmAppointmentId</path><content>${Properties#pmAppointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a15f8f01-f700-4c48-acb6-e77d595ea656" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bca7d58b-95b0-4fef-9bb4-63aac287bbba" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7e9d5f72-2c36-407b-a582-0f1bec4617cd" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3787f73b-9b71-48c8-bb1a-1d11a5790308" name="Match content of [pmExternalId]"><con:configuration><path>$.practiceDemographics.pmExternalId</path><content>${Properties#pmExternalId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#SystemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#SystemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a51acb9f-98d5-4b13-9283-eb81e018ad40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d732af9a-5a67-41e9-a3ee-00b74abfeff3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e253262-04af-4df0-93d3-3d5258e45a25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="ff5b8209-0849-41d3-84d6-284e79c246a4" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Guest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="properties" name="Properties" id="b1511ac0-5929-41eb-b46a-f317079ad4e4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appointmentIdWithQuotes</con:name><con:value>"RpmQYflQQ9LQ6GkbsxE8rr0PATbYF275fw8azkYzvf2K55yseeILPQ=="</con:value></con:property><con:property><con:name>zipcode</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"641520000000"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>patientId</con:name><con:value>8734799</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Ove6ha7G8Z1cWM56cwWllnuuoqq2TjwncLF8Q5T+kThoeUvW0bygvHsXdSCw2kbUehC8Mmd50FKeTazcnmPYA/wTwvI5+btuH3VwOhGbRSakXC7TGtV2WzKCCGQXD3nrlpaRtOn4YE/io8AwiD1s93PsJE0GPi2dU+6CfrqAGE2SyrWLdA7vApMGGAVnskgaH+VcAwbUm/2kqlwQwhd0SuJg/3FNVL6Pghb5lE124kfTOTZ5nW3xxW9sR4UHLhZf</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>5a982a5071204aa4ed3c091c</con:value></con:property><con:property><con:name>copaytoken</con:name><con:value>"e2b7a776-8ed1-40b6-a255-989bba414f22"</con:value></con:property><con:property><con:name>balancetoken</con:name><con:value>"eaa2254a-9e00-4149-80fb-eb4bce63d37c"</con:value></con:property><con:property><con:name>copayamount</con:name><con:value>76</con:value></con:property><con:property><con:name>balanceamount</con:name><con:value>66</con:value></con:property><con:property><con:name>patientdob</con:name><con:value>"05/01/1990"</con:value></con:property><con:property><con:name>getcopaytoken</con:name><con:value>"e2b7a776-8ed1-40b6-a255-989bba414f22"</con:value></con:property><con:property><con:name>getbalancetoken</con:name><con:value>"eaa2254a-9e00-4149-80fb-eb4bce63d37c"</con:value></con:property><con:property><con:name>vcsidforbalance</con:name><con:value>"92966"</con:value></con:property><con:property><con:name>timestamp</con:name><con:value>"1540499499162"</con:value></con:property><con:property><con:name>mmid</con:name><con:value>2560789797</con:value></con:property><con:property><con:name>staffAuthorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>eventType1</con:name><con:value>COPAY_PAYMENT_EVENT</con:value></con:property><con:property><con:name>eventType2</con:name><con:value>BALANCE_PAYMENT_EVENT</con:value></con:property><con:property><con:name>timeRangeStart</con:name><con:value>2018-10-25T20:29:00Z</con:value></con:property><con:property><con:name>timeRangeEnd</con:name><con:value>2018-10-25T20:33:00Z</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="b976c22b-6f9c-4401-b6ab-ba9c8109ed87"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST guest session" id="07dd320f-5b57-46fb-8a2b-2b862afea87c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="413e80a2-9c99-4eab-9d3a-8dbb39c7aa18" name="POST guest session" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:86/precheck/services/v2/guests/me/sessions</con:endpoint><con:request>{
  "zipCode": ${Properties#zipcode},
  "appointmentId": ${Properties#appointmentIdWithQuotes},
  "dob": ${Properties#dob}
  
  
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b2c2f7c0-3607-4d9d-a9b4-1cc79ab510f0" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="271f3f7f-fe84-4c70-b1d4-386cbb2a5bb2" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee3ada75-3a6f-4cad-ba73-11c098d414d5" name="Match content of [merchantId]"><con:configuration><path>$.configuration.merchantId</path><content>${Properties#mmid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b9c03476-f5c6-4e70-ac89-f4b2117fac13" name="Match content of [practiceId]"><con:configuration><path>$.configuration.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="45db1709-6748-4df3-ac8a-7a4c2cb05a30" name="Check for existence of [displayName]"><con:configuration><path>$.configuration.displayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8eec3efa-60ee-4de4-b89b-7bc15d59a3e9" name="Check for existence of [cardTypes]"><con:configuration><path>$.configuration.cardTypes</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0678e9ca-c81b-4537-88de-3dc61118bec8" name="Check for existence of [appointmentTimeZone]"><con:configuration><path>$.configuration.appointmentTimeZone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="59150809-bcb0-4a49-8749-aa23e56d1755" name="Check for existence of [disableAppointmentReminders]"><con:configuration><path>$.configuration.disableAppointmentReminders</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="70860a30-6906-4583-9f0b-15fd92572b6f" name="Check for existence of [phoneNumber]"><con:configuration><path>$.configuration.phoneNumber</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7246d477-0e50-4514-8705-383bd062e225" name="Check for existence of [appointmentReminderFromEmail]"><con:configuration><path>$.configuration.appointmentReminderFromEmail</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="a9455f63-194c-4692-b37f-a904f363b5ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def headerValue = testRunner.testCase.getTestStepByName("POST guest session").httpRequest.response.responseHeaders["Guest"].toString().trim()
int length = headerValue.length()
def token = headerValue.substring(1,length-1)
log.info token
assert token!=null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("Authorization",token )


</script></con:config></con:testStep><con:testStep type="httprequest" name="Get appointments for this patient" id="c16a136f-8dec-4954-8cd2-bebdaa958011"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2644e210-9210-40c8-a91a-7036d3707850" name="Get appointments for this patient" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:86/precheck/services/practices/${Properties#practiceId}/patients/${Properties#patientId}/appointments</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="5ccebd3f-4e23-4e0d-9881-69612febc693" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get appointment by appointmentId for Guest" id="9061c386-e5f7-487a-bbb5-da4beb12237d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ca78c58b-a948-4300-95aa-ac514fef61a9" name="Get appointment by appointmentId for Guest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:86/precheck/services/appointments/${Properties#appointmentId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d181b5f4-8ef6-41f5-a76a-7ebb814fe941" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecbad252-a544-4f6e-9a1b-c30fef0081ef" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="845c72cd-a01c-40a3-95ba-17cf6134a209" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ceaacf76-bcd2-4b52-892f-2d44716951f0" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd0f361e-7187-4195-8337-725e8f76b64e" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1613642a-a84c-435c-a5d2-0fdfd6a9043d" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="521f13d4-8b32-435f-8392-53ac5ae045c0" name="Check for existence of [lastNotificationTime]"><con:configuration><path>$.lastNotificationTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="16ea2fd2-0363-49e4-b341-fc187c4ef98c" name="Check for existence of [pmExternalId]"><con:configuration><path>$.practiceDemographics.pmExternalId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="07d111fa-84a3-4d5f-b392-e291a5e364a5" name="Check for existence of [firstName]"><con:configuration><path>$.practiceDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ebe2b88-a792-48d8-a48c-4a0b7753c9be" name="Check for existence of [lastName]"><con:configuration><path>$.practiceDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9be680ed-8237-466c-8e94-c91a234a3f2c" name="Check for existence of [amount]"><con:configuration><path>$.coPayment.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="525d2885-8ab4-46fe-a64a-033362365c9d" name="Check for existence of [amount]"><con:configuration><path>$.balance.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1731b118-8ef9-4771-873e-f4a22b8955c6" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f8954db7-b3bb-4a64-b32b-419611da94a2" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST precheck settings to enable all precheck steps" id="1e92dc8d-6787-46e9-ad4c-616ee238227c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="e58a7e4a-9169-410c-9f99-ba4cb5cca76a" name="POST precheck settings to enable all precheck steps" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": "Jakub's Practice",
   "disableDemographics": "false",
   "disableInsurance": "false",
   "disableCopay": "false",
   "disableBalance": "false",
   "minBalanceAmount": 5,
   "minBalancePercent":0 ,
   "minBalanceThreshold": 0,
   "enablePatientMode": "true",
   "patientModeCompletionMessage": "Thank you for completing precheck",
   "disableAppointmentReminders": "false",
   "phoneNumber": "9198991818",
   "appointmentReminderFromEmail": "appointments@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="db5074b8-7303-44a9-b3d6-333e820d0ce7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d58aacdf-52c1-4b68-a91b-1a0d63053f93" name="Match content of [merchantId]"><con:configuration><path>$.merchantId</path><content>${Properties#mmid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="398e7d03-f2e0-4a44-9864-677fc8d54e99" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7f43130f-368c-48c0-80d1-90a75f5e4cb6" name="Check for existence of [displayName]"><con:configuration><path>$.displayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4406122e-eba0-4def-8f70-2f12d6123766" name="Check for existence of [cardTypes]"><con:configuration><path>$.cardTypes</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2a92e104-82e5-484b-a303-728513ad40e6" name="Match content of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7f74321e-fae3-467b-8e25-b22f6f53fb3d" name="Match content of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="31c74b2a-939f-41de-ae04-f550dd4444d9" name="Match content of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="792b0fd0-9377-4432-a787-47e0adbc5822" name="Match content of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="80a7d847-19d4-40fd-81f9-10ddfcfab47a" name="Match content of [minBalanceAmount]"><con:configuration><path>$.minBalanceAmount</path><content>5.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="216d499e-c5ba-4d48-867a-2ebfd3dd8311" name="Match content of [minBalancePercent]"><con:configuration><path>$.minBalancePercent</path><content>0.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bdbf4994-1837-4ffc-a804-58a549f330bd" name="Match content of [minBalanceThreshold]"><con:configuration><path>$.minBalanceThreshold</path><content>0.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2a00e343-c956-4d1c-a9cb-0a62812dabd3" name="Match content of [enablePatientMode]"><con:configuration><path>$.enablePatientMode</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="dd1befc0-001e-47f5-bf72-754a0f82c3db" name="Check for existence of [patientModeCompletionMessage]"><con:configuration><path>$.patientModeCompletionMessage</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="be6b708e-67ae-4fe0-904a-68c843ac085f" name="Match content of [appointmentTimeZone]"><con:configuration><path>$.appointmentTimeZone</path><content>America/New_York</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="46893a20-3f26-425c-8729-a35b763503a8" name="Match content of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="04b608a6-9a7d-4e8c-92a0-44ff2ae5e50a" name="Check for existence of [phoneNumber]"><con:configuration><path>$.phoneNumber</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5f16efbf-926a-421a-9376-1efb205f08a4" name="Check for existence of [appointmentReminderFromEmail]"><con:configuration><path>$.appointmentReminderFromEmail</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffAuthorizAtion}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffAuthorizAtion}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update patient demographics" id="59907ad9-9df2-452b-a9a1-6a2b131b7580"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="ab13bac0-3771-486a-b72e-da0770d72755" name="Update patient demographics" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:86/precheck/services/practices/${Properties#practiceId}/patients/${Properties#patientId}/appointments/${Properties#appointmentId}/demographics</con:endpoint><con:request>{
  "zip": ${Properties#zipcode},
  "lastName": "updated last name",
  "address": "updated address1",
  "address2": "updated address2",
  "city": "Durham",
  "verified": true,
  "firstName": "updated first name",
  "phone": 9193443938,
  "dob": 1493596800000,
  "preferredPharmacyPhoneNumber": 3443667676,
  "preferredPharmacyName":"Some random pharmacy",
  "middleName": "f",
  "state": "NC",
  "email": "jane.rasika@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="1beb2888-9455-478c-8b05-f33509512b86" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>patientMode</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentIdWithQuotes}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get appointment by appointmentId after demographics is updated" id="8f46ac52-ae37-4fb3-a221-f365c9a07fc2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ca78c58b-a948-4300-95aa-ac514fef61a9" name="Get appointment by appointmentId after demographics is updated" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:86/precheck/services/appointments/${Properties#appointmentId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d181b5f4-8ef6-41f5-a76a-7ebb814fe941" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecbad252-a544-4f6e-9a1b-c30fef0081ef" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="845c72cd-a01c-40a3-95ba-17cf6134a209" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ceaacf76-bcd2-4b52-892f-2d44716951f0" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd0f361e-7187-4195-8337-725e8f76b64e" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1613642a-a84c-435c-a5d2-0fdfd6a9043d" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="521f13d4-8b32-435f-8392-53ac5ae045c0" name="Check for existence of [lastNotificationTime]"><con:configuration><path>$.lastNotificationTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="16ea2fd2-0363-49e4-b341-fc187c4ef98c" name="Check for existence of [pmExternalId]"><con:configuration><path>$.practiceDemographics.pmExternalId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="07d111fa-84a3-4d5f-b392-e291a5e364a5" name="Check for existence of [firstName]"><con:configuration><path>$.practiceDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ebe2b88-a792-48d8-a48c-4a0b7753c9be" name="Check for existence of [lastName]"><con:configuration><path>$.practiceDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9be680ed-8237-466c-8e94-c91a234a3f2c" name="Check for existence of [amount]"><con:configuration><path>$.coPayment.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="525d2885-8ab4-46fe-a64a-033362365c9d" name="Check for existence of [amount]"><con:configuration><path>$.balance.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1731b118-8ef9-4771-873e-f4a22b8955c6" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f8954db7-b3bb-4a64-b32b-419611da94a2" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="27c5ce79-f8f1-4a0a-aeb0-1aa30cd6f8d5" name="Match content of [firstName]"><con:configuration><path>$.patientDemographics.firstName</path><content>${Update patient demographics#RawRequest#$.firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0d15bb44-e0cc-4a0d-8635-852ab85f909b" name="Match content of [lastName]"><con:configuration><path>$.patientDemographics.lastName</path><content>${Update patient demographics#RawRequest#$.lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="54a188b5-d54b-4585-9610-63e026e07160" name="Match content of [address]"><con:configuration><path>$.patientDemographics.address</path><content>${Update patient demographics#RawRequest#$.address}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1d5b8daf-2e83-4df6-9232-0db196a6136a" name="Match content of [address2]"><con:configuration><path>$.patientDemographics.address2</path><content>${Update patient demographics#RawRequest#$.address2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7e35c54d-4f24-4668-8c07-7f59bb7534b0" name="Match content of [city]"><con:configuration><path>$.patientDemographics.city</path><content>${Update patient demographics#RawRequest#$.city}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9e66ecfa-0cef-42f7-86f3-a1b98c67c7ee" name="Match content of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>${Update patient demographics#RawRequest#$.zip}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="94d69773-cebd-4038-92ec-16e94c3521ad" name="Match content of [dob]"><con:configuration><path>$.patientDemographics.dob</path><content>${Update patient demographics#RawRequest#$.dob}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="87d13700-009a-4d45-b986-13638dafe688" name="Match content of [phone]"><con:configuration><path>$.patientDemographics.phone</path><content>${Update patient demographics#RawRequest#$.phone}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST Insurance as a GUEST" id="e878f46f-db5e-48cb-bfdf-52c1b4847cf9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7505f580-3822-4272-a753-cf9db8fe13fd" name="POST Insurance as a GUEST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:86/precheck/services/appointments/${Properties#appointmentId}/insurance</con:endpoint><con:request>[
      {
      "insuranceInfo":       {
         "insuranceName": "first insurance",
         "memberName": "test",
         "memberId": "782783",
         "groupNumber": "8923482438",
         "dateIssued": 978307200000,
         "claimsPhoneNumber": 9197882829,
         "imageLocation": null,
         "tier": "PRIMARY"
      },
      "insuranceImage": null
   },
      {
      "insuranceInfo":       {
         "insuranceName": "second insurance",
         "memberName": "",
         "memberId": "0930490",
         "groupNumber": "30490",
         "dateIssued": 978652800000,
         "claimsPhoneNumber":4555554545,
         "imageLocation": null,
         "tier": "SECONDARY"
      },
      "insuranceImage": null
   },
      {
      "insuranceInfo":       {
         "insuranceName": "",
         "memberName": "jane",
         "memberId": "9238400",
         "groupNumber": "34090",
         "dateIssued": 1457049600000,
         "claimsPhoneNumber": 9197383737,
         "imageLocation": null,
         "tier": "TERTIARY"
      },
      "insuranceImage": null
   }
]</con:request><con:assertion type="Valid HTTP Status Codes" id="0e5d600b-4ee5-4c8a-922c-77239c0fe664" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="70bdd97c-05c6-4117-9685-271686843c55" name="Match content of [status]"><con:configuration><path>$.status</path><content>COMPLETE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentIdWithQuotes}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default></con:parameter><con:parameter><con:name>patientMode</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get appointment by appointmentId after insurance is provided" id="aae2d661-dc7d-419f-a399-478f972457a2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ca78c58b-a948-4300-95aa-ac514fef61a9" name="Get appointment by appointmentId after insurance is provided" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:86/precheck/services/appointments/${Properties#appointmentId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d181b5f4-8ef6-41f5-a76a-7ebb814fe941" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecbad252-a544-4f6e-9a1b-c30fef0081ef" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="845c72cd-a01c-40a3-95ba-17cf6134a209" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ceaacf76-bcd2-4b52-892f-2d44716951f0" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd0f361e-7187-4195-8337-725e8f76b64e" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1613642a-a84c-435c-a5d2-0fdfd6a9043d" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="521f13d4-8b32-435f-8392-53ac5ae045c0" name="Check for existence of [lastNotificationTime]"><con:configuration><path>$.lastNotificationTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="16ea2fd2-0363-49e4-b341-fc187c4ef98c" name="Check for existence of [pmExternalId]"><con:configuration><path>$.practiceDemographics.pmExternalId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="07d111fa-84a3-4d5f-b392-e291a5e364a5" name="Check for existence of [firstName]"><con:configuration><path>$.practiceDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ebe2b88-a792-48d8-a48c-4a0b7753c9be" name="Check for existence of [lastName]"><con:configuration><path>$.practiceDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9be680ed-8237-466c-8e94-c91a234a3f2c" name="Check for existence of [amount]"><con:configuration><path>$.coPayment.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="525d2885-8ab4-46fe-a64a-033362365c9d" name="Check for existence of [amount]"><con:configuration><path>$.balance.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1731b118-8ef9-4771-873e-f4a22b8955c6" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f8954db7-b3bb-4a64-b32b-419611da94a2" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8ce5015-03f4-4e51-a72e-c20527b78c53" name="Match content of [status]"><con:configuration><path>$.patientProvidedInsurance.status</path><content>COMPLETE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get token for payments-COPAY" id="edf473c6-8871-49ba-9b1f-31752014a81c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2fa1f341-2aed-4893-b5a7-89ba19ba7cf4" name="Get token for payments-COPAY" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/precheck/services/appointments/${Properties#appointmentId}/payments/copay/token</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="c8279796-826d-4179-b2bd-80b797660253" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1152e2ea-ae7b-49e4-a45a-0e68d817c6c7" name="Check for existence of [token]"><con:configuration><path>$.token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script for copay" id="6c4d814c-9f3d-4dd0-83ec-7a5320502b65"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def copayresponsetoken = context.expand( '${Get token for payments-COPAY#Response#$.token}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get token for payments-COPAY"].testRequest.response.contentAsString
log.info ResponseMessage
assert ResponseMessage!=null
int length = ResponseMessage.length()
def token = ResponseMessage.substring(9,length-1)
log.info token
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("copaytoken",token )


</script></con:config></con:testStep><con:testStep type="httprequest" name="POST payNow for copay" id="496a44fb-40bc-4eaf-b127-8d7249f5dd1b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4712c454-88e5-452c-a34b-ae582c077974" name="POST payNow for copay" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/payments-rest/services/practices/${Properties#practiceId}/billpayments/vcs</con:endpoint><con:request>{
	"nameOnCreditCard":"Jane",
	"ccNum":"4111111111111111",
	"ccvCode":"123",
	"ccType":"VISA",
	"zip":"27513",
	"amount":${Properties#copayamount},
	"expDate":"01/01/2023",
	"emailAddr":${Properties#email},
	"paymentSource":"PRECHECK_COPAY",
	"paymentToken":${Properties#copaytoken},
	"patientDOB":${Properties#patientdob},
	"patientName":"test test",
	"accountNum":${Properties#patientId}
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="e1b71f8f-c342-4890-ae0a-64824840c75e" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="faf324b7-6b6a-4360-b6bc-db702370c5dd" name="Check for existence of [virtualCardSwiperId]"><con:configuration><path>$.virtualCardSwiperId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7abc0e85-4ce1-4746-acce-87599989c969" name="Check for existence of [paymentToken]"><con:configuration><path>$.paymentToken</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d0f25998-b4c5-442b-b18f-f9639a6d50c7" name="Match content of [paymentSource]"><con:configuration><path>$.paymentSource</path><content>PRECHECK_COPAY</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b84743e3-849c-4070-b0ba-26e5056d8f90" name="Check for existence of [timestamp]"><con:configuration><path>$.timestamp</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="993628c1-a78d-4a45-a77f-b9d3175aa407" name="Check for existence of [amount]"><con:configuration><path>$.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d149f6f1-38a5-4117-83e5-100d19d4bb5f" name="Match content of [status]"><con:configuration><path>$.status</path><content>PENDING</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="54a814e3-6d5c-4525-8e4c-4298c50a8247" name="Match content of [state]"><con:configuration><path>$.state</path><content>COMPLETE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9f4182b8-78ea-45e4-82d2-6655a29fa55e" name="Match content of [paymentToken]"><con:configuration><path>$.paymentToken</path><content>${POST payNow for copay#Response#$.paymentToken}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>payNow</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script for copay PUT" id="5f9b2ad2-6491-420e-b182-f5a0b3e7fbbd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def copayresponsetoken = context.expand( '${POST payNow for copay#Response#$.paymentToken}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST payNow for copay"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def token= jsonSlurper.paymentToken
log.info token


testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("getcopaytoken",'"'+token+'"' )

</script></con:config></con:testStep><con:testStep type="httprequest" name="PUT pay copay" id="0b13ccd2-8fdf-4dd4-a1b2-c6f814fc557e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="798366bb-2a67-48c3-bf9d-ecc7bcdbf196" name="PUT pay copay" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/precheck/services/appointments/${Properties#appointmentId}/payments/copay</con:endpoint><con:request>{
  "paymentToken": ${Properties#getcopaytoken},
  "amount": ${Properties#copayamount},
  "inOffice": "false",
  "status": "INCOMPLETE"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a9f621e0-3bbc-4a43-8fde-e09fb6f9bbff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>202</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get token for payments-BALANCE" id="c01ae90f-7cf3-4fa9-bf33-aad341fd4f4f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2fa1f341-2aed-4893-b5a7-89ba19ba7cf4" name="Get token for payments-BALANCE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/precheck/services/appointments/${Properties#appointmentId}/payments/balance/token</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="c8279796-826d-4179-b2bd-80b797660253" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1152e2ea-ae7b-49e4-a45a-0e68d817c6c7" name="Check for existence of [token]"><con:configuration><path>$.token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script for balance" id="fb7b59d2-ef86-4759-9989-ab565bbfa631"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def balanceresponsetoken = context.expand( '${Get token for payments-BALANCE#Response#$.token}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get token for payments-BALANCE"].testRequest.response.contentAsString
log.info ResponseMessage
assert ResponseMessage!=null
int length = ResponseMessage.length()
def token = ResponseMessage.substring(9,length-1)
log.info token
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("balancetoken",token )


</script></con:config></con:testStep><con:testStep type="httprequest" name="POST payNow for balance" id="dd1d4440-1ce7-47fd-962a-2f4420550579"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4712c454-88e5-452c-a34b-ae582c077974" name="POST payNow for balance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/payments-rest/services/practices/${Properties#practiceId}/billpayments/vcs</con:endpoint><con:request>{
	"nameOnCreditCard":"jane",
	"ccNum":"4111111111111111",
	"ccvCode":"123",
	"ccType":"VISA",
	"zip":"27513",
	"amount":${Properties#balanceamount},
	"expDate":"01/01/2023",
	"emailAddr":${Properties#email},
	"paymentSource":"PRECHECK_BALANCE",
	"paymentToken":${Properties#balancetoken},
	"patientDOB":${Properties#patientdob},
	"patientName":"test test",
	"accountNum":${Properties#patientId}
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="b7d348ef-bbd9-4c6d-86c8-a046be88266f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7da5e525-defc-486c-9f3f-64e0453bc970" name="Check for existence of [virtualCardSwiperId]"><con:configuration><path>$.virtualCardSwiperId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7eceff54-ad04-4a2d-92cf-8ddeb52edf5b" name="Check for existence of [paymentToken]"><con:configuration><path>$.paymentToken</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bca8293-78f4-48ec-923b-6024d84da88c" name="Match content of [paymentSource]"><con:configuration><path>$.paymentSource</path><content>PRECHECK_BALANCE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1d64e2c0-4c56-46da-909c-58ac1176a18b" name="Check for existence of [timestamp]"><con:configuration><path>$.timestamp</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="51a5bfa1-6f76-424b-82de-9455e11967d2" name="Check for existence of [amount]"><con:configuration><path>$.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd873adc-2c40-4ace-8c99-a919b2740d11" name="Match content of [status]"><con:configuration><path>$.status</path><content>PENDING</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91e854b1-cd4c-4c8f-9187-0198f6a4189e" name="Match content of [state]"><con:configuration><path>$.state</path><content>COMPLETE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>payNow</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script for balance paynow" id="f5bd6264-f497-4540-94ad-f8ee65ae2328"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def copayresponsetoken = context.expand( '${POST payNow for balance#Response#$.paymentToken}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["POST payNow for balance"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def token= jsonSlurper.paymentToken
assert token != null
log.info token
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("getbalancetoken",'"'+token+'"' )

def vcsid= jsonSlurper.virtualCardSwiperId
assert vcsid != null
log.info vcsid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("vcsidforbalance",'"'+vcsid+'"' )

def time= jsonSlurper.timestamp
assert time != null
log.info time
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timestamp",'"'+time+'"' )</script></con:config></con:testStep><con:testStep type="httprequest" name="PUT pay balance" id="61373bb2-acb0-432f-93bc-2c30ae199e04"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="798366bb-2a67-48c3-bf9d-ecc7bcdbf196" name="PUT pay balance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/precheck/services/appointments/${Properties#appointmentId}/payments/balance</con:endpoint><con:request>{
   "amount":${Properties#balanceamount},
   "dueBy":null,
   "status":"COMPLETE",
   "inOffice":false,
   "payments":[
      {
         "paymentToken":${Properties#getbalancetoken},
         "amount":${Properties#balanceamount},
         "vcsID":${Properties#vcsidforbalance},
         "timestamp":${Properties#timestamp}
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a9f621e0-3bbc-4a43-8fde-e09fb6f9bbff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>202</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script TO GET TIME" id="11d604f3-1a4b-4304-a2e4-f79966f58688"><con:settings/><con:config><script>TimeZone.setDefault(TimeZone.getTimeZone('UTC'))
def now = new Date()

import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    starttime = currenttime  - 2.minutes
    log.info starttime
    def timeInUtcstart = starttime.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert timeInUtcstart != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeStart",timeInUtcstart )
}


use(TimeCategory) {
    endtime = currenttime  + 2.minutes
    log.info endtime
    def timeInUtcend = endtime.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert timeInUtcend != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeEnd",timeInUtcend )
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="Get events  for copay" id="46654d13-a883-4fdc-aad3-3c24f53c9fb7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c24d2534-d938-48d7-8615-8fd680efc1ea" name="Get events  for copay" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType1}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="351dc087-47d4-4379-8d63-e932e8d8b198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f9c56a7d-b829-4c5e-8822-7b6d92c8d140" name="Match content of [practiceId]"><con:configuration><path>$[0].practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d18b7edc-fc20-46ce-bd32-4d56bf8a6ce1" name="Match content of [eventSource]"><con:configuration><path>$[0].eventSource</path><content>APPOINTMENTS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f5af8f48-7754-4cec-9dea-4260959d5810" name="Check for existence of [eventTime]"><con:configuration><path>$[0].eventTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="291b338b-98f2-4609-8e42-fcb471658e52" name="Match content of [eventReason]"><con:configuration><path>$[0].eventReason</path><content>PRECHECK_COPAY_PAYMENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b2d83740-6117-4631-a7f3-f9d7191ddcfb" name="Match content of [eventType]"><con:configuration><path>$[0].eventType</path><content>COPAY_PAYMENT_EVENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="15b5b3ea-0011-49e8-ae80-3d83cd20ea79" name="Check for existence of [eventId]"><con:configuration><path>$[0].eventId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="52d8931c-c8ad-498c-b3e5-928276781876" name="Check for existence of [copayAmount]"><con:configuration><path>$[0].copayAmount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce81c6a5-9a2d-4a9a-af66-72b736d1051b" name="Match content of [mmid]"><con:configuration><path>$[0].mmid</path><content>${Properties#mmid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="86fe8c7c-c25b-43f4-95ae-ecb2e75d5eda" name="Check for existence of [transactionId]"><con:configuration><path>$[0].transactionId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script FOR COPAY" id="ac93271e-003f-4015-a6e2-f7a6ef3fbe86"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get events  for copay"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def types= jsonSlurper.eventType
def practiceId = context.expand( '${Properties#practiceId}' )
def eventtype = "COPAY_PAYMENT_EVENT"

for(int i=0; i&lt;types.size();i++){
	def eventtypes=types[i]
	if(jsonSlurper.practiceId.equals(practiceId).toString()){
		assert eventtypes.equals(eventtype)
		break
	}
}
	</script></con:config></con:testStep><con:testStep type="httprequest" name="Get events  for balance" id="8443fd3f-fed8-40c8-b85e-f95977d816dc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c24d2534-d938-48d7-8615-8fd680efc1ea" name="Get events  for balance" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType2}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="351dc087-47d4-4379-8d63-e932e8d8b198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f9c56a7d-b829-4c5e-8822-7b6d92c8d140" name="Match content of [practiceId]"><con:configuration><path>$[0].practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d18b7edc-fc20-46ce-bd32-4d56bf8a6ce1" name="Match content of [eventSource]"><con:configuration><path>$[0].eventSource</path><content>APPOINTMENTS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f5af8f48-7754-4cec-9dea-4260959d5810" name="Check for existence of [eventTime]"><con:configuration><path>$[0].eventTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="291b338b-98f2-4609-8e42-fcb471658e52" name="Match content of [eventReason]"><con:configuration><path>$[0].eventReason</path><content>PRECHECK_BALANCE_PAYMENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b2d83740-6117-4631-a7f3-f9d7191ddcfb" name="Match content of [eventType]"><con:configuration><path>$[0].eventType</path><content>BALANCE_PAYMENT_EVENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="15b5b3ea-0011-49e8-ae80-3d83cd20ea79" name="Check for existence of [eventId]"><con:configuration><path>$[0].eventId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce81c6a5-9a2d-4a9a-af66-72b736d1051b" name="Match content of [mmid]"><con:configuration><path>$[0].mmid</path><content>${Properties#mmid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="86fe8c7c-c25b-43f4-95ae-ecb2e75d5eda" name="Check for existence of [transactionId]"><con:configuration><path>$[0].transactionId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed2c67d0-0ced-4db7-a28f-3493dacc8fa5" name="Check for existence of [balanceAmount]"><con:configuration><path>$[0].balanceAmount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script FOR BALANCE" id="6a7a8068-32b5-4a1d-af78-785ac4bf529b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get events  for balance"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def types= jsonSlurper.eventType
def practiceId = context.expand( '${Properties#practiceId}' )
def eventtype = "BALANCE_PAYMENT_EVENT"

for(int i=0; i&lt;types.size();i++){
	def eventtypes=types[i]
	if(jsonSlurper.practiceId.equals(practiceId).toString()){
		assert eventtypes.equals(eventtype)
		break
	}
}
	</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>5368f389-57bd-4ee3-b0e9-d2622a92b631</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e8bb9c19-08af-4baf-94b1-0fd8fc617413</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a7a8ad00-e421-4808-97fe-dd2965436573</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>54cb7427-f264-4f75-9efd-d4232ac9c168</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c16a136f-8dec-4954-8cd2-bebdaa958011</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9061c386-e5f7-487a-bbb5-da4beb12237d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8f46ac52-ae37-4fb3-a221-f365c9a07fc2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aae2d661-dc7d-419f-a399-478f972457a2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>496a44fb-40bc-4eaf-b127-8d7249f5dd1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6c4d814c-9f3d-4dd0-83ec-7a5320502b65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5f9b2ad2-6491-420e-b182-f5a0b3e7fbbd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5bd6264-f497-4540-94ad-f8ee65ae2328</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1e92dc8d-6787-46e9-ad4c-616ee238227c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ac93271e-003f-4015-a6e2-f7a6ef3fbe86</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>11d604f3-1a4b-4304-a2e4-f79966f58688</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b976c22b-6f9c-4401-b6ab-ba9c8109ed87</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="264de452-056b-4ecc-a21e-36cdbafc9d2b" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Precheck appointments" searchProperties="true"><con:description>Creating/retrieving appointments from precheck</con:description><con:settings/><con:testStep type="properties" name="Properties" id="6b49758b-d630-48cf-900a-76618c810a35"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"automationtest12345@mailinator.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>"20624"</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>5</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="5486ccf0-ac07-4a14-896a-1227c8c95148"><con:settings/><con:config><script>


def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def time = System.currentTimeMillis()
 log.info time
assert time!=null
 def epochtime = time.toString()
 
 
import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
def now = new Date()
log.info now
use(TimeCategory) {
  threedaysout = now + 3.days 
}
log.info threedaysout

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script test" id="2005f15b-4ecf-457d-a142-7bf5555616a5"><con:settings/><con:config><script>
import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def time = System.currentTimeMillis()
 log.info time
assert time!=null
def epochtime = time.toString()

use(TimeCategory) {
  threedaysout = epochtime + 24*3
}
log.info threedaysout</script></con:config></con:testStep><con:testStep type="httprequest" name="Get appointment by appointmentId for staff" id="0f84d9bc-d074-45e1-bf97-b912933d8f40"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ca78c58b-a948-4300-95aa-ac514fef61a9" name="Get appointment by appointmentId for staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#appointmentId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d181b5f4-8ef6-41f5-a76a-7ebb814fe941" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecbad252-a544-4f6e-9a1b-c30fef0081ef" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="845c72cd-a01c-40a3-95ba-17cf6134a209" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ceaacf76-bcd2-4b52-892f-2d44716951f0" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd0f361e-7187-4195-8337-725e8f76b64e" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1613642a-a84c-435c-a5d2-0fdfd6a9043d" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="521f13d4-8b32-435f-8392-53ac5ae045c0" name="Check for existence of [lastNotificationTime]"><con:configuration><path>$.lastNotificationTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="16ea2fd2-0363-49e4-b341-fc187c4ef98c" name="Check for existence of [pmExternalId]"><con:configuration><path>$.practiceDemographics.pmExternalId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="07d111fa-84a3-4d5f-b392-e291a5e364a5" name="Check for existence of [firstName]"><con:configuration><path>$.practiceDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ebe2b88-a792-48d8-a48c-4a0b7753c9be" name="Check for existence of [lastName]"><con:configuration><path>$.practiceDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9be680ed-8237-466c-8e94-c91a234a3f2c" name="Check for existence of [amount]"><con:configuration><path>$.coPayment.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="525d2885-8ab4-46fe-a64a-033362365c9d" name="Check for existence of [amount]"><con:configuration><path>$.balance.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get appointment by appointmentId for system user" id="64b17db9-cc89-4542-9e6a-5e777c245f4c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ca78c58b-a948-4300-95aa-ac514fef61a9" name="Get appointment by appointmentId for system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#appointmentId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d181b5f4-8ef6-41f5-a76a-7ebb814fe941" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecbad252-a544-4f6e-9a1b-c30fef0081ef" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#appointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="845c72cd-a01c-40a3-95ba-17cf6134a209" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ceaacf76-bcd2-4b52-892f-2d44716951f0" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd0f361e-7187-4195-8337-725e8f76b64e" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1613642a-a84c-435c-a5d2-0fdfd6a9043d" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="521f13d4-8b32-435f-8392-53ac5ae045c0" name="Check for existence of [lastNotificationTime]"><con:configuration><path>$.lastNotificationTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="16ea2fd2-0363-49e4-b341-fc187c4ef98c" name="Check for existence of [pmExternalId]"><con:configuration><path>$.practiceDemographics.pmExternalId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="07d111fa-84a3-4d5f-b392-e291a5e364a5" name="Check for existence of [firstName]"><con:configuration><path>$.practiceDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ebe2b88-a792-48d8-a48c-4a0b7753c9be" name="Check for existence of [lastName]"><con:configuration><path>$.practiceDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9be680ed-8237-466c-8e94-c91a234a3f2c" name="Check for existence of [amount]"><con:configuration><path>$.coPayment.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="525d2885-8ab4-46fe-a64a-033362365c9d" name="Check for existence of [amount]"><con:configuration><path>$.balance.amount</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#systemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get appointment by appointmentId(invalid appointmentId)" id="fe93f0f9-6166-4af2-b4f4-8d8a3eba8799"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ca78c58b-a948-4300-95aa-ac514fef61a9" name="Get appointment by appointmentId(invalid appointmentId)" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#invalidAppointmentId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="f8b6a98e-ea76-4b39-9c11-9f3ba7c8903e" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#invalidAppointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#invalidAppointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get the list of appointments for a practice(staff user)" id="01d98106-989d-467f-be88-77bca58244e3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="143c68a6-528a-407b-8f16-b195b88e2ab4" name="Get the list of appointments for a practice(staff user)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/appointments</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="eaa86b41-5686-44e0-9d67-52791e020d20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f8351f54-b00c-4350-b34e-a93e9dbe020a" name="Check for existence of [appointmentId]"><con:configuration><path>$[*].appointmentId</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c119f144-d588-4fcc-b1b5-4f62732f3ee5" name="Check for existence of [practiceId]"><con:configuration><path>$[*].practiceId</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter><con:parameter><con:name>date</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get the list of appointments for a practice(system user-without staff authentication)" id="ae1d4e24-d720-450c-8a97-2a0942b44c84"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="143c68a6-528a-407b-8f16-b195b88e2ab4" name="Get the list of appointments for a practice(system user-without staff authentication)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/appointments</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="eaa86b41-5686-44e0-9d67-52791e020d20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#SystemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#SystemAuthorization}</con:default></con:parameter><con:parameter><con:name>date</con:name><con:value>${Properties#date}</con:value><con:style>QUERY</con:style><con:default>${Properties#date}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v3 reminders as system user" id="bc77f8d5-7616-40e1-9f5b-28f31bd4f90e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e9f04ba1-f9c7-4f4f-ace3-e16d6be53046" name="GET v3 reminders as system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/appointments/reminders</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="2d788286-9d04-444f-80d3-cc042d0dc7f9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>daysOut[]</con:name><con:value>${Properties#daysOut}</con:value><con:style>QUERY</con:style><con:default>${Properties#daysOut}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#SystemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#SystemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v3 reminders as staff user" id="fb2e863f-9803-4b7b-8fc7-59cea8d90da2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e9f04ba1-f9c7-4f4f-ace3-e16d6be53046" name="GET v3 reminders as staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/appointments/reminders</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="2d788286-9d04-444f-80d3-cc042d0dc7f9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>daysOut[]</con:name><con:value>${Properties#daysOut}</con:value><con:style>QUERY</con:style><con:default>${Properties#daysOut}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6b49758b-d630-48cf-900a-76618c810a35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fe93f0f9-6166-4af2-b4f4-8d8a3eba8799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f84d9bc-d074-45e1-bf97-b912933d8f40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>01d98106-989d-467f-be88-77bca58244e3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ae1d4e24-d720-450c-8a97-2a0942b44c84</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bc77f8d5-7616-40e1-9f5b-28f31bd4f90e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fb2e863f-9803-4b7b-8fc7-59cea8d90da2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>64b17db9-cc89-4542-9e6a-5e777c245f4c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5486ccf0-ac07-4a14-896a-1227c8c95148</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2005f15b-4ecf-457d-a142-7bf5555616a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="c915b4c0-f2d2-4b77-a900-0344774d9cc3" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ENABLED" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="caccd780-6ad3-45ea-a7ab-71a608ca17da"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>enabledPracticeId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Get enabled practices" id="d96e85e4-7510-492e-8d0d-02c126b1fc6d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a41a7522-16d1-45d6-941a-e8143166069e" name="Get enabled practices" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/enabled</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="b93fa693-bd36-4fdd-b637-59a286662b48" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32dc2dd6-a128-4a6b-a8f8-ffcaa4aec894" name="Match content of [1]"><con:configuration><path>$.practiceIds[0]</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#SystemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#SystemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="dfe090d3-5330-44b2-b910-6441ad4f8075"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

myTestStepResult1 = testRunner.runTestStepByName("Get enabled practices")
myStatus1 = myTestStepResult1.getStatus()
log.info myStatus1

def response = context.expand( '${Get enabled practices#Response#$.[*].practiceIds}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get enabled practices"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def ids= jsonSlurper.practiceIds
log.info ids
assert ids!=null
for(int i=0; i&lt;=ids.size();i++){
	def practiceids=ids[i]
	if(ids[i].equals('20624')){
		assert ids[i].equals('20624')
		def result= ids[i]
		assert result !=null
		log.info result
		testRunner.testCase.testSteps["Properties"].setPropertyValue("enabledPracticeId",result)
		break
	}
}







</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="73888303-5eaf-4fda-a43a-0bf3b2d2b1af" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Insurance" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c1179e32-77e8-4d15-b49a-75256275e669"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>"20624"</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>insuranceAppointmentId</con:name><con:value>59b942fbe4b051eddd9069b9</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Get Insurance for staff" id="0aaf5c09-289b-4dcd-85cc-7e7f12cd40e1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7505f580-3822-4272-a753-cf9db8fe13fd" name="Get Insurance for staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#insuranceappointmentId}/insurance</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0e5d600b-4ee5-4c8a-922c-77239c0fe664" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2a9ad17b-97fa-433e-b511-568fed3be04d" name="Check for existence of [insuranceInfo]"><con:configuration><path>$[0].insuranceInfo</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#insuranceappointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#insuranceappointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get Insurance for invalid staff" id="95b5f3df-1544-4f07-a685-f364c6fe67bb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7505f580-3822-4272-a753-cf9db8fe13fd" name="Get Insurance for invalid staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#insuranceappointmentId}/insurance</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0e5d600b-4ee5-4c8a-922c-77239c0fe664" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#insuranceappointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#insuranceappointmentId}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3bce6ba2-3b8b-4888-a479-0100e91e3cf8" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Analytics" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="8f931e71-06ff-425d-a115-1aa34ccfcd72"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>"20624"</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>insuranceAppointmentId</con:name><con:value>596823dfe4b053c72e0a2417</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GET patient statistics" id="99f2b9c1-c459-446e-b06b-971deef127ab"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="684c131e-159a-4090-a5e8-82b6aac39f77" name="GET patient statistics" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/stats</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d5b08f25-9ea5-4c91-82e4-9a50be6a2975" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f69a6069-b022-4d26-8d68-218f1e846836" name="Check for existence of [WEEK]"><con:configuration><path>$.WEEK</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="411dcdef-3ac1-4817-835b-11da639a40cf" name="Check for existence of [MONTH]"><con:configuration><path>$.MONTH</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="101f85db-94aa-4385-875d-04a079283cbd" name="Check for existence of [DAY]"><con:configuration><path>$.DAY</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET patient statistics for a non-staff" id="5e8e6dc1-8bd0-41ba-98e1-4d0cc5eefed2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="684c131e-159a-4090-a5e8-82b6aac39f77" name="GET patient statistics for a non-staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/stats</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d5b08f25-9ea5-4c91-82e4-9a50be6a2975" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ea96eb8e-437b-421d-b8b7-cc9eb5785637" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Practice configs" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="7491cd8d-baed-4ec1-82c6-ad537ea9c9af"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>"20624"</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>insuranceAppointmentId</con:name><con:value>596823dfe4b053c72e0a2417</con:value></con:property><con:property><con:name>displayName</con:name><con:value>"Jakub's Practice"</con:value></con:property><con:property><con:name>demographics</con:name><con:value>"false"</con:value></con:property><con:property><con:name>insurance</con:name><con:value>"false"</con:value></con:property><con:property><con:name>copay</con:name><con:value>"false"</con:value></con:property><con:property><con:name>balance</con:name><con:value>"false"</con:value></con:property><con:property><con:name>patientMode</con:name><con:value>"true"</con:value></con:property><con:property><con:name>patientCompletionMessage</con:name><con:value>"Thank you for completing precheck"</con:value></con:property><con:property><con:name>timezone</con:name><con:value>"America/Phoenix"</con:value></con:property><con:property><con:name>reminders</con:name><con:value>"false"</con:value></con:property><con:property><con:name>practicePhone</con:name><con:value>"9198991818"</con:value></con:property><con:property><con:name>reminderEmail</con:name><con:value>"appointments@medfusion.com"</con:value></con:property><con:property><con:name>minimumBalanceAmount</con:name><con:value>25.0</con:value></con:property><con:property><con:name>minimumBalancePercent</con:name><con:value>10.0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST CONFIGS for staff-disable precheck settings" id="7680b727-e8bc-4221-b28d-68b933692fab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="20e48a78-19a1-42d9-a45e-de0e50acc136" name="POST CONFIGS for staff-disable precheck settings" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": ${Properties#displayName},
   "disableDemographics": true,
   "disableInsurance": true,
   "disableCopay": true,
   "disableBalance":true,
   "minBalanceAmount": 5,
   "minBalancePercent":0 ,
   "minBalanceThreshold": 0,
   "enablePatientMode": ${Properties#patientMode},
   "patientModeCompletionMessage": ${Properties#patientCompletionMessage},
   "disableAppointmentReminders": true,
   "phoneNumber": ${Properties#practicePhone},
   "appointmentReminderFromEmail": ${Properties#reminderEmail}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a81da7df-e585-44ce-ad90-91d80a5d60fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8f66033-24b4-4d6b-9364-2ff614ef7851" name="Match content of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="333455a0-366d-4ad9-887f-0a9e050d44cb" name="Match content of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1a218166-2f78-49b0-93cb-fb83a9bf0e73" name="Match content of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6099dbfe-0f1e-47bb-9ac7-745c1a41c3af" name="Match content of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET CONFIGS for staff after disabling everything" id="da660423-00fe-496d-b2ed-79103c15c08b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6c567895-bb31-464a-bfd8-1913d5b6694e" name="GET CONFIGS for staff after disabling everything" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/practices/me/configs</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="c3154c3f-0b49-426d-9199-5cc9b85665e3" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0d5d09da-95bc-489d-88a0-32f45935c826" name="Match content of [merchantId]"><con:configuration><path>$.merchantId</path><content>2560789797</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c02fc2d9-6f1b-4e74-abc0-e8db60524cf0" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b95fa3b5-93f6-48b5-bb76-09a9b76058c6" name="Check for existence of [displayName]"><con:configuration><path>$.displayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2783b4bf-cc42-4ee2-961f-6df6323ea14a" name="Check for existence of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6d07b83d-ab81-4430-a625-0d7813acc8d5" name="Check for existence of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b245ae6f-6066-4770-8fa3-1f6eb8af6a5d" name="Check for existence of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="55817059-6ec4-4706-a725-db4d8d8b5c89" name="Check for existence of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b9335cb5-9945-4371-a5cd-59796d7314cf" name="Check for existence of [enablePatientMode]"><con:configuration><path>$.enablePatientMode</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0be43f47-f46b-43cf-a46b-b8950f5e3f39" name="Check for existence of [appointmentTimeZone]"><con:configuration><path>$.appointmentTimeZone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="67016c9a-ffbb-4b60-ac42-2b8fa796d778" name="Check for existence of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b9bb62f-3d8c-49a2-8177-a6b473e3612e" name="Check for existence of [appointmentReminderFromEmail]"><con:configuration><path>$.appointmentReminderFromEmail</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2002b9d5-a5de-4b42-9944-e76cc4fbcaa4" name="Match content of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5ee9ce3f-a42c-482c-b039-59a934773ede" name="Match content of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="de7feba4-89bf-43b6-a7db-1fcf2c19cd39" name="Match content of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="360d78a8-893b-4f43-a279-65c724df7c2a" name="Match content of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0bf633dd-8a1e-4100-8a2f-64a1fa7948f0" name="Match content of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST CONFIGS for staff-enable everything" id="a97e24a5-9403-442a-b1b7-a2b975585d2a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="20e48a78-19a1-42d9-a45e-de0e50acc136" name="POST CONFIGS for staff-enable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": "Jakub's Practice",
   "disableDemographics": "false",
   "disableInsurance": "false",
   "disableCopay": "false",
   "disableBalance": "false",
   "minBalanceAmount": 5,
   "minBalancePercent":0 ,
   "minBalanceThreshold": 0,
   "enablePatientMode": "true",
   "patientModeCompletionMessage": "Thank you for completing precheck",
   "disableAppointmentReminders": "false",
   "phoneNumber": "9198991818",
   "appointmentReminderFromEmail": "appointments@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a81da7df-e585-44ce-ad90-91d80a5d60fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9343eec7-34f1-40b7-a74f-df0ff1f1d3f9" name="Match content of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="233f3b6f-4037-4e98-9bf9-2c6e4014cc85" name="Match content of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ffbb2e84-cff5-4d73-a685-f9a881eac7a3" name="Match content of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="257298be-3291-462d-8b52-dd27859a6fab" name="Match content of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="beb90e96-5dbf-4009-b407-dbc2d6b72c11" name="Match content of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET CONFIGS for staff" id="62846e4d-cfdf-41da-a3d6-5ac045dce52f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6c567895-bb31-464a-bfd8-1913d5b6694e" name="GET CONFIGS for staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/configs</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="c3154c3f-0b49-426d-9199-5cc9b85665e3" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0d5d09da-95bc-489d-88a0-32f45935c826" name="Match content of [merchantId]"><con:configuration><path>$.merchantId</path><content>2560789797</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c02fc2d9-6f1b-4e74-abc0-e8db60524cf0" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b95fa3b5-93f6-48b5-bb76-09a9b76058c6" name="Check for existence of [displayName]"><con:configuration><path>$.displayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2783b4bf-cc42-4ee2-961f-6df6323ea14a" name="Check for existence of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6d07b83d-ab81-4430-a625-0d7813acc8d5" name="Check for existence of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b245ae6f-6066-4770-8fa3-1f6eb8af6a5d" name="Check for existence of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="55817059-6ec4-4706-a725-db4d8d8b5c89" name="Check for existence of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b9335cb5-9945-4371-a5cd-59796d7314cf" name="Check for existence of [enablePatientMode]"><con:configuration><path>$.enablePatientMode</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0be43f47-f46b-43cf-a46b-b8950f5e3f39" name="Check for existence of [appointmentTimeZone]"><con:configuration><path>$.appointmentTimeZone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="67016c9a-ffbb-4b60-ac42-2b8fa796d778" name="Check for existence of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b9bb62f-3d8c-49a2-8177-a6b473e3612e" name="Check for existence of [appointmentReminderFromEmail]"><con:configuration><path>$.appointmentReminderFromEmail</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ac37c70e-ac2d-44bf-b95e-4d45a2c9a946" name="Match content of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="59893775-2019-4aea-861d-9c1f4c3fe4d3" name="Match content of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0edf7705-be6b-411b-8aad-fff5df566b08" name="Match content of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6872d515-d8e9-413a-8635-e3b60a423a9a" name="Match content of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="585bda85-6141-40d8-a88c-4cb518958f42" name="Match content of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET CONFIGS for non staff user" id="46b2b7ad-16ed-4448-aa9e-83d3ec868c39"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6c567895-bb31-464a-bfd8-1913d5b6694e" name="GET CONFIGS for non staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/configs</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4a476b3f-f223-42c4-b395-e4db5afbb007" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST CONFIGS for staff with minimum balance amount" id="6db56724-10aa-450f-a048-9907aa91c0fc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="20e48a78-19a1-42d9-a45e-de0e50acc136" name="POST CONFIGS for staff with minimum balance amount" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": ${Properties#displayName},
   "disableDemographics": ${Properties#demographics},
   "disableInsurance": ${Properties#insurance},
   "disableCopay": ${Properties#copay},
   "disableBalance": ${Properties#balance},
   "minBalanceAmount": ${Properties#minimumBalanceAmount},
   "minBalancePercent":"" ,
   "minBalanceThreshold": 0,
   "enablePatientMode": ${Properties#patientMode},
   "patientModeCompletionMessage": ${Properties#patientCompletionMessage},
   "disableAppointmentReminders": ${Properties#reminders},
   "phoneNumber": ${Properties#practicePhone},
   "appointmentReminderFromEmail": ${Properties#reminderEmail}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a81da7df-e585-44ce-ad90-91d80a5d60fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19f10645-ab1b-431b-9bc7-503bfe0ab9a9" name="Match content of [minBalanceAmount]"><con:configuration><path>$.minBalanceAmount</path><content>${Properties#minimumBalanceAmount}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84e91458-a55b-439b-a1a7-b8b00687239a" name="Match content of [minBalancePercent]"><con:configuration><path>$.minBalancePercent</path><content>0.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST CONFIGS for staff with minimum balance percent" id="dd6980cb-f869-42da-b014-89b608c33f51"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="20e48a78-19a1-42d9-a45e-de0e50acc136" name="POST CONFIGS for staff with minimum balance percent" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": ${Properties#displayName},
   "disableDemographics": ${Properties#demographics},
   "disableInsurance": ${Properties#insurance},
   "disableCopay": ${Properties#copay},
   "disableBalance": ${Properties#balance},
   "minBalanceAmount": "",
   "minBalancePercent":${Properties#minimumBalancePercent} ,
   "minBalanceThreshold": 0,
   "enablePatientMode": ${Properties#patientMode},
   "patientModeCompletionMessage": ${Properties#patientCompletionMessage},
   "disableAppointmentReminders": ${Properties#reminders},
   "phoneNumber": ${Properties#practicePhone},
   "appointmentReminderFromEmail": ${Properties#reminderEmail}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a81da7df-e585-44ce-ad90-91d80a5d60fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19f10645-ab1b-431b-9bc7-503bfe0ab9a9" name="Match content of [minBalanceAmount]"><con:configuration><path>$.minBalanceAmount</path><content>0.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b01dcd9-cb30-4770-a5de-83c56e86704b" name="Match content of [minBalancePercent]"><con:configuration><path>$.minBalancePercent</path><content>${Properties#minimumBalancePercent}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST CONFIGS for non staff user" id="844ef47e-78aa-4da0-bb24-6e7d87f8742a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="20e48a78-19a1-42d9-a45e-de0e50acc136" name="POST CONFIGS for non staff user" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": ${Properties#displayName},
   "disableDemographics": ${Properties#demographics},
   "disableInsurance": ${Properties#insurance},
   "disableCopay": ${Properties#copay},
   "disableBalance": ${Properties#balance},
   "minBalanceAmount": 5,
   "minBalancePercent":0 ,
   "minBalanceThreshold": 0,
   "enablePatientMode": ${Properties#patientMode},
   "patientModeCompletionMessage": ${Properties#patientCompletionMessage},
   "disableAppointmentReminders": ${Properties#reminders},
   "phoneNumber": ${Properties#practicePhone},
   "appointmentReminderFromEmail": ${Properties#reminderEmail}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a81da7df-e585-44ce-ad90-91d80a5d60fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>7680b727-e8bc-4221-b28d-68b933692fab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>da660423-00fe-496d-b2ed-79103c15c08b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a97e24a5-9403-442a-b1b7-a2b975585d2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="518cf79b-d49f-4138-80b1-bd6c7217d3e4" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager for staff user-practice-24170" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f51e70f3-473c-4930-a947-59c78a4db357"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>insuranceAppointmentId</con:name><con:value>596823dfe4b053c72e0a2417</con:value></con:property><con:property><con:name>url</con:name><con:value>"http://d1-prechk01.ops.medfusion.net"</con:value></con:property><con:property><con:name>urlBody</con:name><con:value>http://d1-prechk01.ops.medfusion.net</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"New Madhu's test practice"</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"New Madhu's test practice "</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="PUT PracticePatientSelfSchedulingConfiguration" id="5e4c724d-8a15-46c9-b4de-e845bc343952"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="PUT PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingConfiguration" id="46ed219e-ae21-4e52-bdf6-465450c2be02"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="GET PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="13f7eea4-bb18-453a-b503-f2b75528c0ac" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f1018862-67b0-4ea4-a5de-f5af4d9bc63a" name="Match content of [enabled]"><con:configuration><path>$.enabled</path><content>${PUT PracticePatientSelfSchedulingConfiguration#RawRequest#$.enabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f38c569-aed5-4653-96e6-4c9400d123b9" name="Match content of [url]"><con:configuration><path>$.url</path><content>${GET PracticePatientSelfSchedulingConfiguration#RawRequest#$.url}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="587d1957-60bf-4c5a-ac5a-1c9e3dc2d09f" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:originalMessage><![CDATA[<Response xmlns="http://d3-pt-app01.dev.medfusion.net/practice-settings-manager/v1/configuration/pss/practice/24170">
   <enabled>false</enabled>
   <practiceId>24170</practiceId>
   <url>http://www.medfusion122.com</url>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="putPracticePatientSelfSchedulingUrl" id="e7cb3206-33c6-4a22-83be-7387410ea286"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="putPracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>${Properties#urlBody}</con:request><con:assertion type="Valid HTTP Status Codes" id="827412cd-1aef-411d-9951-404c8e5fcae1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingUrl" id="67266e1f-2572-4f27-922b-8cded3c392b7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="GET PracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>${Properties#url}</con:request><con:assertion type="Valid HTTP Status Codes" id="2dbffed0-41f2-45d4-b161-a6e3ab92e409" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="5d400e5c-66b3-44be-b64e-594b60e8b15e" name="Check for existence of [data]"><con:configuration><path>exists( //data)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="00b8c848-319e-4393-a0b1-7b49a7a46f44" name="Check for existence of [@contentLength]"><con:configuration><path>exists( //data/@contentLength)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Put putPracticePrecheckConfiguration" id="6b58afea-a63d-44e9-8d77-fe4f21a95071"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="Put putPracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="350dfc3e-de99-4e70-85e5-55d382e5f78f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePrecheckConfiguration" id="ca22fbcd-5498-4cbc-b0aa-0e7c288590bc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="GET PracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="350dfc3e-de99-4e70-85e5-55d382e5f78f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7beff507-dc6a-484e-a847-a504ee38fcd3" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dd803f58-ec10-4d97-b39a-3472a4df09ae" name="Match content of [enabled]"><con:configuration><path>$.enabled</path><content>${Put putPracticePrecheckConfiguration#RawRequest#$.enabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration" id="3ebb80d7-d4d8-47e8-b8fb-8ae17ba27b89"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="PUT practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "active": false
}</con:request><con:assertion type="Valid HTTP Status Codes" id="caa6a2a6-1f6f-4e35-b342-91a6131326ca" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceConfiguration" id="587d4eeb-6d8d-4eaf-b962-89e020b950f5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="GET practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae1324a7-97c8-49db-82a8-589ec049ae4d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="66fe8b28-f4ec-4c87-a438-0859575c7278" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2d66949d-902f-4b18-8dfb-791a27ea8426" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="00d91308-aec3-4a2e-bc6f-a1eca816c89e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dd751d7a-23e1-4591-b5e0-d127fe93aadb" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceNotificationConfiguration" id="4b95034e-e2ad-4cc1-b4b2-9ba77056634c"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="PUT practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request>

{
  "appointmentRemindersEnabled": true,
  "emailEnabled": true,
  "enabled": true,
  "notifyFiveDaysOut": true,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true,
  "practiceId": ${Properties#practiceId},
  "pushEnabled": true,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceNotificationConfiguration" id="1a70038a-0399-4b59-bfc0-94d80ffdc5d1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="GET practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d44dcc8e-a0ae-461e-8734-117111f5095d" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="671453ee-13c2-47d0-88a0-ade9143eff20" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8dd17cd3-948c-4d81-b7ef-bed8c809af31" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="391832f3-d23d-4b84-b0fd-4ad8884e6899" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3c21b7e3-aa8d-4ccd-899c-f8097e256411" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager for invalid staff user" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="35119af6-a41b-4008-95fc-b13b6dd40e06"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>insuranceAppointmentId</con:name><con:value>596823dfe4b053c72e0a2417</con:value></con:property><con:property><con:name>url</con:name><con:value>"http://d1-prechk01.ops.medfusion.net"</con:value></con:property><con:property><con:name>urlBody</con:name><con:value>http://d1-prechk01.ops.medfusion.net</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"New Madhu's test practice"</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"New Madhu's test practice "</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="PUT PracticePatientSelfSchedulingConfiguration" id="53cac679-40ab-40b5-9ff5-4353083f3dee"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="PUT PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingConfiguration" id="f4298abe-5c3d-4a81-91d7-50456fd4c0c0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="GET PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="putPracticePatientSelfSchedulingUrl" id="cb8beac3-b526-4905-8e5e-dc9306c2c89a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="putPracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>
${Properties#urlBody}</con:request><con:assertion type="Valid HTTP Status Codes" id="827412cd-1aef-411d-9951-404c8e5fcae1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingUrl" id="aa13dc1f-2172-4e96-9b24-c9913b614afd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="GET PracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>${Properties#url}</con:request><con:assertion type="Valid HTTP Status Codes" id="2dbffed0-41f2-45d4-b161-a6e3ab92e409" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Put putPracticePrecheckConfiguration" id="bb82028e-67fd-44fe-ab01-8b397765bc04"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="Put putPracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="350dfc3e-de99-4e70-85e5-55d382e5f78f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePrecheckConfiguration" id="cff47dfd-4e55-4027-b253-3a4d319b8ba5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="GET PracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="350dfc3e-de99-4e70-85e5-55d382e5f78f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration" id="9a9cb63a-539d-4d8d-9f59-41e2f1924b37"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="PUT practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "active": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="caa6a2a6-1f6f-4e35-b342-91a6131326ca" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceConfiguration" id="241f41ba-0c16-415f-b266-7e636c7761cf"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="GET practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae1324a7-97c8-49db-82a8-589ec049ae4d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceNotificationConfiguration" id="e25fdee6-fdb8-4c0d-818e-024a3d7c8062"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="PUT practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "emailEnabled": true,
  "enabled": true,
  "practiceId": ${Properties#practiceId},
  "pushEnabled": true,
  "textEnabled": true,
  "notifyFiveDaysOut": true,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceNotificationConfiguration" id="984189ba-24fb-471c-89b6-64925aa33ab6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="GET practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c61c67a0-d3b6-4b73-a083-fb427b5c56b6" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="identification" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="799501f2-dd53-45cd-a12c-585a61b71202"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appointmentId</con:name><con:value>"AMZvNl2lIZvWm8clxdJvRLb7A/MywzAITK/ltewoaVciIf6vOZlFAQ=="</con:value></con:property><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GET identification for system user" id="94268e79-38c2-4e62-b1ca-07d28bc9b3bb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="476aebb4-6410-4976-bb76-15eb52648070" name="GET identification for system user" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/identification</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="bb48e1e4-f72f-4416-9c97-44fb1536afcd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ea9917d-d957-4b78-ab92-9b8b339ee00d" name="Check for existence of [practiceId]"><con:configuration><path>$.practiceId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="540a9113-1d64-48b3-a298-acde3bc44db6" name="Check for existence of [emrId]"><con:configuration><path>$.emrId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ff0bc689-bdc6-4c2b-8978-c8e956107736" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${Properties#systemAuthorization}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET identification for staff user" id="efb4f8df-f647-4c6d-bcaa-7b6644979685"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="476aebb4-6410-4976-bb76-15eb52648070" name="GET identification for staff user" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/identification</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3264a408-9a1b-4ccc-a23b-26d26627d41c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>appointmentId</con:name><con:value>${Properties#appointmentId}</con:value><con:style>QUERY</con:style><con:default>${Properties#appointmentId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${Properties#Authorization}</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7776bff0-3d34-4980-bda1-019e4a0c0510" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="scheduled appointment" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="faf68f25-f2fc-4905-a224-de6553b0e4b1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>9</con:value></con:property><con:property><con:name>emrId</con:name><con:value>24543543</con:value></con:property><con:property><con:name>zip</con:name><con:value>27513</con:value></con:property><con:property><con:name>appointmentDateTime</con:name><con:value>"2018-10-28T16:16:00 America/New_York"</con:value></con:property><con:property><con:name>locationName</con:name><con:value>"New york pss location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>345161532198529</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-01"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>47916</con:value></con:property><con:property><con:name>providerName</con:name><con:value>"Dr.Steven Peraira"</con:value></con:property><con:property><con:name>email</con:name><con:value>"automationtest12345@mailinator.com"</con:value></con:property><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>timeRangeStart</con:name><con:value>2018-10-25T20:14:00Z</con:value></con:property><con:property><con:name>timeRangeEnd</con:name><con:value>2018-10-25T20:18:00Z</con:value></con:property><con:property><con:name>eventType</con:name><con:value>EMAIL_SENT_EVENT</con:value></con:property><con:property><con:name>eventType2</con:name><con:value>TEXT_SENT_EVENT</con:value></con:property><con:property><con:name>eventType3</con:name><con:value>APPOINTMENT_SCHEDULED_EVENT</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="5a34123d-6dff-4925-841c-626ead29a49d"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 15 )
log.info randomValue
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmAppointmentId",randomValue )


def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
patientid = generator2( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 5 )
log.info patientid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmExternalId",patientid )




//"2018-03-21T11:15:00 America/New_York"
import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    appointment3Days0ut = currenttime + 1.week - 2.days - 3.seconds
    log.info appointment3Days0ut
    def timeInUtc = appointment3Days0ut.format("yyyy-MM-dd'T'HH:mm:00")
    log.info timeInUtc
 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("appointmentDateTime",'"'+timeInUtc+ " America/New_York"+'"' )
    
}</script></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="fabed595-cce7-4a88-8034-efff89c813ea"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Post scheduled appointment" id="7feb72dd-d667-4d96-9f47-94e78bcfdcd6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5c93c416-d517-435a-be93-17b56910fd88" name="Post scheduled appointment" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8099/v1/scheduled/practiceId/${Properties#practiceId}/integrationId/${Properties#integrationId}/emrId/${Properties#emrId}</con:endpoint><con:request>{
  "appointmentAddress": {
    "address": "appointment address1",
    "address2": "appointment address2",
    "city": "cary",
    "phone": 9194556748,
    "state": "NC",
    "zip": "27513"
  },
  "appointmentDateTime": ${Properties#appointmentDateTime},
  "balance": {
    "amount": 10,
    "dueBy": ""
  },
  "cancellationReason":"",
  "coPayment": {
    "amount": 10
  },
  "insurance": {
    "insuranceInfo": [
      {
        "groupNumber": "9843598",
        "memberId": "9234585"
      }
    ]
  },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "practiceDemographics": {
    "address": "PATIENT ADDRESS",
    "address2": "PATIENT ADDRESS2",
    "city": "CARY",
    "dob": ${Properties#dob},
    "state":"NC",
    "zip":${Properties#zip},
    "email": ${Properties#email},
    "firstName": "jane",
    "lastName": "rasika",
    "middleName": "",
    "phone": 9194554883,
    "pmExternalId": ${Properties#pmExternalId},
    "pmInternalId": "14134134"
   
  },
  "practiceId": ${Properties#practiceId},
  "providerName": ${Properties#providerName},
  "type": "xyz"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="fca5db73-e2ca-4a5a-9a14-4c7ede91e567" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>integrationId</con:name><con:value>${Properties#integrationId}</con:value><con:style>QUERY</con:style><con:default>${Properties#integrationId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>emrId</con:name><con:value>${Properties#emrId}</con:value><con:style>QUERY</con:style><con:default>${Properties#emrId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Post scheduled appointment- No DOB" id="a8521da7-82d8-45c9-82cb-388d87d07c11"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5c93c416-d517-435a-be93-17b56910fd88" name="Post scheduled appointment- No DOB" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8099/v1/scheduled/practiceId/${Properties#practiceId}/integrationId/${Properties#integrationId}/emrId/${Properties#emrId}</con:endpoint><con:request>{
  "appointmentAddress": {
    "address": "appointment address1",
    "address2": "appointment address2",
    "city": "cary",
    "phone": 9194556748,
    "state": "NC",
    "zip": "27513"
  },
  "appointmentDateTime": ${Properties#appointmentDateTime},
  "balance": {
    "amount": 10,
    "dueBy": ""
  },
  "cancellationReason":"",
  "coPayment": {
    "amount": 10
  },
  "insurance": {
    "insuranceInfo": [
      {
        "groupNumber": "9843598",
        "memberId": "9234585"
      }
    ]
  },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "practiceDemographics": {
    "address": "PATIENT ADDRESS",
    "address2": "PATIENT ADDRESS2",
    "city": "CARY",
    "dob": "",
    "state":"NC",
    "zip":${Properties#zip},
    "email": ${Properties#email},
    "firstName": "jane",
    "lastName": "rasika",
    "middleName": "",
    "phone": "9194554883",
    "pmExternalId": ${Properties#pmExternalId},
    "pmInternalId": "14134134"
   
  },
  "practiceId": ${Properties#practiceId},
  "providerName": ${Properties#providerName},
  "type": "xyz"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="fca5db73-e2ca-4a5a-9a14-4c7ede91e567" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>integrationId</con:name><con:value>${Properties#integrationId}</con:value><con:style>QUERY</con:style><con:default>${Properties#integrationId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>emrId</con:name><con:value>${Properties#emrId}</con:value><con:style>QUERY</con:style><con:default>${Properties#emrId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 3" id="207fa272-f0d8-44cd-8a67-48af37e1d1dc"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 15 )
log.info randomValue
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmAppointmentId",randomValue )


def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
patientid = generator2( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 5 )
log.info patientid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmExternalId",patientid )




//"2018-03-21T11:15:00 America/New_York"
import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    appointment3Days0ut = currenttime + 1.week - 4.days - 3.seconds
    log.info appointment3Days0ut
    def timeInUtc = appointment3Days0ut.format("yyyy-MM-dd'T'HH:mm:00")
    log.info timeInUtc
 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("appointmentDateTime",'"'+timeInUtc+ " America/New_York"+'"' )
    
}</script></con:config></con:testStep><con:testStep type="httprequest" name="Post scheduled appointment- No Phone number" id="f163bd99-e3f1-46b7-a925-c7a19be64d69"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="5c93c416-d517-435a-be93-17b56910fd88" name="Post scheduled appointment- No Phone number" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8099/v1/scheduled/practiceId/${Properties#practiceId}/integrationId/${Properties#integrationId}/emrId/${Properties#emrId}</con:endpoint><con:request>{
  "appointmentAddress": {
    "address": "appointment address1",
    "address2": "appointment address2",
    "city": "cary",
    "phone": 9194556748,
    "state": "NC",
    "zip": "27513"
  },
  "appointmentDateTime": ${Properties#appointmentDateTime},
  "balance": {
    "amount": 10,
    "dueBy": ""
  },
  "cancellationReason":"",
  "coPayment": {
    "amount": 10
  },
  "insurance": {
    "insuranceInfo": [
      {
        "groupNumber": "9843598",
        "memberId": "9234585"
      }
    ]
  },
  "locationName": "No Phone number location",
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "practiceDemographics": {
    "address": "PATIENT ADDRESS",
    "address2": "PATIENT ADDRESS2",
    "city": "CARY",
    "dob": ${Properties#dob},
    "state":"NC",
    "zip":${Properties#zip},
    "email": ${Properties#email},
    "firstName": "jane",
    "lastName": "rasika",
    "middleName": "",
    "phone": "",
    "pmExternalId": ${Properties#pmExternalId},
    "pmInternalId": "14134134"
   
  },
  "practiceId": ${Properties#practiceId},
  "providerName": "No Phone number pss provider",
  "type": "xyz"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="fca5db73-e2ca-4a5a-9a14-4c7ede91e567" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>integrationId</con:name><con:value>${Properties#integrationId}</con:value><con:style>QUERY</con:style><con:default>${Properties#integrationId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>emrId</con:name><con:value>${Properties#emrId}</con:value><con:style>QUERY</con:style><con:default>${Properties#emrId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceNotificationConfiguration" id="25cec307-962e-4edc-b9a8-42055fbd3c7b"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="PUT practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request>

{
  "appointmentRemindersEnabled": "true",
  "emailEnabled": true,
  "enabled": true,
  "notifyFiveDaysOut": false,
  "notifyOneDayOut": false,
  "notifyThreeDaysOut": true,
  "practiceId": ${Properties#practiceId},
  "pushEnabled": false,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v3 precheck endpoint to send appointments to reminder service" id="dcc082d6-3415-40e3-b8e1-670d74504216"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55001180-9c42-4b54-a409-90e3f469e709" name="v3 precheck endpoint to send appointments to reminder service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/appointments/reminders</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="806ecffe-b090-4ba3-aa19-d187bc2146cc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#systemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>daysOut[]</con:name><con:value>3</con:value><con:style>QUERY</con:style><con:default>3</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script6" id="8efda6d6-24f6-45ac-b827-e35871169bd5"><con:settings/><con:config><script>TimeZone.setDefault(TimeZone.getTimeZone('UTC'))
def now = new Date()

import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    starttime = currenttime  - 2.minutes
    log.info starttime
    def timeInUtcstart = starttime.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert timeInUtcstart != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeStart",timeInUtcstart )
}


use(TimeCategory) {
    endtime = currenttime  + 2.minutes
    log.info endtime
    def timeInUtcend = endtime.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert timeInUtcend != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeEnd",timeInUtcend )
}
</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay" id="ac52eea4-d972-4664-8650-23e722f14914"><con:settings/><con:config><delay>4000</delay></con:config></con:testStep><con:testStep type="httprequest" name="Get events  for reminders-Email" id="067116da-2a66-49f2-b0f4-331dadcd84b7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c24d2534-d938-48d7-8615-8fd680efc1ea" name="Get events  for reminders-Email" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="351dc087-47d4-4379-8d63-e932e8d8b198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script 2" id="b4bcdeea-7de8-4ac5-82fe-0a16c0304563"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get events  for reminders-Email"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def types= jsonSlurper.eventType
def practiceId = context.expand( '${Properties#practiceId}' )
def eventtype = "EMAIL_SENT_EVENT"

for(int i=0; i&lt;types.size();i++){
	def eventtypes=types[i]
	if(jsonSlurper.practiceId.equals(practiceId).toString()){
		assert eventtypes.equals(eventtype)
		break
	}
}
	</script></con:config></con:testStep><con:testStep type="httprequest" name="Get events  for reminders-Text" id="c1eeeff9-33c4-4e4f-9c24-3c6c849990ba"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c24d2534-d938-48d7-8615-8fd680efc1ea" name="Get events  for reminders-Text" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType2}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="351dc087-47d4-4379-8d63-e932e8d8b198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script 3" id="3f6beb08-9416-405c-8685-ba63176c68cc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get events  for reminders-Text"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def types= jsonSlurper.eventType
def practiceId = context.expand( '${Properties#practiceId}' )
def eventtype = "TEXT_SENT_EVENT"

for(int i=0; i&lt;types.size();i++){
	def eventtypes=types[i]
	if(jsonSlurper.practiceId.equals(practiceId).toString()){
		assert eventtypes.equals(eventtype)
		break
	}
}
	</script></con:config></con:testStep><con:testStep type="httprequest" name="Get events  for reminders-Confirmation" id="c930c96c-0875-4411-8dbc-024b980d74f6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c24d2534-d938-48d7-8615-8fd680efc1ea" name="Get events  for reminders-Confirmation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType3}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="351dc087-47d4-4379-8d63-e932e8d8b198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 3 2" id="704a2015-2b20-4c21-8d9b-aa08507050f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get events  for reminders-Confirmation"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def types= jsonSlurper.eventType
def practiceId = context.expand( '${Properties#practiceId}' )
def eventtype = "APPOINTMENT_SCHEDULED_EVENT"

for(int i=0; i&lt;types.size();i++){
	def eventtypes=types[i]
	if(jsonSlurper.practiceId.equals(practiceId).toString()){
		assert eventtypes.equals(eventtype)
		break
	}
}
	</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>faf68f25-f2fc-4905-a224-de6553b0e4b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fabed595-cce7-4a88-8034-efff89c813ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a34123d-6dff-4925-841c-626ead29a49d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>25cec307-962e-4edc-b9a8-42055fbd3c7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>207fa272-f0d8-44cd-8a67-48af37e1d1dc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2cef948c-917c-4766-91ae-cdbce022f735" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Schedule Reminder Data" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="0f0362fa-006a-4a61-8abd-784c19038323"><con:settings/><con:config><script>TimeZone.setDefault(TimeZone.getTimeZone('UTC'))
def now = new Date()

import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    appointmenttime = currenttime  - 3.minutes
    log.info appointmenttime
    def timeInUtc = appointmenttime.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert currenttime != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("createdDate",timeInUtc )
}


def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 5 )
log.info randomValue
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("emrId",randomValue )
</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="c8e7117c-00c2-4879-8d3f-f057d65e6be4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>birthDate</con:name><con:value>"1990-1-27 "</con:value></con:property><con:property><con:name>firstName</con:name><con:value>"Asher"</con:value></con:property><con:property><con:name>lastName</con:name><con:value>"Rodrigues"</con:value></con:property><con:property><con:name>emailAddress</con:name><con:value>"scheduleapptdev@mailinator.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>emrId</con:name><con:value>12923</con:value></con:property><con:property><con:name>createdDate</con:name><con:value>2018-05-02T20:58:00Z</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="PUT v4 practice configuration for staff - enable everything" id="c27ffc60-10af-49a3-a208-61c1c2723b8f"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v4 practice configuration for staff - enable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": "",
   "practiceName": "Automation Jakub's practice",
   "practiceDisplayName": "Automation Jakub's practice",
   "practiceTimezone": "America/New_York",
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": false,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": false,
   "notifyOneDayOut": false,
   "notifyLanguage": "en-es",
   "pssEnabled": true,
   "pssUrl": "www.medfusion.com",
   "precheckEnabled": false,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en-es</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0309889b-2002-4e59-9f5d-1d729280e85a"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="httprequest" name="POST create schedule reminder data" id="65d456ed-b002-471d-a34a-c62094a1b0a8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0abd871b-070f-4009-991b-f40a74fbd923" name="POST create schedule reminder data" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8087/v1/reminderdata</con:endpoint><con:request>{
  "addressLineOne": "address 1",
  "addressLineTwo": "address 2",
  "birthDate": ${Properties#birthDate},
  "createdTs": "",
  "emailAddress": ${Properties#emailAddress},
  "emrId": ${Properties#emrId},
  "firstName": ${Properties#firstName},
  "lastName":${Properties#lastName},
  "pStatus": "A",
  "phoneOne": 9194554883,
  "phoneOneType": "Cell",
  "phoneThree": "",
  "phoneThreeType": "",
  "phoneTwo": "9194554883",
  "phoneTwoType": "Home",
  "practiceId": ${Properties#practiceId},
  "sex": "M"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b93a8cf4-a22d-41c1-8696-83b63b50ec9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7d4c6ee3-f635-4d83-9317-37e717d6edf7" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="76555c33-5253-434b-9d45-b04c6863b41a" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="97f58040-17bc-45e0-959e-2d3bdabbc7a6" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>ddd</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Get schedule reminder data" id="6aeaaaa0-b756-4c2c-a0f5-d6f5c6e75360"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0316aa7e-8a20-41e8-8c69-432feae65324" name="Get schedule reminder data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8087/v1/reminderdata</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e078b182-58a2-412f-82b7-653e58eba21a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>createdDate</con:name><con:value>${Properties#createdDate}</con:value><con:style>QUERY</con:style><con:default>${Properties#createdDate}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="send schedule appointment reminders" id="b72b29d8-ccae-43cf-8f22-c39eb96529bb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="61c765a8-07f3-4b91-afdd-df6bf8309faf" name="send schedule appointment reminders" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email/schedule</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="a06c3a15-2117-4b6d-84c9-e26bff0fedb1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>createdOnOrAfterDate</con:name><con:value>${Properties#createdDate}</con:value><con:style>QUERY</con:style><con:default>${Properties#createdDate}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceNotificationConfiguration-Disable notifications" id="357310a6-8a54-46c0-85d6-6cb5650016f5"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="PUT practiceNotificationConfiguration-Disable notifications" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request>

{
  "appointmentRemindersEnabled": "true",
  "emailEnabled": false,
  "enabled": false,
  "notifyFiveDaysOut": false,
  "notifyOneDayOut": false,
  "notifyThreeDaysOut": true,
  "practiceId": ${Properties#practiceId},
  "pushEnabled": false,
  "textEnabled": false
}</con:request><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay" id="06e1775b-59ba-4b7a-b07b-220f8e255b7a"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="httprequest" name="send schedule appointment reminders 2" id="91ca1528-8d66-4c42-9bf6-e1249c87e5a8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="61c765a8-07f3-4b91-afdd-df6bf8309faf" name="send schedule appointment reminders 2" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email/schedule</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="a06c3a15-2117-4b6d-84c9-e26bff0fedb1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="677d00b0-254b-4a25-bdee-f8a4afada84b" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
 
def response = messageExchange.response.responseContent
def slurper = new JsonSlurper()
def json=slurper.parseText response
def result= json
assert result == []
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>createdOnOrAfterDate</con:name><con:value>${Properties#createdDate}</con:value><con:style>QUERY</con:style><con:default>${Properties#createdDate}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v4 practice configuration for staff - Disable PSS" id="7c5cf8cc-97e5-4afd-9cfd-22917dc34e4a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v4 practice configuration for staff - Disable PSS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": "",
   "practiceName": "Automation Jakub's practice",
   "practiceDisplayName": "Automation Jakub's practice",
   "practiceTimezone": "America/New_York",
   "active": false,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": false,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": false,
   "notifyOneDayOut": false,
   "notifyLanguage": "es-en",
   "pssEnabled": false,
   "pssUrl": "www.medfusion.com",
   "precheckEnabled": false,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Disable PSS#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="6514c0cd-bbf1-42f7-94a8-0ee06561f18e"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="httprequest" name="send schedule appointment reminders 3" id="3aa7862b-b866-455e-93d2-90594a3cec81"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="61c765a8-07f3-4b91-afdd-df6bf8309faf" name="send schedule appointment reminders 3" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email/schedule</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="a06c3a15-2117-4b6d-84c9-e26bff0fedb1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="677d00b0-254b-4a25-bdee-f8a4afada84b" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
 
def response = messageExchange.response.responseContent
def slurper = new JsonSlurper()
def json=slurper.parseText response
def result= json
assert result == []
</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>createdOnOrAfterDate</con:name><con:value>${Properties#createdDate}</con:value><con:style>QUERY</con:style><con:default>${Properties#createdDate}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c8e7117c-00c2-4879-8d3f-f057d65e6be4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f0362fa-006a-4a61-8abd-784c19038323</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0309889b-2002-4e59-9f5d-1d729280e85a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c27ffc60-10af-49a3-a208-61c1c2723b8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3d0fb8c2-fef4-4983-8e02-d3455fd5d97f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="aggregation service" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="f85e5905-9898-479a-854c-c554dd3fb2d9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>mupid</con:name><con:value>24170916</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property><con:property><con:name>emrId</con:name><con:value>16</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>9</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>"5989f5f1a88d633aa1dfc36a"</con:value></con:property><con:property><con:name>externalEntityId</con:name><con:value>"597634ede4b07025c3e33131"</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"test practice"</con:value></con:property><con:property><con:name>callToAction</con:name><con:value>"www.google.com"</con:value></con:property><con:property><con:name>message</con:name><con:value>"Your precheck notification is here"</con:value></con:property><con:property><con:name>invalidmupid</con:name><con:value>34893434</con:value></con:property><con:property><con:name>invalidnotificationId</con:name><con:value>"5989f5f1a88d633aa1dfc3g545"</con:value></con:property><con:property><con:name>deletenotificationid</con:name><con:value>59baadcaa88d633aa1dfc48e</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GET token for data aggregation service" id="bd5b4a26-533d-4678-b453-37ba853d959a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="249ad159-9867-4357-afbb-3360b4286f5b" name="GET token for data aggregation service" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="2116ee58-4ebd-4d00-a242-35885213636e" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e3f521de-c681-46ba-af46-0b7062279585" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1d533e46-9527-42ec-9b5c-01a787c202ed" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET appointment notifications with a valid token" id="8269c15e-972e-4c85-ad0d-1f6c7955e972"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="GET appointment notifications with a valid token" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#mupid}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8763d113-639d-4bb3-aac3-ae016e51dbb0" name="Check for existence of [notificationId]"><con:configuration><path>$[*].notificationId</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e990f881-552c-4fb7-b06f-da5e0003d65b" name="Check for existence of [practiceId]"><con:configuration><path>$[*].practiceId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7710039b-8c81-41cb-af4d-cad97dc01301" name="Check for existence of [emrId]"><con:configuration><path>$[*].emrId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b6d21a00-4f7a-4384-96e5-00eb265929a8" name="Check for existence of [integrationId]"><con:configuration><path>$[*].integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET appointment notifications without a valid token" id="b9f778c7-6a79-4e82-9669-349aa56b796c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="GET appointment notifications without a valid token" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#mupid}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointment notification with a valid token" id="351d6b65-afd3-4824-957b-6af875d1d6cc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="POST appointment notification with a valid token" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#mupid}</con:endpoint><con:request>{
  "notificationId":${Properties#notificationId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToActionUrl":${Properties#callToAction} ,
  "message": ${Properties#message} ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c8e2d39a-2d1a-4e4b-99fb-a6d0f7da9992" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b4cd2df7-4f3e-4e00-8447-aa9f365a8bc8" name="Check for existence of [notificationId]"><con:configuration><path>$.notificationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e601091e-aaea-4d63-8120-aaee87313e91" name="Match content of [mupid]"><con:configuration><path>$.mupid</path><content>${Properties#mupid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07497433-c61c-4931-9f5e-8839b730792e" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce03cfef-baef-48c4-9ef7-df08fa431bda" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee73a607-659a-4c84-ad39-6eb169cffd89" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f403f45d-1e80-46b8-988f-17ccc8be01f4" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f56006d4-9635-4fbd-b4da-2977546f2b47" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="925a63bb-f8b7-448c-8701-f284d258442c" name="Check for existence of [callToActionUrl]"><con:configuration><path>$.callToActionUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f208955d-ed0e-40c9-bd02-8f9b06af5157" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointment notification without a token" id="37f90db9-31e4-49cd-81c2-7a73944cdd58"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="POST appointment notification without a token" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#mupid}</con:endpoint><con:request>{
  "notificationId":${Properties#notificationId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToActionUrl":${Properties#callToAction} ,
  "message": ${Properties#message} ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointment notification with a valid token, to an invalid mupid" id="1737aef7-d24f-4315-b23a-dd438e987a77"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="POST appointment notification with a valid token, to an invalid mupid" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#invalidmupid}</con:endpoint><con:request>{
  "notificationId":${Properties#notificationId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToActionUrl":${Properties#callToAction} ,
  "message": ${Properties#message} ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c8e2d39a-2d1a-4e4b-99fb-a6d0f7da9992" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b4cd2df7-4f3e-4e00-8447-aa9f365a8bc8" name="Check for existence of [notificationId]"><con:configuration><path>$.notificationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e601091e-aaea-4d63-8120-aaee87313e91" name="Match content of [mupid]"><con:configuration><path>$.mupid</path><content>${Properties#invalidmupid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07497433-c61c-4931-9f5e-8839b730792e" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce03cfef-baef-48c4-9ef7-df08fa431bda" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee73a607-659a-4c84-ad39-6eb169cffd89" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f403f45d-1e80-46b8-988f-17ccc8be01f4" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f56006d4-9635-4fbd-b4da-2977546f2b47" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="925a63bb-f8b7-448c-8701-f284d258442c" name="Check for existence of [callToActionUrl]"><con:configuration><path>$.callToActionUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f208955d-ed0e-40c9-bd02-8f9b06af5157" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointment notification with a valid token, with an invalid notificationId" id="43265a84-2d70-40fc-836c-1ef53fa508f4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="POST appointment notification with a valid token, with an invalid notificationId" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#invalidmupid}</con:endpoint><con:request>{
  "notificationId":${Properties#invalidnotificationId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToActionUrl":${Properties#callToAction} ,
  "message": ${Properties#message} ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c8e2d39a-2d1a-4e4b-99fb-a6d0f7da9992" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b4cd2df7-4f3e-4e00-8447-aa9f365a8bc8" name="Check for existence of [notificationId]"><con:configuration><path>$.notificationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e601091e-aaea-4d63-8120-aaee87313e91" name="Match content of [mupid]"><con:configuration><path>$.mupid</path><content>${Properties#invalidmupid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07497433-c61c-4931-9f5e-8839b730792e" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce03cfef-baef-48c4-9ef7-df08fa431bda" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee73a607-659a-4c84-ad39-6eb169cffd89" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f403f45d-1e80-46b8-988f-17ccc8be01f4" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f56006d4-9635-4fbd-b4da-2977546f2b47" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="925a63bb-f8b7-448c-8701-f284d258442c" name="Check for existence of [callToActionUrl]"><con:configuration><path>$.callToActionUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f208955d-ed0e-40c9-bd02-8f9b06af5157" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT Update appointment notification with a valid token" id="1c355015-a960-4d4f-996b-ed6461ed5f25"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="PUT Update appointment notification with a valid token" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#mupid}</con:endpoint><con:request>{
  "notificationId":${Properties#notificationId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToActionUrl":"www.yahoo.com",
  "message": "Hello" ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c8e2d39a-2d1a-4e4b-99fb-a6d0f7da9992" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b4cd2df7-4f3e-4e00-8447-aa9f365a8bc8" name="Check for existence of [notificationId]"><con:configuration><path>$.notificationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e601091e-aaea-4d63-8120-aaee87313e91" name="Match content of [mupid]"><con:configuration><path>$.mupid</path><content>${Properties#mupid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07497433-c61c-4931-9f5e-8839b730792e" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ce03cfef-baef-48c4-9ef7-df08fa431bda" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee73a607-659a-4c84-ad39-6eb169cffd89" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f403f45d-1e80-46b8-988f-17ccc8be01f4" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f56006d4-9635-4fbd-b4da-2977546f2b47" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="925a63bb-f8b7-448c-8701-f284d258442c" name="Check for existence of [callToActionUrl]"><con:configuration><path>$.callToActionUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f208955d-ed0e-40c9-bd02-8f9b06af5157" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET appointment notifications with a valid token after update" id="19ddcd29-873c-4e66-96d9-a64dc28a081f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="GET appointment notifications with a valid token after update" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/mupid/${Properties#mupid}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8763d113-639d-4bb3-aac3-ae016e51dbb0" name="Check for existence of [notificationId]"><con:configuration><path>$[*].notificationId</path><content>true</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e990f881-552c-4fb7-b06f-da5e0003d65b" name="Check for existence of [practiceId]"><con:configuration><path>$[*].practiceId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7710039b-8c81-41cb-af4d-cad97dc01301" name="Check for existence of [emrId]"><con:configuration><path>$[*].emrId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b6d21a00-4f7a-4384-96e5-00eb265929a8" name="Check for existence of [integrationId]"><con:configuration><path>$[*].integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="840e1e49-394b-40b8-83e5-9e2170ac19eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;


def response= context.expand( '${GET appointment notifications with a valid token after update#Response#$.notificationId}' )
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["GET appointment notifications with a valid token after update"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def notificationids = jsonSlurper.notificationId
assert notificationids != null
	for(int i=0;;){
		def firstnotification = notificationids[i]
		assert firstnotification !=null
		log.info firstnotification
		testRunner.testCase.testSteps["Properties"].setPropertyValue("deletenotificationid",firstnotification)
		break
	}


</script></con:config></con:testStep><con:testStep type="httprequest" name="Delete appointment notification with a valid token" id="d86441b3-fdeb-487e-9c58-f11a7369465b"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="4c12fb1b-33b9-4da5-ad5a-e96695ef67b1" name="Delete appointment notification with a valid token" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8117/data-aggregation/v1/notifications/notificationId/${Properties#deletenotificationid}/mupid/${Properties#mupid}</con:endpoint><con:request>{
  "notificationId":${Properties#notificationId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToActionUrl":${Properties#callToAction} ,
  "message": ${Properties#message} ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="0fc054bf-606e-4d4b-9e2e-4caa39dcec20" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${GET token for data aggregation service#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>f85e5905-9898-479a-854c-c554dd3fb2d9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19ddcd29-873c-4e66-96d9-a64dc28a081f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>840e1e49-394b-40b8-83e5-9e2170ac19eb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="b61660b4-b0ed-4124-8ee0-9f744e646031" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Reminders resource v1" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="23cd1cb5-c7df-40ee-bb52-ce8ebdf0e8a2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1,3,5</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>createdOnOrAfterDate</con:name><con:value>2018-04-04T16:00:46Z</con:value></con:property><con:property><con:name>TODAY</con:name><con:value>2017-09-16</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="497b8ba2-0e19-47f3-b995-e555ab7431e0"><con:settings/><con:config><script>TimeZone.setDefault(TimeZone.getTimeZone('UTC'))
def now = new Date()

def createdtime = now.format("yyyy-MM-dd'T'HH:mm:ss'Z'")
assert createdtime != null
log.info createdtime
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("createdOnOrAfterDate",createdtime )</script></con:config></con:testStep><con:testStep type="httprequest" name="send  check in reminders" id="6cfd9fbf-9540-4333-88da-764c3044ce43"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e758babc-2ad9-4024-8345-1c5df915e9b2" name="send  check in reminders" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v1/email/checkin</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="541b68bb-7415-4fd0-98a1-f9c8b52f714a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>daysOut[]</con:name><con:value>${Properties#daysOut}</con:value><con:style>QUERY</con:style><con:default>${Properties#daysOut}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>TODAY</con:name><con:value>2017-09-16</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>23cd1cb5-c7df-40ee-bb52-ce8ebdf0e8a2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>497b8ba2-0e19-47f3-b995-e555ab7431e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="a7ba287f-f50f-41c2-afcd-d2c196031394" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Notification display" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="e2f92517-04a2-4dd1-956c-cdbee3809447"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>appointmentId</con:name><con:value>"597634ede4b07025c3e33131"</con:value></con:property><con:property><con:name>notificationId</con:name><con:value/></con:property><con:property><con:name>callToAction</con:name><con:value>"www.google.com"</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>9</con:value></con:property><con:property><con:name>message</con:name><con:value>"Your precheck notification is here"</con:value></con:property><con:property><con:name>emrId</con:name><con:value>16</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"test practice"</con:value></con:property><con:property><con:name>source</con:name><con:value>"PRECHECK"</con:value></con:property><con:property><con:name>scheduleAppointmentReminderId</con:name><con:value>"test345"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Create precheck notification" id="e3570b6e-8ae5-4307-ab83-ccfbb2ded835"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8994716f-ffe1-473f-bed0-d65fa3c7b5f4" name="Create precheck notification" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8085/v1/notification/precheck</con:endpoint><con:request>{
  "appointmentId":${Properties#appointmentId},
  "callToAction": ${Properties#callToAction},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "message": ${Properties#message},
  "practiceId": ${Properties#practiceId},
  "practiceName": ${Properties#practiceName},
  "source": ${Properties#source}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="58096415-1d9f-4d6b-a2e5-a50dd1f6fea6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="121290fa-9f2c-45bf-b1bf-a8dc93f7dfa3" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6d2c55ca-a8f4-4dee-b2f1-b78f4984131e" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="92b7b1e1-275a-4796-b71d-101b9a944c35" name="Match content of [source]"><con:configuration><path>$.source</path><content>PRECHECK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c04c0c59-3479-4410-b6ff-dc4aceed8e83" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET precheck notification by Id" id="f85c58dc-5a12-4ce5-8aad-25af17cbbd7e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4bb1ef1-5408-4e85-8549-b0d963355ea5" name="GET precheck notification by Id" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8085/v1/notification/${Create precheck notification#Response#$.id}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ea79a15d-aa0e-473a-8182-91039f92da0b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a56fd886-7bfd-4f1c-83cd-b078850b069e" name="Match content of [id]"><con:configuration><path>$.id</path><content>${Create precheck notification#Response#$.id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9c98745d-b083-4029-be59-da85c8295ea0" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e8624a96-7e1d-483e-bdfb-885423a0749f" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Create precheck notification#Response#$.emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c19d1703-4113-4acb-af37-4fc71b3c048c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Create precheck notification#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eedc450d-e3d5-410e-9053-f93fb01f9116" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cbf00425-318e-4508-8767-f50d69b2b3e8" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="220a0b31-9b32-4e8f-bf9e-1d6ce40e3d04" name="Match content of [externalEntityId]"><con:configuration><path>$.externalEntityId</path><content>${Create precheck notification#Response#$.externalEntityId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="eb76f6bb-ffd2-44b3-97a3-269bf2e8d698" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${Create precheck notification#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0447dd56-0bbf-491a-8050-c009b4a256cb" name="Match content of [callToAction]"><con:configuration><path>$.callToAction</path><content>${Create precheck notification#Response#$.callToAction}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a83fd2ac-6598-4063-a4dd-f615a7ec9f5d" name="Match content of [message]"><con:configuration><path>$.message</path><content>Your precheck notification is here</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Create schedule notification" id="4c6645a5-df80-4ed0-b8f6-762826b8812b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cfcc116f-8dd3-4c4f-9430-e986eca82532" name="Create schedule notification" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8085/v1/notification/schedule</con:endpoint><con:request>{
  "callToAction": ${Properties#callToAction},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "message": ${Properties#message},
  "practiceId": ${Properties#practiceId},
  "practiceName": ${Properties#practiceName},
  "scheduleAppointmentReminderId": ${Properties#scheduleAppointmentReminderId},
  "source": ${Properties#source}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="ec298cdd-4744-4429-89eb-46da6e5ca467" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3844fb54-65ee-49eb-83f9-e83077c10d48" name="Check for existence of [id]"><con:configuration><path>$.id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0b06b257-6f17-403e-b392-bbdb67e5b22f" name="Check for existence of [externalEntityId]"><con:configuration><path>$.externalEntityId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="3107045e-d59f-4047-946f-7e26599790fe" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-ap-app01.dev.medfusion.net/v1/notification/schedule';
//ns1:Response[1]/ns1:externalEntityId[1]</con:xpath><con:element>externalEntityId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-ap-app01.dev.medfusion.net/v1/notification/schedule';
//ns1:Response[1]/ns1:emrId[1]</con:xpath><con:element>emrId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>16</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-ap-app01.dev.medfusion.net/v1/notification/schedule">
   <callToAction>www.google.com</callToAction>
   <emrId>16</emrId>
   <externalEntityId>test345</externalEntityId>
   <id>5991c8fba88d633aa1dfc38a</id>
   <integrationId>9</integrationId>
   <message>Your precheck notification is here</message>
   <practiceId>24170</practiceId>
   <practiceName>test practice</practiceName>
   <source>PRECHECK</source>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d3540f52-0ea1-4fc8-abe5-4cffd946c08e" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="04874faf-8f23-4be0-b412-9e76175d6910" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f979a113-923f-4f03-80fd-0460ff7786d7" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2ccfff40-2a96-40bf-b7e1-eb200abaae97" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7855fed5-67b9-4a3c-8b61-8e28947e19a7" name="Check for existence of [callToAction]"><con:configuration><path>$.callToAction</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0585f433-cd30-4a12-9057-a6830a4d5c83" name="Match content of [message]"><con:configuration><path>$.message</path><content>Your precheck notification is here</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fc6ae800-1280-46a8-8002-c484b1149786" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET schedule notification by Id" id="92d5e045-11e2-4da7-92c1-bf1c16dd8cdb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b4bb1ef1-5408-4e85-8549-b0d963355ea5" name="GET schedule notification by Id" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8085/v1/notification/${Create schedule notification#Response#$.id}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ea79a15d-aa0e-473a-8182-91039f92da0b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9c98745d-b083-4029-be59-da85c8295ea0" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e8624a96-7e1d-483e-bdfb-885423a0749f" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Create schedule notification#Response#$.emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c19d1703-4113-4acb-af37-4fc71b3c048c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Create precheck notification#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eedc450d-e3d5-410e-9053-f93fb01f9116" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cbf00425-318e-4508-8767-f50d69b2b3e8" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="eb76f6bb-ffd2-44b3-97a3-269bf2e8d698" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${Create schedule notification#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0447dd56-0bbf-491a-8050-c009b4a256cb" name="Match content of [callToAction]"><con:configuration><path>$.callToAction</path><content>${Create schedule notification#Response#$.callToAction}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a83fd2ac-6598-4063-a4dd-f615a7ec9f5d" name="Match content of [message]"><con:configuration><path>$.message</path><content>Your precheck notification is here</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e1b9587c-622c-47e2-981a-4f0859a83188" name="Match content of [id]"><con:configuration><path>$.id</path><content>${Create schedule notification#Response#$.id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="080fd81f-1846-4efc-9263-62267968195a" name="Match content of [externalEntityId]"><con:configuration><path>$.externalEntityId</path><content>${Create schedule notification#Response#$.externalEntityId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e2f92517-04a2-4dd1-956c-cdbee3809447</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="02db01be-87e2-4152-b887-ca090fc7503a" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Precheck appointment creation logic regression" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="properties" name="Properties" id="74e63c88-2834-472e-9ff9-6c4d25089a90"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>enabledPracticeId</con:name><con:value>20624</con:value></con:property><con:property><con:name>disabledPracticeId</con:name><con:value>24148</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1526484536391</con:value></con:property><con:property><con:name>location</con:name><con:value>"jane's 24052 precheck location"</con:value></con:property><con:property><con:name>provider</con:name><con:value>"jane's 24052 precheck provider"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>36786</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-01"</con:value></con:property><con:property><con:name>email</con:name><con:value>"soapuidev@mailinator.com"</con:value></con:property><con:property><con:name>enabledAuthorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>disabledAuthorization</con:name><con:value>Basic c2luZzExOndlbGNvbWUy</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>344</con:value></con:property><con:property><con:name>timeZone</con:name><con:value>"America/Anchorage"</con:value></con:property><con:property><con:name>timezoneid</con:name><con:value>America/Anchorage</con:value></con:property><con:property><con:name>startTime</con:name><con:value>"5/14/2018 13:28:53 PM"</con:value></con:property><con:property><con:name>noTimeZonePracticeId</con:name><con:value>24052</con:value></con:property><con:property><con:name>noTimeZonePracticeAuthorization</con:name><con:value>Basic YWthZnVrYTppZGtmYTE=</con:value></con:property><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="e38857f5-dd16-4e8d-8e53-069a11e7b135"><con:settings/><con:config><script>
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def time = System.currentTimeMillis()
 log.info time
assert time!=null
 def epochtime = time.toString()
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("appointmentTime",epochtime )


def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
patientid = generator2( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 5 )
log.info patientid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmExternalId",patientid )



currenttime = new Date()
use(TimeCategory) {
    appointment3Days0ut = currenttime + 1.week - 4.days + 2.hours - 3.seconds
    log.info appointment3Days0ut
    def timeInUtc = appointment3Days0ut.format("M/dd/yyyy H:mm:ss a")
    log.info timeInUtc
 	 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("startTime",'"'+timeInUtc+'"' )
}



import groovy.time.TimeCategory
now = new Date()
use(TimeCategory) {
 def futuretime = now + 5.days 
 def timeinmillis = futuretime.getTime().toString()
 log.info timeinmillis
 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("appointmentTime",timeinmillis )

}


</script></con:config></con:testStep><con:testStep type="httprequest" name="Set timezone for enabled practice with configuration set" id="15aa00f3-7678-429e-9eb0-21c9654cfbd6"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="Set timezone for enabled practice with configuration set" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration/practice/${Properties#enabledPracticeId}</con:endpoint><con:request>{
  "active": true,
  "appointmentRemindersEnabled": true,
  "emailEnabled": true,
  "integrationId": ${Properties#integrationId},
  "notificationsEnabled": true,
  "notifyFiveDaysOut": false,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true,
  "practiceDisplayName": "New Test practice",
  "practiceForms": [
  {
    
    "formTitle": "Real form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
    "practiceId": ${Properties#enabledPracticeId}
    
  },

  {
    
    "formTitle": "HIPAA policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
    "practiceId": ${Properties#enabledPracticeId}
    
  },
  {
    
    "formTitle": "Financial policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
    "practiceId": ${Properties#enabledPracticeId}
    
  }
  
 
  
],
  "practiceId": ${Properties#enabledPracticeId},
  "practiceName": "New test practice",
  "practiceTimezone": ${Properties#timeZone},
  "precheckEnabled": true,
  "pssEnabled": true,
  "pssUrl": "www.medfusion.com",
  "pushEnabled": false,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="68b9dfbb-0784-4f3e-aede-796a1188b338" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#enabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4540b749-1c0c-49be-b86d-420d692efe9c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e93322aa-51c5-49b6-929c-4edfc81554b6" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3be7bbce-ca4d-4074-a1a9-429095198874" name="Match content of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>${Properties#timezoneid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 with time, startTime-For enabled practice-UI" id="5231f1ed-5afb-4a07-926b-6576a7311069"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 with time, startTime-For enabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":${Properties#startTime},
"locationName":"20624 LOCATION",
"providerName":"20624 PROVIDER",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Arnold",
"lastName":"Jackson",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#enabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 with time, no startTime-For enabled practice-UI" id="4bf37ba6-09ff-4874-b26e-dbf64b9698cd"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 with time, no startTime-For enabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":"",
"locationName":"20624 location",
"providerName":"20624 provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Jane's",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#enabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 without time, with startTime-For enabled practice-UI" id="c36d7bf9-7b0e-46de-9ece-eb32db15d524"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 without time, with startTime-For enabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":${Properties#startTime},
"locationName":"20624 location",
"providerName":"20624 provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#enabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="675cd5c0-3e0a-48e5-8e7c-8e891288d313" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 without time, without startTime-For enabled practice-UI" id="f8d774f1-9ec6-4f77-93d4-502702e54d5c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 without time, without startTime-For enabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":"",
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for enabled practice with conf, timezone-with time,startTime" id="c63de338-bb61-4cbd-b74c-81ece533e638"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for enabled practice with conf, timezone-with time,startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":${Properties#startTime},
"locationName":"20624 location",
"providerName":"20624 provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rachel",
"lastName":"Gladieux",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ed7aed2-34e7-43a3-aa0d-9e8858335245" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fb2a6551-ddbb-4d09-8dad-6716ae1167d9" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f54e4f8e-9786-48e3-9410-59433f12b3c5" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#enabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="93f706be-f40f-4233-a8f2-b937e3d50f0c" name="Check for existence of [status]"><con:configuration><path>$.status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60c95c2a-7034-4376-829c-2bd902b628ac" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="253ded9d-117c-4a08-b2da-bdcb60615247" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2763ed4b-7fd8-477e-821c-e3e3e89c7df8" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a91157ce-06e7-4405-abe2-bbbb2ed8b3c1" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for enabled practice with conf and timezone-with time,no startTime" id="965bcca7-4b55-4fbd-ae96-20b651c42b7f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for enabled practice with conf and timezone-with time,no startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":"",
"locationName":"20624 location",
"providerName":"20624 provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ed7aed2-34e7-43a3-aa0d-9e8858335245" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fb2a6551-ddbb-4d09-8dad-6716ae1167d9" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f54e4f8e-9786-48e3-9410-59433f12b3c5" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#enabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="93f706be-f40f-4233-a8f2-b937e3d50f0c" name="Check for existence of [status]"><con:configuration><path>$.status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60c95c2a-7034-4376-829c-2bd902b628ac" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="253ded9d-117c-4a08-b2da-bdcb60615247" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2763ed4b-7fd8-477e-821c-e3e3e89c7df8" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a91157ce-06e7-4405-abe2-bbbb2ed8b3c1" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for enabled practice with conf,timezone-no time with startTime" id="19cccab7-e070-42cf-a2e5-97f0875ff364"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for enabled practice with conf,timezone-no time with startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":${Properties#startTime},
"locationName":"20624 location",
"providerName":"20624 provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9ed7aed2-34e7-43a3-aa0d-9e8858335245" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fb2a6551-ddbb-4d09-8dad-6716ae1167d9" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f54e4f8e-9786-48e3-9410-59433f12b3c5" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#enabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="93f706be-f40f-4233-a8f2-b937e3d50f0c" name="Check for existence of [status]"><con:configuration><path>$.status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60c95c2a-7034-4376-829c-2bd902b628ac" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="253ded9d-117c-4a08-b2da-bdcb60615247" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="21b4f2e0-10af-47b8-87b9-965ecbe94147" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="179f0461-d686-4a04-95ca-2d3c04d93130" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for enabled practice with conf, timezone-no time ,no startTime" id="1f1e38a1-373b-4c35-8553-8c9ed5e3e1b8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for enabled practice with conf, timezone-no time ,no startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":"",
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#enabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#enabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 with time, startTime-For disabled practice-UI" id="e9d08be0-3401-488e-80b7-4f2505c5582f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 with time, startTime-For disabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"time":${Properties#appointmentTime},
	"startTime":${Properties#startTime},
	"locationName":"disabled location",
	"providerName":"disabled provider",
	"appointmentAddress":
	{
		
	},
	"practiceDemographics":
	{
		"pmExternalId":2016052301,
		"firstName":"test"
		,"lastName":"test",
		"dob":${Properties#dob},
		"address":"address",
		"city":"cary",
		"state":"AL",
		"zip":"27513",
		"phone":"9194554883",
		"email":${Properties#email}
		},
		
	"insurance":
	{
		"status":"INCOMPLETE"
	},
	"coPayment":
	{
		"status":"INCOMPLETE",
		"amount":"8"
	},
	"balance":
	{
		"status":"INCOMPLETE",
		"amount":"7"
	},
	"integrationId":null
			
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="17f2dbb7-7729-433e-935d-1dbaacbfb3b0" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cebd55bd-d2a5-4bda-b16e-fc3c9e60ab4f" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ac6b50f9-c887-447d-aca3-69f209c85b46" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#disabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7e291382-48fa-4549-95b0-61f119e37617" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b1542493-fe89-4586-a304-2fcd5a80eb71" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="200ea6c0-7ebc-4ad9-ac1c-f49329bf0048" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6b8c3efb-7ab7-462a-b549-5f76a4127548" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1a28d838-3180-4784-89ad-d2923cbe49a4" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 with time, no startTime-For disabled practice-UI" id="87f32c8e-1a72-49f1-b5a1-c557feb962a0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 with time, no startTime-For disabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"time":${Properties#appointmentTime},
	"startTime":"",
	"locationName":"disabled location",
	"providerName":"disabled provider",
	"appointmentAddress":
	{
		
	},
	"practiceDemographics":
	{
		"pmExternalId":2016052301,
		"firstName":"test"
		,"lastName":"test",
		"dob":${Properties#dob},
		"address":"address",
		"city":"cary",
		"state":"AL",
		"zip":"27513",
		"phone":"9194554883",
		"email":${Properties#email}
		},
		
	"insurance":
	{
		"status":"INCOMPLETE"
	},
	"coPayment":
	{
		"status":"INCOMPLETE",
		"amount":"8"
	},
	"balance":
	{
		"status":"INCOMPLETE",
		"amount":"7"
	},
	"integrationId":null
			
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ceec818e-5cd1-4f93-a531-83bfe694bd70" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d7b16f48-2f77-4a03-9ae3-855ee21669ef" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fe8075b9-5c24-4197-a236-2a2ede9b968f" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#disabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7f489370-2814-4b01-a337-75e65f2faf58" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="425f534b-276b-49fb-9d30-cf98649054c1" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4fb7428d-f01e-4f61-8724-7b285e41c4d0" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2994f9bc-b135-45fa-9f2d-c91075803587" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 no time no startTime-For disabled practice-UI" id="2bde1aa3-f24d-49c6-a608-a97a29885f98"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 no time no startTime-For disabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"time":"",
	"startTime":"",
	"locationName":${Properties#location},
	"providerName":${Properties#provider},
	"appointmentAddress":
	{
		
	},
	"practiceDemographics":
	{
		"pmExternalId":${Properties#pmExternalId},
		"firstName":"test"
		,"lastName":"test",
		"dob":${Properties#dob},
		"address":"address",
		"city":"cary",
		"state":"AL",
		"zip":"27513",
		"phone":"9194554883",
		"email":${Properties#email}
		},
		
	"insurance":
	{
		"status":"INCOMPLETE"
	},
	"coPayment":
	{
		"status":"INCOMPLETE",
		"amount":"8"
	},
	"balance":
	{
		"status":"INCOMPLETE",
		"amount":"7"
	},
	"integrationId":null
			
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 no time, with startTime-For disabled practice-UI" id="daa4df81-ce32-4fb8-894c-5fbbef998a93"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 no time, with startTime-For disabled practice-UI" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"time":"",
	"startTime":${Properties#startTime},
	"locationName":${Properties#location},
	"providerName":${Properties#provider},
	"appointmentAddress":
	{
		
	},
	"practiceDemographics":
	{
		"pmExternalId":${Properties#pmExternalId},
		"firstName":"test"
		,"lastName":"test",
		"dob":${Properties#dob},
		"address":"address",
		"city":"cary",
		"state":"AL",
		"zip":"27513",
		"phone":"9194554883",
		"email":${Properties#email}
		},
		
	"insurance":
	{
		"status":"INCOMPLETE"
	},
	"coPayment":
	{
		"status":"INCOMPLETE",
		"amount":"8"
	},
	"balance":
	{
		"status":"INCOMPLETE",
		"amount":"7"
	},
	"integrationId":null
			
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for practice without conf and timezone-no time no startTime" id="bf00f69e-cb9c-4fa1-9969-be265d808597"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for practice without conf and timezone-no time no startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":"",
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for practice without conf and timezone-with time,startTime" id="0ca2b2b0-f0ea-4e92-82a4-9ea50dfa5223"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for practice without conf and timezone-with time,startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{
"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":${Properties#startTime},
"locationName":"disabled location",
"providerName":"disabled provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Madhus",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2416e849-3862-438d-8de6-451bc9809448" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for practice without conf,timezone-no time with startTime" id="dc66f2f8-ddfe-4bdc-9d3a-aac057a13902"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for practice without conf,timezone-no time with startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":${Properties#startTime},
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 for practice without conf,timezone-with time no startTime" id="9e672754-b476-45d4-9c4a-164b96304c7f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4533e56b-bbc2-48f9-84c6-e80404d87389" name="v1 for practice without conf,timezone-with time no startTime" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":"",
"locationName":"disabled location",
"providerName":"disabled provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Madhus",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="76acd99c-bb30-4e54-85d0-ad9a91d8e132" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3eb65394-edc7-407d-98de-778507e0811c" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f1c98291-41f3-438d-b9f1-35089d3b3be2" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="eea613e2-dcf3-4cb6-a75e-3aefa410c36c" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#disabledPracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="544af195-e4b8-4da6-a55a-829c317afe24" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d0d52c9e-fefc-4158-9328-1008ac9f06d9" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="282e0ef9-bfcf-44cd-bf9d-05e4d7bcd8a7" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7a19de9d-3e2d-4cf0-9648-861072c6e11e" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8db8becb-5df1-439e-87ee-af0f54b4165f" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#disabledAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#disabledAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 without time,startTime-without timezone but has configurations" id="5647f778-fbb9-4c3c-a70e-df108cf00371"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 without time,startTime-without timezone but has configurations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":"",
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#noTimeZonePracticeAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#noTimeZonePracticeAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 with time, no startTime-no timezone but has configurations" id="2cbc127c-6af7-4f1e-911c-9df6a3bcc981"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 with time, no startTime-no timezone but has configurations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":"",
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"No timezone",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":"jane.rasika@medfusion.com"},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f9d87a08-51d5-4c19-9ac1-28e16d13ec70" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f9b07bc3-7294-411b-a0f5-f716cdfa3bac" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6a41a97f-4dfb-4a75-b1bc-e58775e4053b" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#noTimeZonePracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6439970f-1a1f-480f-88ad-efc61c0b9cfa" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3ebbbfe7-cf9b-4f6e-b1fd-aa4d1e39db9e" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b745181f-f4fc-402b-8f73-bd7f43c3d20f" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f546aa1a-f1a8-4782-a939-cae2a41e979d" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e5af2edf-400c-4607-b4d2-817ecc5f2909" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="55fb3c77-d027-4026-b085-5d853759307b" name="Check for existence of [pmExternalId]"><con:configuration><path>$.practiceDemographics.pmExternalId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#noTimeZonePracticeAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#noTimeZonePracticeAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 with startTime,no time-no timezone but has configurations" id="560fc4d1-cb23-4ef5-ad6a-ef90fc302955"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 with startTime,no time-no timezone but has configurations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":"",
"startTime":${Properties#startTime},
"locationName":${Properties#location},
"providerName":${Properties#provider},
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Rest",
"lastName":"Test",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":"35"},
"balance":{"status":"INCOMPLETE","amount":"40"}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#noTimeZonePracticeAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#noTimeZonePracticeAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v1 with time,startTime-no timezone but has configurations" id="9cc1a765-7e99-4062-ba02-3aeeae110df0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="v1 with time,startTime-no timezone but has configurations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{"status":"NEW",
"time":${Properties#appointmentTime},
"startTime":${Properties#startTime},
"locationName":"Jane's location",
"providerName":"Jane's provider",
"appointmentAddress":{},
"practiceDemographics":{"pmExternalId":${Properties#pmExternalId},
"firstName":"Soapui patient",
"lastName":"Test patient",
"dob":${Properties#dob},
"address":"address1",
"city":"cary",
"state":"NC",
"zip":"27513",
"phone":"9194554883",
"email":${Properties#email}},
"insurance":{"status":"INCOMPLETE"},
"coPayment":{"status":"INCOMPLETE","amount":""},
"balance":{"status":"INCOMPLETE","amount":""}}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="07c49c3a-7383-4cb1-aaa1-153752a74fab" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="56052cbb-41f4-40f0-a982-5b452120c280" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="51d5cdf4-a961-41ef-ab58-a43e2c48fe34" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#noTimeZonePracticeId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ed9f3c91-fbe1-4460-bd21-8aaf69704936" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f5a8ab64-5e43-43b6-ada3-ed08c7e7c9a9" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ddd02116-8ca1-4f5a-9e8c-dbbaf8e37ec9" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="20856ef9-9703-4d10-80df-252d0221c2c9" name="Check for existence of [time]"><con:configuration><path>$.time</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="14591ee9-90e8-43cb-953b-72f071bd4a11" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#noTimeZonePracticeAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#noTimeZonePracticeAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v3 precheck endpoint to send appointments to reminder service" id="8e4a38ee-6639-442e-98ff-14d6acb939a1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55001180-9c42-4b54-a409-90e3f469e709" name="v3 precheck endpoint to send appointments to reminder service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/appointments/reminders</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="806ecffe-b090-4ba3-aa19-d187bc2146cc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8343e986-70d9-41ff-a530-abbd7620f372" name="Script Assertion"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#systemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>daysOut[]</con:name><con:value>5</con:value><con:style>QUERY</con:style><con:default>5</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="v4 precheck endpoint to send appointments to reminder service" id="35f30938-e894-42ae-9386-3e05001de50e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55001180-9c42-4b54-a409-90e3f469e709" name="v4 precheck endpoint to send appointments to reminder service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v4/appointments/reminders</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="806ecffe-b090-4ba3-aa19-d187bc2146cc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8343e986-70d9-41ff-a530-abbd7620f372" name="Script Assertion"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#systemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>daysOut[]</con:name><con:value>5</con:value><con:style>QUERY</con:style><con:default>5</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script assertion" id="1a75156b-9029-4430-870e-1e4b2f524cd6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["v3 precheck endpoint to send appointments to reminder service"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def ids= jsonSlurper.practiceId
log.info ids
for(int i=0; i&lt;ids.size();i++){
	def practiceids=ids[i]
	log.info practiceids
	assert practiceids!=24148
	
}</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>15aa00f3-7678-429e-9eb0-21c9654cfbd6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bde1aa3-f24d-49c6-a608-a97a29885f98</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>daa4df81-ce32-4fb8-894c-5fbbef998a93</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9d08be0-3401-488e-80b7-4f2505c5582f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f8d774f1-9ec6-4f77-93d4-502702e54d5c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5231f1ed-5afb-4a07-926b-6576a7311069</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36d7bf9-7b0e-46de-9ece-eb32db15d524</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c63de338-bb61-4cbd-b74c-81ece533e638</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>965bcca7-4b55-4fbd-ae96-20b651c42b7f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19cccab7-e070-42cf-a2e5-97f0875ff364</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1f1e38a1-373b-4c35-8553-8c9ed5e3e1b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf00f69e-cb9c-4fa1-9969-be265d808597</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ca2b2b0-f0ea-4e92-82a4-9ea50dfa5223</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc66f2f8-ddfe-4bdc-9d3a-aac057a13902</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e672754-b476-45d4-9c4a-164b96304c7f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35f30938-e894-42ae-9386-3e05001de50e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="6ffc1ea9-55e9-4593-9241-7070e0fa159d" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Data aggregation listener" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="118dc6f4-05fd-4d89-99a3-83079b47ba2e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>mupid</con:name><con:value>24170916</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property><con:property><con:name>emrId</con:name><con:value>16</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>9</con:value></con:property><con:property><con:name>notificationId</con:name><con:value>"5989f5f1a88d633aa1dfc36a"</con:value></con:property><con:property><con:name>externalEntityId</con:name><con:value>"597634ede4b07025c3e33131"</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"test practice"</con:value></con:property><con:property><con:name>callToAction</con:name><con:value>"www.google.com"</con:value></con:property><con:property><con:name>message</con:name><con:value>"Your precheck notification is here"</con:value></con:property><con:property><con:name>invalidmupid</con:name><con:value>34893434</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST processNotificationMessage with valid mupid" id="6b6ae1a3-7f6a-4144-b6bb-51d4dafecf01"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3fe5c675-ef9c-4ea2-86b2-bd553ae1e749" name="POST processNotificationMessage with valid mupid" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8104/aggregation-listener/v1/notifications/mupid/${Properties#mupid}</con:endpoint><con:request>{
  "id":${Properties#notificationId},
  "externalEntityId": ${Properties#externalEntityId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToAction":${Properties#callToAction} ,
  "message": ${Properties#message} ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="ad067bfa-a24a-415c-b713-560f9e01c422" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f720c4ce-92c6-498a-a16a-8d3a1941f742" name="Check for existence of [notificationId]"><con:configuration><path>$.notificationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="47e9ecf0-59a0-4b4a-987c-3b3343ebb396" name="Check for existence of [mupid]"><con:configuration><path>$.mupid</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1eea6054-72c7-4022-af1c-97b68eea056d" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="894a59da-46ca-41ff-95ab-ed7a0e068859" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6299c0aa-d91d-4adf-a4a0-4b335e5d0b42" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="00ca2e60-7f2b-40e1-a8b3-52ae15bd8cfc" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6fc410a6-3454-4150-a825-a12c7675506f" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="28020099-7c35-46a1-9160-15bb8d6fd642" name="Check for existence of [callToActionUrl]"><con:configuration><path>$.callToActionUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1d4a63da-a68a-4394-9ef9-be47eb712fb1" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST processNotificationMessage with invalid mupid" id="ad14e64c-3ab4-4180-86ac-f729306201b8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3fe5c675-ef9c-4ea2-86b2-bd553ae1e749" name="POST processNotificationMessage with invalid mupid" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8104/aggregation-listener/v1/notifications/mupid/${Properties#invalidmupid}</con:endpoint><con:request>{
  "id":${Properties#notificationId},
  "externalEntityId": ${Properties#externalEntityId},
  "practiceId":${Properties#practiceId} ,
  "practiceName":${Properties#practiceName},
  "emrId": ${Properties#emrId},
  "integrationId": ${Properties#integrationId},
  "callToAction":${Properties#callToAction} ,
  "message": ${Properties#message} ,
  "source": "PRECHECK"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="ad067bfa-a24a-415c-b713-560f9e01c422" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f720c4ce-92c6-498a-a16a-8d3a1941f742" name="Check for existence of [notificationId]"><con:configuration><path>$.notificationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="47e9ecf0-59a0-4b4a-987c-3b3343ebb396" name="Check for existence of [mupid]"><con:configuration><path>$.mupid</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1eea6054-72c7-4022-af1c-97b68eea056d" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="894a59da-46ca-41ff-95ab-ed7a0e068859" name="Match content of [emrId]"><con:configuration><path>$.emrId</path><content>${Properties#emrId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6299c0aa-d91d-4adf-a4a0-4b335e5d0b42" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="00ca2e60-7f2b-40e1-a8b3-52ae15bd8cfc" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6fc410a6-3454-4150-a825-a12c7675506f" name="Check for existence of [message]"><con:configuration><path>$.message</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="28020099-7c35-46a1-9160-15bb8d6fd642" name="Check for existence of [callToActionUrl]"><con:configuration><path>$.callToActionUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1d4a63da-a68a-4394-9ef9-be47eb712fb1" name="Check for existence of [source]"><con:configuration><path>$.source</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>118dc6f4-05fd-4d89-99a3-83079b47ba2e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f332e4d9-a663-48cf-9d8d-80948c768d84" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="logo service" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="7fe9b195-e6b0-48ce-8bce-ff9fc5bc1c7e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property><con:property><con:name>invalidpracticeId</con:name><con:value>244536</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GET logo for a practice for staff user" id="932b7f4b-0de2-4516-b1e5-06be1ed03262"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a40b7d43-fb7f-41f2-bf9c-f17a4c24fffa" name="GET logo for a practice for staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/logo/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1045ade6-864a-493a-8d6e-7b928894fc4f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET logo for a practice for a non-staff/invalid authorization" id="94c48cea-42bf-4ed3-b94f-4335d31d0863"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a40b7d43-fb7f-41f2-bf9c-f17a4c24fffa" name="GET logo for a practice for a non-staff/invalid authorization" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/logo/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1045ade6-864a-493a-8d6e-7b928894fc4f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET logo for an invalid practice for staff user" id="79149106-a17f-4b82-a0f4-32a9d4c9141f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a40b7d43-fb7f-41f2-bf9c-f17a4c24fffa" name="GET logo for an invalid practice for staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/logo/practice/${Properties#invalidpracticeId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1045ade6-864a-493a-8d6e-7b928894fc4f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT logo for a practice for staff user" id="2d3c3be9-8193-496e-878e-afd6df36a3d0"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="a40b7d43-fb7f-41f2-bf9c-f17a4c24fffa" name="PUT logo for a practice for staff user" postQueryString="true" mediaType="multipart/form-data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/logo/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1045ade6-864a-493a-8d6e-7b928894fc4f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>logo1.jpg</con:name><con:contentType>image/jpeg</con:contentType><con:size>3756</con:size><con:contentId>logo1.jpg</con:contentId><con:data>UEsDBBQACAgIAHVcOkwAAAAAAAAAAAAAAAAJAAAAbG9nbzEuanBnnVZ5NNv53o6tjI4SkdpHW2sS+1ZUqdYaJLXvDLUTuy5Kza2ltXbEVmu1xBaRWmM3pSgpKghia6gSWmLXUl5z3jPvnc6Z+9577vP78/n+ns/znM9zzvd7MnnyHsAF1zfSBzAwAAAMpx/gZBoQC/jhDCsnBzfXOS4OIBcnN5CLg/PcOQ6uc5xcXLzC53nBQDAfn7DUBT5BSUEQ6KLCRXEITFZWlldESU1J+rKUjCyMgZ2d/RzHOUEuLgEZYWERGTmZPwCDyfxrwGT+YE9+AwDZAG2AT0wMQAAjkIEJyHDyGiD4u0WWU5P/BAMjM8sZVqZTUoMLwMjAyMR8hpWVmekPkgnIzH2R5YxCMEhRxyytBnzJwjXk1QiPqPJ18388P6+UTr8RSj39V+A0PiPTX4SZTpVPOSngKcfIwMTM+H8nftdVOBUG8SjqXDJTMmcBB7ueUAA/nvKMQCYgQBuwfgHwX4MxoVXiS61kX4bJqkDM3FfsMVuw3yH6q1Br+KjtqH3oKnKNvaNL5EP2uyd7qsfl+6y7cS6unFvGK9qT018LqSJkcFSsdr9c0ZMtEFVrkeg1dbfMOQPaVN7cp2Q0KzezQu2sMMzqQTU581v/3XTNVXq2hF6TXll3FjHp49GwCsqkmbzE7FsZY8UsalHs7MR5+wTAYUD9WrCefvB8pK9byr/673TMbLCyJklBuKaQ/uDI+ZyPOOKzgJvXi5hNQN0vAuap5UciqnciXBaxz5OoP+bUvvl7icovio1Uh6Al9MKXTqXB6Wyto6K4a2xPJR/pznZ2mx1o+a/vdPbY3ODt4lfy+PXvJF7grbY8UF2NVKJ4z/YDrzyCbNQXHfZfuNbRamGmM0cqIjEfh/aNl8FOQtFsjreCd16uqcATYTVXHT401YlvW+eXkh/7HQxuOELMO8MqNbGvfH1c8MdV51eV+5ARCsiY2KgBXkIC7uptfe1gSFm7bWafWPsQf3TG6/ApTme7lIJ2y0oVgZqV+R8nBs9uf7osv5vZ2Z/bvODA7F6ItRpamUuYVkaMo//inB266yJhPQMLEKp1dLn88V5ryPJ8Blc5AwjEHaX6FNUQ1/UuFgWtjSNFXmoYP0oj4S1oC9V5ZumWfraJ21hJ9cEBZEPnXm/clv28RBvF2VPtCSmP2aQEpOh9SbR3pNttFvWS1n8zr0189RVhLPuORFiE7Au38Ntk6ZSxtcbfvvcihR2PzHH45xY/E589ON0igOMbgMOkSPS2iS7zsIAySMuv2J6N+QRAf3qRpKoKKytGlPk9wW3K8M+/erCqobYc1KFkcLbk+5z/YjUAhgxM60GFgbaeRw/ECKLyhlJmnE7w70iuaYA0XeaX5Jf0zK0zIT9tQFXcapAAv6ev1y+aBmegndf337uA729ganon8u6Zp9iwm5klc8cQ/Cd4t+QKaxx8f0yr5ltk/EWwdAmx4yEyam79geR1q6hgpPlhpKpoxF1/sf/AHgjaLr9TNyD/tjgHk+tk9YBsX1PfPSHysPCngHxym4Wj+E87DrIQXH2ehXH7FIZ/AVIRBDe3+Wbk7UmDOHwYwz/K1rmSO3P5i8/hBhwaVtpCSs5op9nP+S9F//o4IR5vxlU/+XIFMtZr5JuO0dOauip3fPjWFkYjBUqHpU66lmxgF+8T5gaNIwmHbjlbD7kYmgIMzPG9bakEnc2An6l1wpyNXUb/vktA+XITBHqy0df2q2zs/LwFOX8O1zc/16rJcRTKv0j4XGO3EQ+ubLLPnQNfhGHxe7TciEahXLdnXQ7CVzfsony5hwOJ4pmd85aBSJfKusPHo7xsZEp49Y69UzVO7U7otvxqRFK3kO5S5se9IeVxaWnlZNECzHv8Ue03x701oSiZZ33xTd6BqCgGgGD8h3DokV+/cEDMwsyrbk8NEVQs+rsAPFarHSa4JusZdfemjsC327eXhjulLt48O5iWuOJnUTFZUiwX6ZxMHJ0nwCQgY4TZ4jofN6tK/RNAqbGRrMnnD68cCx0ay8LkN2fZbchVlPVdi80anDCLa7zGXa8gW42wS88RUNhsT8feoV3zEyFz/jXD+Lg2cIuJns2sdFKGVUcZCFvwwftjAVHIDynteuEMtVkY3imwZeBQdECQD5pKfTTtKvbLnw2zgCPw6bAAMOGcnaxc3rbmbHPoxgCbJUBrT3fVSc5jnCZFerYa60KPELqyQyWVrPN6OsG7QQtAWafEzGX1O0Mhm/7b2QWzQ51yokKRmb/+yhQ0k4pxSbkninsX6fBUzb/vxueX6Gt/nsiY2G7Tn0lgn34knc07+KUwYKZ5f4kZCtAVCUhq7Yx/fgJwROqMRgtp8B24p8TrKkr+gxisQFSvpiG0OApDjmU/Omu2vQ0WQWs9vMbRHaKR+UDlw/9bKI/TYWx/ioc/jccQXSEf1YLoLUPH8e1bPDzm1InpVQvz6Tp428SqNr2joalnu0/UWJJ5UMaExQcYaCv72m7bexGFmH/5cwWm/7cCGX+pgKWN6f3cS7e66trVFyfvlkU3ZfNSWoc4G9qIiGCTgSiWxD3uzRtTS99gK7M/Pey5/8PdF1erXUZoTk7CMQkhiWH2dmhUgzu+wj9KvHSWqM+fEMYGE2sWbbalzz7hKi94LXmNrlKwOmVRRbXOUDKKQMMnCDxHR4hom4cTVHxuujRrUY1zl7PUu73mW7QYUvo7W7yrHA+ygfgNCUfquLXHtt3ca46uWCF6zkqD4fLllTo9zbOSlKqwFk0Lw63JHgQ5cvbQK+O7kgAwae1GDY2sPFgdS2OZbe/dCNUOfQ3n9lbrOu7a1MmQsusl3o1rPnxeRjjBcfonBcTdZ5j7S/di8eao5SIa1umy2sBG6w0ZyWjjAGdzSpAVWWBYKWX7gZUsVPNzhd0wMEvhRaDg/fEeqbEy+NAuDyUqSaYD8znK/mLAisNnocgVT3TRMlufUm4F37Z1RAYRPV4I9PPRbcxf/MGygJWn1uPwDVHVK2DofPP5Qe9UcFJ1zUHDdaipZ1vxWcmAuoa3WTlxpe+a5bgJD1fu6r9PQsYg05shdLQat+H3t0cCUPPSXb9pSa+WjIzjEfvLobuuyi8aIsEpGm5zqhrjXki5Kbp6KQ3bOiQHS30S43eD475bQ0rF8k2i62a992iF+ONMf+yVQRX1O2JV2byBIM9mCHzDv2A+uWaNKSGsgKZjdSpL0mjpLQNjmsQx1a6f+lVm+rKuIrPbGmPFNcV9VFiyarNQigMjCLl9RYTpXCsVRW+hPG0Jf7m7ZQofW4qs3pPL2lSeub5X0FVQj49rxB7C1xLJYp6pnxxh3rNhjZRJVgS701Wfb0viWaHmSbvZboa4TRfHFztbg24+XnYBtcfu4xszbZEpedaje0QFagDdfPyjDcoTddXcGpmDRIzu4f3mOfV6CO7ttr0jVMyuxxro0J6XhfSXO/9i2g581HMhwj64IltmO4LQXkX5wldDuQKuanvJ1zT+nJ2UmOzoOOOUm2jT1BdBaSXBFJTNaoNfvtZHFveLjS+QOmyqPLpj7DN7shR1e5v0JCTEl2kCpPCQm8nFiJDSDRtpjHtebUMrfMgxvd2A9Q70qthqSzBGX3HYaOKw372x0S+GvEheJ6d1gJA+U/aWPF6krlhqGOltdUmuPZZ9acbER8F7mixoLdtGJ6U6ePRLfLNrhagd5rZIKB075eo6X6mvrtYaBgplW7oK5EdMmE7P/pbT3iknJKNKyZeFATXRYT7lA6TAUlR5x7THoqtJ1tMnzCbEHhR0dFjD8hY0KIOaOViZPvDpE85jHZngYr33rFfzkvRORb2k+o6lT9WUqDUCm6lZ6Sjq5/z1QU+Z8nBiH9q/5Tc3cXOZofyK/sv8eqt5TjVRFfs5kCic1VSaz/dVZHc3kKpjqN2z9DKCI6ocQlHQhgtZ+LqXpL5H3TxmftdVoK70A299Ur7S2FBusivvq+0IW5zbqGFcJL0lGK9fBRtS3lIRAIOFPi8FjqebBiUd83snWW/CviBALObFr6N2aK8mcoOSf67GCVvmdmDWUr0irlhonrWqGMVAzJOD1qFwqD1ERvbIMN9hTIeS78xgZvlpSd0YBA/NI5vSWwnMCR1ab+i3Me+t7i0swvomiqGh8CGlm9YZLs1ptDuUwxNAdwMqnuZe0y4mUDEidUXOGqVvrHxv5VbJtDWlhlBNxMY/MvAZoyn2qqZXLeaU4LyeR1oYksmPsiRwsCE7X9dNSIMv3HSwGltr516Yb1g/GoFPgi3RHueLGOxVIkArVHFn/nSLo5G2cOvbIyv99WRttIp23cC+KyIktk5dbdk3oxKGsDwUPA5X/DnHHXv66P++wVwGk+z080DgTwBfydPHvPYK5wHTGyDlPIjrvEDKPcZb1y4YXQD81xA5mfofUEsHCOW13GnYDAAArA4AAFBLAQIUABQACAgIAHVcOkzltdxp2AwAAKwOAAAJAAAAAAAAAAAAAAAAAAAAAABsb2dvMS5qcGdQSwUGAAAAAAEAAQA3AAAADw0AAAAA</con:data><con:id>fb2eba2f-d142-46b5-9e0c-1b49230c3966</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>logo</con:name><con:value>file:logo1.jpg</con:value><con:style>QUERY</con:style><con:default>file:logo1.jpg</con:default></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>7fe9b195-e6b0-48ce-8bce-ff9fc5bc1c7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="29293415-f0ab-47ed-8948-33742270b3e4" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Forms for Madhu's practice" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="c57046d2-9683-4a33-8893-7155f289ea41"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property><con:property><con:name>formTitle</con:name><con:value>"Jane's BE form"</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>"dmuW2y5TaOrNqj2op9ZFM1r92Zej0nUBUcj21a6yDRc6SlK3DvhUaw=="</con:value></con:property><con:property><con:name>zipCode</con:name><con:value>27513</con:value></con:property><con:property><con:name>dob</con:name><con:value>1519862400000</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>MoWfKP6UMXEvHJtFvRwkYscmhZI0h2b7TrniwoCVFDSdKCHuH/MQ7wR/fsNq1BXhyKTFQ9+Ux277J8IXDmanIFQng4zjCOuPZvWoX7pg1Ydvn+11V690FSh/mE5knuVbjfil75LLgpXy3sKzrRAG8lQKgjuwujUXLL8sdVzIKZvfQ1v7F+eKHl+8gT9H1/EBwicnFnQ9zroZDJM1Pj80dBcxCzbWpyav9AyeYVNcheo5DhnOexndw+UoGSYgmfz0</con:value></con:property><con:property><con:name>staffAuthorization</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST GUEST sessions" id="2f06126e-b398-4b9b-a574-dbee585152b0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="ef00aa97-f137-46dc-abae-8b40a8015c0b" name="POST GUEST sessions" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/precheck/services/guests/me/sessions</con:endpoint><con:request>{
  "zipCode": ${Properties#zipcode},
  "appointmentId": ${Properties#appointmentId},
  "dob": ${Properties#dob},
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="14c86670-29c0-4ece-849a-06fbce1668dc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8775001-2936-4e04-bed9-b97b2902d81b" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="38bcd117-e790-4b33-8cfd-9e863ad4fdfe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def headerValue = testRunner.testCase.getTestStepByName("POST GUEST sessions").httpRequest.response.responseHeaders["Guest"].toString().trim()
int length = headerValue.length()
def token = headerValue.substring(1,length-1)
log.info token
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("Authorization",token )


</script></con:config></con:testStep><con:testStep type="httprequest" name="Get forms for a given practice" id="65809098-1a18-46fe-9e5d-46e22e8cecf5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29134ee4-c671-43b9-94c7-45103df88b44" name="Get forms for a given practice" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/practices/${Properties#practiceId}/forms</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4b213537-6019-43a2-beaf-93b4cb24d7fd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Delete forms" id="0bb8d984-d167-4b39-be4e-f3e2375e6c66"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="021fdf82-8594-46cc-8c81-5287292fadf2" name="Delete forms" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}/forms</con:endpoint><con:request>[]</con:request><con:assertion type="Valid HTTP Status Codes" id="2dc604d4-dda4-42fc-a655-74213128d71a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Add forms" id="7ea84a33-8814-4b86-818b-31917ec45266"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="b72fad69-6433-4a0c-b086-f2e634829aaf" name="Add forms" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}/forms</con:endpoint><con:request>[
  {
    
    "formTitle": "Madhu's form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/bb66d342-6b18-44d5-bfd1-09a455422048/24170",
    "practiceId": ${Properties#practiceId}
    
  }
]</con:request><con:assertion type="Valid HTTP Status Codes" id="39c54839-b6e8-4873-a1b5-8eda68b26520" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07829068-ef55-46c0-8fde-1cfa11588d98" name="Match content of [practiceId]"><con:configuration><path>$[0].practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="af9587bc-a849-49e1-a8da-d35f72d0ced9" name="Check for existence of [formUrl]"><con:configuration><path>$[0].formUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b200e4f-7d5e-4cfa-9591-cbe1ff007ce3" name="Check for existence of [formTitle]"><con:configuration><path>$[0].formTitle</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get forms" id="bfd794c5-7821-40de-b122-931e7a5d91e7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a888fcff-a321-4e11-9697-35b144b03fbb" name="Get forms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}/forms</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="269afca7-c8a7-449d-8cab-de6f7bc35249" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fa2f78b4-b9bb-4dd9-9d90-31a0cc0059ec" name="Check for existence of [formUrl]"><con:configuration><path>$[0].formUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b150ffe-73e1-4371-8e1c-07d6cbde0da7" name="Check for existence of [formTitle]"><con:configuration><path>$[0].formTitle</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c57046d2-9683-4a33-8893-7155f289ea41</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f06126e-b398-4b9b-a574-dbee585152b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>65809098-1a18-46fe-9e5d-46e22e8cecf5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>38bcd117-e790-4b33-8cfd-9e863ad4fdfe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0bb8d984-d167-4b39-be4e-f3e2375e6c66</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="d2c8a85a-7d09-4fc0-8df9-436151ddfa7f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Forms for Jakub's practice" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="b863e22c-4638-4860-8213-aa4355d2965e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>formTitle</con:name><con:value>"Jakub's BE form"</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>"Zcl0VtdeBm0uWxvscgvoMA/ND1/siRDurpcDe79Gn6Wu2STFnCBJcQ=="</con:value></con:property><con:property><con:name>zipCode</con:name><con:value>27513</con:value></con:property><con:property><con:name>dob</con:name><con:value>1504224000000</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>09fgYAh3Do5yQHayDwaVU03SL73kiFCtXIlRC54SRAa/GpPxV6zz70ZU+lq0hH5dh1CJFrfi9DhzoxSBxgqHBRkArdU+hGpqZLQ56KBVZ6ianpveyl55FNvNxExTPBFmtB0jqhSE4X7F+hXl/Te8hkIpDU0FP32Sj9tSbqWLnNBnjXd/I1LiJBTHJlI2nSF3RHrefYThNO3Bke7nTAh/bk63ArQhJ5V3jNWl8NfriTMJ3KUDEtXTDV6uIPS+dtsT</con:value></con:property><con:property><con:name>staffAuthorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST GUEST sessions" id="44f413ff-78a4-4c58-bb3e-b4a065aa5c55"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="ef00aa97-f137-46dc-abae-8b40a8015c0b" name="POST GUEST sessions" postQueryString="false" mediaType="application/json" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net/precheck/services/guests/me/sessions</con:endpoint><con:request>{
  "zipCode": ${Properties#zipcode},
  "appointmentId": ${Properties#appointmentId},
  "dob": ${Properties#dob},
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e0bfa5d7-4f8b-4a5e-8357-8f58a5809380" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3a6bc180-3c65-498d-a6ed-ba644162f441" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="7fdce8b5-db6a-406a-9c91-6130d8776c97"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def headerValue = testRunner.testCase.getTestStepByName("POST GUEST sessions").httpRequest.response.responseHeaders["Guest"].toString().trim()
int length = headerValue.length()
def token = headerValue.substring(1,length-1)
log.info token
assert token!=null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("Authorization",token )


</script></con:config></con:testStep><con:testStep type="httprequest" name="Get forms for a given practice" id="6b9542e2-4708-463f-b6ab-09f627b07bf9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="29134ee4-c671-43b9-94c7-45103df88b44" name="Get forms for a given practice" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v3/practices/${Properties#practiceId}/forms</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4b213537-6019-43a2-beaf-93b4cb24d7fd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Guest ${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>Guest ${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Delete forms" id="7366fd34-db65-493e-a39d-6688168361bb"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="021fdf82-8594-46cc-8c81-5287292fadf2" name="Delete forms" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}/forms</con:endpoint><con:request>[]</con:request><con:assertion type="Valid HTTP Status Codes" id="2dc604d4-dda4-42fc-a655-74213128d71a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Add forms" id="ae53eef2-8fa5-401c-a817-c425d4fc54e0"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="b72fad69-6433-4a0c-b086-f2e634829aaf" name="Add forms" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}/forms</con:endpoint><con:request>[
  {
    
    "formTitle": "Real form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
    "practiceId": ${Properties#practiceId}
    
  },

  {
    
    "formTitle": "HIPAA policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Financial policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Notice of privacy practices",
    "formUrl": "https://medfusion.atlassian.net/wiki/spaces/QA/pages/2785369/Environments",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Test form 6",
    "formUrl": "https://dev3.dev.medfusion.net",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Test form 7test@2487384.009.jhxf",
    "formUrl": "https://github.com/rest-assured/rest-assured/wiki/GettingStarted",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Test form 8_healthinsurance.0013",
    "formUrl": "https://precheck-admin.medfusion.net/#/",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Test form 9_0001392849ab",
    "formUrl": "http://jsoneditoronline.org/",
    "practiceId": ${Properties#practiceId}
    
  }
  
]</con:request><con:assertion type="Valid HTTP Status Codes" id="39c54839-b6e8-4873-a1b5-8eda68b26520" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07829068-ef55-46c0-8fde-1cfa11588d98" name="Match content of [practiceId]"><con:configuration><path>$[0].practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="af9587bc-a849-49e1-a8da-d35f72d0ced9" name="Check for existence of [formUrl]"><con:configuration><path>$[0].formUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b200e4f-7d5e-4cfa-9591-cbe1ff007ce3" name="Check for existence of [formTitle]"><con:configuration><path>$[0].formTitle</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get forms" id="fd989880-066a-4b27-9199-ec2815d5287d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a888fcff-a321-4e11-9697-35b144b03fbb" name="Get forms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}/forms</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="269afca7-c8a7-449d-8cab-de6f7bc35249" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>c57046d2-9683-4a33-8893-7155f289ea41</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f06126e-b398-4b9b-a574-dbee585152b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>65809098-1a18-46fe-9e5d-46e22e8cecf5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>38bcd117-e790-4b33-8cfd-9e863ad4fdfe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7366fd34-db65-493e-a39d-6688168361bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="885e5073-b510-47ef-9021-4304e528329f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Roles" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="fe384620-0b39-4d59-befd-19e63e09b3eb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>staffuser</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>invalid user</con:name><con:value>Basic RHBhdHRlcnNvbjk6csdfsdffdQy</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="580105e5-50c8-42d7-addc-fc2fb5de9cc0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET user role - System auth" id="f6ac4ed8-c7a1-40fb-a2b3-ff82d0b969d5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fa6696d1-2713-48f4-ab64-662b56ab8cf3" name="GET user role - System auth" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/users/user/roles</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ca4c26c8-52ce-4ee7-b924-7af3167ae049" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET user role - practice  staff" id="bda1734e-f7e4-4c86-a282-a5e4a8f40a2f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fa6696d1-2713-48f4-ab64-662b56ab8cf3" name="GET user role - practice  staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/users/user/roles</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ca4c26c8-52ce-4ee7-b924-7af3167ae049" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5fdb4584-ec20-4de3-8389-61b37d003ecf" name="Match content of [0]"><con:configuration><path>$[0]</path><content>ROLE_MEDFUSION_CONFIGURATION_ADMIN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#staffuser}</con:value><con:style>HEADER</con:style><con:default>${Properties#staffuser}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET user role - Invalid  user" id="607fa884-479c-4d2e-b63b-f9070ce053bc"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="fa6696d1-2713-48f4-ab64-662b56ab8cf3" name="GET user role - Invalid  user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/users/user/roles</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ca4c26c8-52ce-4ee7-b924-7af3167ae049" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invaliduser}</con:value><con:style>HEADER</con:style><con:default>${Properties#invaliduser}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>580105e5-50c8-42d7-addc-fc2fb5de9cc0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="1a09d4a1-9dd9-45df-a55c-6a9bae0c3c09" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Reminders resource v2" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="4681dd3c-7729-4103-bc94-5ff964314878"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1,3,5</con:value></con:property><con:property><con:name>Authorization1</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>createdOnOrAfterDate</con:name><con:value>2018-04-04T16:03:22Z</con:value></con:property><con:property><con:name>TODAY</con:name><con:value>2017-09-16</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1523289862750</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>11712</con:value></con:property><con:property><con:name>email</con:name><con:value>"testautomation@mailinator.com"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>75424933</con:value></con:property><con:property><con:name>startTime</con:name><con:value>"4/07/2018 18:04:19 PM"</con:value></con:property><con:property><con:name>Authorization2</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="42c69052-36fe-4390-9047-a8a36bb65685"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="9a4f4fad-d9f2-4d55-b62a-2ac8d6831cbe"><con:settings/><con:config><script>TimeZone.setDefault(TimeZone.getTimeZone('UTC'))
def now = new Date()

def createdtime = now.format("yyyy-MM-dd'T'HH:mm:ss'Z'")
assert createdtime != null
log.info createdtime
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("createdOnOrAfterDate",createdtime )</script></con:config></con:testStep><con:testStep type="httprequest" name="Put practice settings for 24170 -Disable precheck" id="051809b8-c6cf-4c35-9c6d-1a913bb73980"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="Put practice settings for 24170 -Disable precheck" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/24170</con:endpoint><con:request>{
   "practiceId": 24170,
   "integrationId": 9,
   "practiceName": "New Madhu's test practice",
   "practiceDisplayName": "New Madhu's test practice",
   "practiceTimezone": "America/New_York",
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": false,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": false,
   "notifyOneDayOut": false,
   "notifyLanguage": "en",
   "pssEnabled": true,
   "pssUrl": "www.medfusion.com",
   "precheckEnabled": false
   
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>24170</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4eacd9e-4651-4df7-869d-a3b3a3f489d7" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Put practice settings for 20624 -Enable precheck" id="14409e68-e4a3-4cd8-8f43-9f573cd81062"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="Put practice settings for 20624 -Enable precheck" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/20624</con:endpoint><con:request>{
   "practiceId": 20624,
   "integrationId": 9,
   "practiceName": "New Jakub's test practice",
   "practiceDisplayName": "New Jakub's test practice",
   "practiceTimezone": "America/New_York",
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": false,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": false,
   "notifyOneDayOut": false,
   "notifyLanguage": "en-es",
   "pssEnabled": true,
   "pssUrl": "www.medfusion.com",
   "precheckEnabled": true
   
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en-es</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b4eacd9e-4651-4df7-869d-a3b3a3f489d7" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Delay" id="280e4b28-938d-4623-b59c-978f61913b92"><con:settings/><con:config><delay>60000</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 2" id="16392dcd-6638-473f-9cac-7e9133d8b66b"><con:settings/><con:config><script>

def generator1 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
appointmentid = generator1( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 8 )
log.info appointmentid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmAppointmentId",appointmentid )




def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
patientid = generator2( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 5 )
log.info patientid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmExternalId",patientid )




import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    appointment3Days0ut = currenttime + 1.week - 4.days + 2.hours - 3.seconds
    log.info appointment3Days0ut
    def timeInUtc = appointment3Days0ut.format("yyyy-MM-dd'T'HH:mm:00'Z'")
    log.info timeInUtc
 
    
}
currenttime = new Date()
use(TimeCategory) {
    appointment3Days0ut = currenttime + 1.week - 4.days + 2.hours - 3.seconds
    log.info appointment3Days0ut
    def timeInUtc = appointment3Days0ut.format("M/dd/yyyy H:mm:ss a")
    log.info timeInUtc
 	 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("startTime",'"'+timeInUtc+'"' )
}



import groovy.time.TimeCategory
now = new Date()
use(TimeCategory) {
 def futuretime = now + 5.days 
 def timeinmillis = futuretime.getTime().toString()
 log.info timeinmillis
 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("appointmentTime",timeinmillis )

}

</script></con:config></con:testStep><con:testStep type="httprequest" name="POST appointments v1 as staff user with email-UI endpoint for 20624" id="0835618e-06bb-4e1d-acc8-7f37bff8d1b0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="POST appointments v1 as staff user with email-UI endpoint for 20624" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"time":${Properties#appointmentTime},
	"locationName":"test precheck location 20624",
	"providerName":"test precheck provider 20624",
	"appointmentAddress":{},
	"practiceDemographics":{
		"pmExternalId":${Properties#pmExternalId},
		"firstName":"Nathaniel",
		"middleName":"",
		"lastName":"James",
		"dob":1519862400000,
		"address":"address",
		"city":"cary",
		"state":"AL",
		"zip":"27513",
		"phone":"9194554883",
		"email":${Properties#email}
	},
		"coPayment":{"status":"INCOMPLETE",
		"amount":"8"
		},
		"balance":{"status":"INCOMPLETE",
		"amount":"7"
		},
		"integrationId":9
		}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>20624</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization1}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST appointments v1 as staff user with email-UI endpoint for 24170" id="05f5fce6-692f-4851-a92a-23e3d4796f95"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cf4cabe0-849a-4f67-bb11-8a85fbcfea2a" name="POST appointments v1 as staff user with email-UI endpoint for 24170" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments</con:endpoint><con:request>{
	"status":"NEW",
	"time":${Properties#appointmentTime},
	"locationName":"test precheck location 24170",
	"providerName":"test precheck provider 24170",
	"appointmentAddress":{},
	"practiceDemographics":{
		"pmExternalId":${Properties#pmExternalId},
		"firstName":"Nathaniel",
		"middleName":"",
		"lastName":"James",
		"dob":1519862400000,
		"address":"address",
		"city":"cary",
		"state":"AL",
		"zip":"27513",
		"phone":"9194554883",
		"email":${Properties#email}
	},
		"coPayment":{"status":"INCOMPLETE",
		"amount":"8"
		},
		"balance":{"status":"INCOMPLETE",
		"amount":"7"
		},
		"integrationId":9
		}</con:request><con:assertion type="Valid HTTP Status Codes" id="040b0bf8-0170-41bc-9efe-a24f4cab8585" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="339721d4-d1e6-4961-8ef6-aa6f1ffe4984" name="Check for existence of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed5eeac3-fdbd-48aa-b9ee-f149ab8cf276" name="Check for existence of [merchantId]"><con:configuration><path>$.merchantId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd391f43-4b57-43e0-a0f0-ca6d08130bb9" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>24170</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1898d0cb-53d9-4927-9362-0d8bfef6e018" name="Match content of [status]"><con:configuration><path>$.status</path><content>NEW</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="84224dc1-a279-4716-9b96-032f8c227e17" name="Match content of [time]"><con:configuration><path>$.time</path><content>${Properties#appointmentTime}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09bf6a48-6c45-40cf-8072-0426dda8b753" name="Check for existence of [startTime]"><con:configuration><path>$.startTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5a596c-c51e-499e-9b21-879db1ed9d37" name="Check for existence of [address]"><con:configuration><path>$.practiceDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb890502-b50e-4df4-af2a-2499aec6fe28" name="Check for existence of [city]"><con:configuration><path>$.practiceDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8bcc44e-b5af-4a4f-82cf-c8a12cab6112" name="Check for existence of [state]"><con:configuration><path>$.practiceDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66b35ff0-65f0-4877-a929-0e6b19d9314e" name="Check for existence of [zip]"><con:configuration><path>$.practiceDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b2f77c5d-9062-4834-bc38-631637d97e72" name="Check for existence of [providerName]"><con:configuration><path>$.providerName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8c3f0a9-f8b6-4c40-9e54-9b2d610fda5e" name="Check for existence of [locationName]"><con:configuration><path>$.locationName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization2}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization2}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>sendEmail</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="e08baa7c-9ff6-4cf9-93f4-c39903e5d5f7"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="httprequest" name="send  check in reminders" id="ff8f57e2-1db4-470e-8511-8746391f68b3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e758babc-2ad9-4024-8345-1c5df915e9b2" name="send  check in reminders" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email/checkin</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="541b68bb-7415-4fd0-98a1-f9c8b52f714a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties><con:property><con:name>TODAY</con:name><con:value>2017-09-16</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>23cd1cb5-c7df-40ee-bb52-ce8ebdf0e8a2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>497b8ba2-0e19-47f3-b995-e555ab7431e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42c69052-36fe-4390-9047-a8a36bb65685</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>051809b8-c6cf-4c35-9c6d-1a913bb73980</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>14409e68-e4a3-4cd8-8f43-9f573cd81062</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>280e4b28-938d-4623-b59c-978f61913b92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0835618e-06bb-4e1d-acc8-7f37bff8d1b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e08baa7c-9ff6-4cf9-93f4-c39903e5d5f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16392dcd-6638-473f-9cac-7e9133d8b66b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>05f5fce6-692f-4851-a92a-23e3d4796f95</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="d883902c-334e-4482-8dd7-1128173c3cc3" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Notification modulator v2" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="3e624161-966d-4171-93ee-0d19e0c63f96"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>email</con:name><con:value>"automationtestdev@mailinator.com"</con:value></con:property><con:property><con:name>phone</con:name><con:value>9194554883</con:value></con:property><con:property><con:name>sendingApplication</con:name><con:value>"soapui"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST Send notifications for email" id="ba51efa9-a32d-490d-85ce-17668ac6854f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="34af70a1-a0c6-4491-919e-e12a6705704b" name="POST Send notifications for email" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8060/notification-modulator/services/v2/notifications/sendNotifications</con:endpoint><con:request>[
{ 
    "type": "EMAIL",
    "sendingApplication":${Properties#sendingApplication},
    "senderAddress":"appointments@medfusion.com",
    "recipientAddress":${Properties#email},
    "subject":"test",
    "practiceId":${Properties#practiceId},
    "sendingReason":"PRECHECK_NOTIFICATION",
    "content":"This test is from the modulator 1"
}
]</con:request><con:assertion type="Valid HTTP Status Codes" id="11a37b1e-3eff-4c47-93f2-063825d76d05" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>202</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST Send notifications for text" id="b50e087f-7e66-4859-95f5-1138dd91128b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="34af70a1-a0c6-4491-919e-e12a6705704b" name="POST Send notifications for text" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8060/notification-modulator/services/v2/notifications/sendNotifications</con:endpoint><con:request>[
{ 
"type":"TEXT", 
"sendingApplication":${Properties#sendingApplication}, 
"phoneNumber":${Properties#phone}, 
"content":"SoapUI test" ,
"practiceId":${Properties#practiceId},
 "sendingReason":"PRECHECK_NOTIFICATION"
}
]</con:request><con:assertion type="Valid HTTP Status Codes" id="11a37b1e-3eff-4c47-93f2-063825d76d05" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>202</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>3e624161-966d-4171-93ee-0d19e0c63f96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="4bd44613-d18b-42fb-b11a-09fceab48f28" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Email notifier v2 PRECHECK_NOTIFICATION" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="91182265-9368-4d58-ad55-723895ad46a5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>email</con:name><con:value>"automationtestemailtest@mailinator.com"</con:value></con:property><con:property><con:name>sendingApplication</con:name><con:value>"APPOINTMENT_REMINDER"</con:value></con:property><con:property><con:name>sendingReason</con:name><con:value>"PRECHECK_NOTIFICATION"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Send email POST" id="bfd59ab9-b230-4a80-83e3-cdf618081058"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="e86caf5b-fa5c-4b10-aafe-a21e005ee803" name="Send email POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8070/email-notifier/services/v2/email/sendEmail</con:endpoint><con:request>{
  "content": "hI, hOW are you doing",
  "practiceId": ${Properties#practiceId},
  "recipientAddress": ${Properties#email},  
  "senderAddress": "random@gmail.com",
  "senderAlias": "",
  "sendingApplication": ${Properties#sendingApplication},
  "sendingReason":${Properties#sendingReason},
  "subject": "test"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="ae92e2d9-866d-46f5-8a0b-671e414a9a28" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="870532f7-3d68-4f7e-a256-1938b127aae5" name="Check for existence of [status]"><con:configuration><path>$.status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="393cda01-008a-483a-a2aa-341c962b96a3" name="Match content of [status]"><con:configuration><path>$.status</path><content>Email request complete.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>91182265-9368-4d58-ad55-723895ad46a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="937d96be-512a-4b60-b90d-81e8333fb2f4" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Text notifier v2" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="ce6184a5-99ec-4516-ac7a-ca38ff0647bc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>phone</con:name><con:value>9194554883</con:value></con:property><con:property><con:name>sendingApplication</con:name><con:value>"SOAPUI"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST Send text" id="284e2baf-805d-4f95-be64-66aa6536ca4f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3b08edd3-f6ec-4140-bf8d-b725d56e9b48" name="POST Send text" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8050/text-notifier/services/v2/text/sendText</con:endpoint><con:request>{
  "content": "hELLO TEXT MESSAGE FOR YOU",
  "phoneNumber": ${Properties#phone},
  "practiceId": ${Properties#practiceId},
  "sendingApplication": ${Properties#sendingApplication},
   "sendingReason":"PRECHECK_NOTIFICATION"
  
}</con:request><con:assertion type="JsonPath Existence Match" id="f6baef76-e4fa-46eb-a51f-0d47da04a370" name="Check for existence of [status]"><con:configuration><path>$.status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="64426c33-a546-4052-b058-40546facd700" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c3c2246a-7e9e-454c-bfb1-78d3537713d3" name="Match content of [status]"><con:configuration><path>$.status</path><content>Text notification sent.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ce6184a5-99ec-4516-ac7a-ca38ff0647bc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="8b270bc9-29f7-49b7-add9-330a7a99b669" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Appointment Event collector" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="19326a78-cf17-43a7-ae4a-b44cc158686b"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 6 )
log.info randomValue
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("eventId",randomValue )


TimeZone.setDefault(TimeZone.getTimeZone('UTC'))
def now = new Date()
def eventtime = now.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert eventtime != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("eventTimeWithQuotes",'"'+eventtime+'"' )
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeStart",eventtime )
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeEnd",eventtime )


import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    footballPractice = currenttime + 1.week - 4.days + 2.hours - 3.seconds
    log.info footballPractice
    def timeInUtc = footballPractice.format("yyyy-MM-dd'T'HH:mm:00'Z'")
    log.info timeInUtc
}</script></con:config></con:testStep><con:testStep type="properties" name="Properties" id="5cd36560-969e-4f68-97e8-815602b442c3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>eventType</con:name><con:value>EMAIL_SENT_EVENT</con:value></con:property><con:property><con:name>eventTimeWithQuotes</con:name><con:value>"2018-04-04T17:34:00Z"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>timeRangeStart</con:name><con:value>2018-04-04T17:34:00Z</con:value></con:property><con:property><con:name>timeRangeEnd</con:name><con:value>2018-04-04T17:34:00Z</con:value></con:property><con:property><con:name>eventReason</con:name><con:value>"test notification"</con:value></con:property><con:property><con:name>eventId</con:name><con:value>171543</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="035f4b0f-47f5-4446-80b3-aa5140edc44f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT create event-email event" id="5809c613-1de9-43db-a54b-d891f3f3e63a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="dbc4f2f4-d342-4d09-ac2a-4cc31e6a4f01" name="PUT create event-email event" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/eventType/${Properties#eventType}</con:endpoint><con:request>{
  "eventId": ${Properties#eventId},
  "eventSource": "APPOINTMENTS",
  "eventReason":${Properties#eventReason} ,
  "eventTime": ${Properties#eventTimeWithQuotes},
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="f95083ac-3432-4c22-b7df-793ba21047ed" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="610aa929-e740-4dff-b059-fd1ae1cba646" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f9aa4698-ba2e-41bd-91bc-ee444478dc99" name="Check for existence of [eventTime]"><con:configuration><path>$.eventTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5a092cc9-fcb8-454e-a714-cea6927912da" name="Check for existence of [eventSource]"><con:configuration><path>$.eventSource</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c494c5d1-ccca-4ea8-91f8-ed3a49a90f3d" name="Match content of [eventSource]"><con:configuration><path>$.eventSource</path><content>APPOINTMENTS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="db138f6f-92ed-4753-8245-b4df58dee9c2" name="Match content of [eventType]"><con:configuration><path>$.eventType</path><content>${Properties#eventType}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="48cdcb42-d104-4778-ac61-fb2861550a39" name="Match content of [eventId]"><con:configuration><path>$.eventId</path><content>${Properties#eventId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>eventType</con:name><con:value>email</con:value><con:style>TEMPLATE</con:style><con:default>email</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET query for appointment events" id="be8b3a9f-f99d-4782-9f24-f9e3edda7b27"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="0df3694a-f19e-4eaa-bffc-d4289791c88e" name="GET query for appointment events" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="eab8914b-a587-4093-82df-38e42a0eb8bb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET query for appointment events with practiceId" id="7c5fee45-5d41-4a27-9207-4a3ec2234f80"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9e57ed8c-6a15-4c5b-86b1-13e54fe8a6f2" name="GET query for appointment events with practiceId" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de230d68-f9b5-45fb-ab3b-acc85f487385" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="59cb4646-dbbd-4cb2-acbb-41405d90e81f" name="Match content of [eventSource]"><con:configuration><path>$[0].eventSource</path><content>APPOINTMENTS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd1cf128-c5b9-427e-9864-cf6b975d4e71" name="Check for existence of [eventTime]"><con:configuration><path>$[0].eventTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c392f8f7-2808-4690-b5fe-0c9ab4924e8a" name="Check for existence of [eventId]"><con:configuration><path>$[0].eventId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2bfdfe4b-188d-4127-8a26-8eef635d6630" name="Check for existence of [eventReason]"><con:configuration><path>$[0].eventReason</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ad93a7a8-e114-4fae-9b8f-904ce2607b1b" name="Check for existence of [practiceId]"><con:configuration><path>$[0].practiceId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="95c25d45-fe95-4dc2-b421-c9b83ec346ba" name="Check for existence of [eventType]"><con:configuration><path>$[0].eventType</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET query for appointment events with practiceId and eventType" id="e9b2e726-fbb9-4397-b75b-4984f919d45a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9e57ed8c-6a15-4c5b-86b1-13e54fe8a6f2" name="GET query for appointment events with practiceId and eventType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de230d68-f9b5-45fb-ab3b-acc85f487385" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="699165f1-6627-4e33-9193-6f066800b36a" name="Check for existence of [eventReason]"><con:configuration><path>$[0].eventReason</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eb57c7e7-2a9c-42d9-b31b-3458c3cdaa10" name="Check for existence of [practiceId]"><con:configuration><path>$[0].practiceId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f2c80f26-a865-4362-8836-7610c0dffe50" name="Check for existence of [eventTime]"><con:configuration><path>$[0].eventTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c0864457-779f-4eb5-8681-42fdd3a3448e" name="Check for existence of [eventSource]"><con:configuration><path>$[0].eventSource</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="01ff911e-4755-42d6-b907-1a0ec8064bcb" name="Check for existence of [eventReason]"><con:configuration><path>$[0].eventReason</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2f0a07fb-2684-41ad-bf9a-1f9be7b0baca" name="Check for existence of [eventType]"><con:configuration><path>$[0].eventType</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="53042282-c096-4a76-8ec6-385da530ca59" name="Check for existence of [eventId]"><con:configuration><path>$[0].eventId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET query for appointment events with practiceId and eventType with eventId" id="bc222371-c352-4571-86a0-8b29aa0440ea"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9e57ed8c-6a15-4c5b-86b1-13e54fe8a6f2" name="GET query for appointment events with practiceId and eventType with eventId" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType}/eventId/${Properties#eventId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de230d68-f9b5-45fb-ab3b-acc85f487385" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2ddb0f2d-effe-47a5-ba1e-aea90004c6f8" name="Check for existence of [eventTime]"><con:configuration><path>$[0].eventTime</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8ac6602e-6976-457f-9c24-d02da91f6ba7" name="Check for existence of [practiceId]"><con:configuration><path>$[0].practiceId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="29b0ef90-f33c-455d-bf15-75753cd9beb2" name="Check for existence of [eventSource]"><con:configuration><path>$[0].eventSource</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7e939747-717b-4d13-ab16-34e6ed21fc10" name="Check for existence of [eventReason]"><con:configuration><path>$[0].eventReason</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eddf1136-065d-46eb-84a7-c00602d4caf3" name="Check for existence of [eventType]"><con:configuration><path>$[0].eventType</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b96dc0a6-fe47-4966-a3c7-36db80112222" name="Check for existence of [eventId]"><con:configuration><path>$[0].eventId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>19326a78-cf17-43a7-ae4a-b44cc158686b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>035f4b0f-47f5-4446-80b3-aa5140edc44f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="9e4b08c6-dc55-48e6-a2cc-f23ce475e948" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Utilization statistics" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="0b2536fe-ea00-4db4-89bb-32392ec47228"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="928c5e7d-faf5-4fb1-866c-a1cb9efc10b1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET Utilization stats for a practice" id="e7f5c716-476b-488f-9ba3-5affb77e4b6f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4f195610-eef9-4184-8820-787021acdb97" name="GET Utilization stats for a practice" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/utilization/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6bd0285c-31d9-4a70-b132-8d5ff1f7dff5" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b7a4f828-70e2-4e6d-8dc5-e942fd17d965" name="Check for existence of [today]"><con:configuration><path>$.today</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1070f1ef-348e-4b9d-9e5b-7407fa74e00d" name="Check for existence of [daily]"><con:configuration><path>$.daily</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="db2b7507-011d-48c0-8602-f3851cd1a787" name="Check for existence of [weekly]"><con:configuration><path>$.weekly</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2b45f61f-ff55-424c-a0ce-ce9190692bd8" name="Check for existence of [monthly]"><con:configuration><path>$.monthly</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b68a55ae-01b8-4fcb-884f-b0377a676d43" name="Check for existence of [quarterly]"><con:configuration><path>$.quarterly</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d250df17-321c-4536-9bd5-163802569b4a" name="Check for existence of [date]"><con:configuration><path>$.today.date</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eede48c4-3e95-4fdc-a225-0eca6a3f1ac1" name="Check for existence of [emails]"><con:configuration><path>$.today.emails</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b6bd2faf-6053-4f3d-8c3d-8b1dc2858f5d" name="Check for existence of [texts]"><con:configuration><path>$.today.texts</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="dfe178d7-2423-41fc-b113-1c7d6bededd3" name="Check for existence of [push]"><con:configuration><path>$.today.push</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2f946666-c2be-4c7e-8079-4db1d0a42e84" name="Check for existence of [appointmentsScheduled]"><con:configuration><path>$.today.appointmentsScheduled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ed0c5c0e-63ea-40c4-b362-7a55a7090987" name="Check for existence of [paymentsTotal]"><con:configuration><path>$.today.paymentsTotal</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>0b2536fe-ea00-4db4-89bb-32392ec47228</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>928c5e7d-faf5-4fb1-866c-a1cb9efc10b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3ea793ed-eb21-4a47-919c-9d32e23eaa08" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager for staff user-practice-20624" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="60c419de-8b0e-42b8-b27a-85aa4ffa9dfb"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>insuranceAppointmentId</con:name><con:value>596823dfe4b053c72e0a2417</con:value></con:property><con:property><con:name>url</con:name><con:value>"www.medfusion.com"</con:value></con:property><con:property><con:name>urlBody</con:name><con:value>www.medfusion.com</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"New test practice"</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"New test practice "</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="PUT PracticePatientSelfSchedulingConfiguration" id="8f2665c7-57a6-4701-9203-29d3975ca8d9"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="PUT PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": false,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingConfiguration" id="caf2e341-5f83-4115-a152-0a63ef304c94"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="GET PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="13f7eea4-bb18-453a-b503-f2b75528c0ac" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f1018862-67b0-4ea4-a5de-f5af4d9bc63a" name="Match content of [enabled]"><con:configuration><path>$.enabled</path><content>${PUT PracticePatientSelfSchedulingConfiguration#RawRequest#$.enabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f38c569-aed5-4653-96e6-4c9400d123b9" name="Match content of [url]"><con:configuration><path>$.url</path><content>${GET PracticePatientSelfSchedulingConfiguration#RawRequest#$.url}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="587d1957-60bf-4c5a-ac5a-1c9e3dc2d09f" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:originalMessage><![CDATA[<Response xmlns="http://d3-pt-app01.dev.medfusion.net/practice-settings-manager/v1/configuration/pss/practice/24170">
   <enabled>false</enabled>
   <practiceId>24170</practiceId>
   <url>http://www.medfusion122.com</url>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="putPracticePatientSelfSchedulingUrl" id="a35fa9f6-4c5b-4857-aa26-9cfcc18ac332"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="putPracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>${Properties#urlBody}</con:request><con:assertion type="Valid HTTP Status Codes" id="827412cd-1aef-411d-9951-404c8e5fcae1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingUrl" id="617a3d48-c76f-41f9-829f-7ae4c51ba1ac"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="GET PracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>${Properties#url}</con:request><con:assertion type="Valid HTTP Status Codes" id="2dbffed0-41f2-45d4-b161-a6e3ab92e409" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="83650ffa-264c-448a-8fb9-51251dbf5b3b" name="Match content of [data]"><con:configuration><path>//data[1]/text()</path><content>${Properties#urlBody}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>true</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="5d400e5c-66b3-44be-b64e-594b60e8b15e" name="Check for existence of [data]"><con:configuration><path>exists( //data)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="00b8c848-319e-4393-a0b1-7b49a7a46f44" name="Check for existence of [@contentLength]"><con:configuration><path>exists( //data/@contentLength)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Put putPracticePrecheckConfiguration" id="1c4d27fe-e2b2-4267-a9dc-146acbecafcd"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="Put putPracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="350dfc3e-de99-4e70-85e5-55d382e5f78f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePrecheckConfiguration" id="80d6b9fd-9265-493e-9150-866307a8997f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="GET PracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="350dfc3e-de99-4e70-85e5-55d382e5f78f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7beff507-dc6a-484e-a847-a504ee38fcd3" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dd803f58-ec10-4d97-b39a-3472a4df09ae" name="Match content of [enabled]"><con:configuration><path>$.enabled</path><content>${Put putPracticePrecheckConfiguration#RawRequest#$.enabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration" id="1e2936fc-cf2d-4add-a6a4-ee8c2053d83f"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="PUT practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "active": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="caa6a2a6-1f6f-4e35-b342-91a6131326ca" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceConfiguration" id="f1a7fd9c-1532-4257-a478-47e3b98fd7ee"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="GET practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae1324a7-97c8-49db-82a8-589ec049ae4d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="66fe8b28-f4ec-4c87-a438-0859575c7278" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2d66949d-902f-4b18-8dfb-791a27ea8426" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="00d91308-aec3-4a2e-bc6f-a1eca816c89e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dd751d7a-23e1-4591-b5e0-d127fe93aadb" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceNotificationConfiguration" id="1216241d-0d36-4d81-b9be-fbad1087c7fe"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="PUT practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request>

{
  "appointmentRemindersEnabled": "true",
  "emailEnabled": true,
  "enabled": true,
  "notifyFiveDaysOut": false,
  "notifyOneDayOut": false,
  "notifyThreeDaysOut": true,
  "practiceId": ${Properties#practiceId},
  "pushEnabled": false,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceNotificationConfiguration" id="f3738244-487a-4065-bcc4-8106495c3352"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="GET practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d44dcc8e-a0ae-461e-8734-117111f5095d" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="671453ee-13c2-47d0-88a0-ade9143eff20" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8dd17cd3-948c-4d81-b7ef-bed8c809af31" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="391832f3-d23d-4b84-b0fd-4ad8884e6899" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ee01fcbc-e555-4f2d-82b3-e87cbbcd9618" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager with system auth-20624" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="properties" name="Properties" id="6bf398e9-69b3-402f-93e5-5b236ca0834c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>location</con:name><con:value>"Dev location"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>12347</con:value></con:property><con:property><con:name>appointmentTime</con:name><con:value>1500093051000</con:value></con:property><con:property><con:name>provider</con:name><con:value>"Dev provider"</con:value></con:property><con:property><con:name>zip</con:name><con:value>"27513"</con:value></con:property><con:property><con:name>dob</con:name><con:value>"1990-05-20"</con:value></con:property><con:property><con:name>email</con:name><con:value>"jane.rasika@medfusion.com"</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>merchantId</con:name><con:value>"2560789797"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>3000</con:value></con:property><con:property><con:name>SystemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>appointmentId</con:name><con:value>59681df0e4b053c72e0a240a</con:value></con:property><con:property><con:name>invalidAppointmentId</con:name><con:value>59681df0e4b053c72e0a240b</con:value></con:property><con:property><con:name>date</con:name><con:value>1500091200000</con:value></con:property><con:property><con:name>daysOut</con:name><con:value>1</con:value></con:property><con:property><con:name>cancelAppointmentId</con:name><con:value>59528241e4b0a5ef2a385a0d</con:value></con:property><con:property><con:name>insuranceAppointmentId</con:name><con:value>596823dfe4b053c72e0a2417</con:value></con:property><con:property><con:name>url</con:name><con:value>"www.medfusion.com"</con:value></con:property><con:property><con:name>urlBody</con:name><con:value>www.medfusion.com</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"New test practice"</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"New test practice "</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="3f587b82-d412-405b-aacc-1a584bdda80a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT PracticePatientSelfSchedulingConfiguration" id="9968d540-66e3-4833-bee6-12ce15738d8f"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="PUT PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": false,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingConfiguration" id="6881bdf9-85e1-44ff-ae45-2d0c3d4d085f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="6e896e05-56ea-41a2-850c-5815b28c8be9" name="GET PracticePatientSelfSchedulingConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId},
  "url": ${Properties#url}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bea788dd-9baf-4f2e-946b-484e6f6b02d9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="13f7eea4-bb18-453a-b503-f2b75528c0ac" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f1018862-67b0-4ea4-a5de-f5af4d9bc63a" name="Match content of [enabled]"><con:configuration><path>$.enabled</path><content>${PUT PracticePatientSelfSchedulingConfiguration#RawRequest#$.enabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f38c569-aed5-4653-96e6-4c9400d123b9" name="Match content of [url]"><con:configuration><path>$.url</path><content>${GET PracticePatientSelfSchedulingConfiguration#RawRequest#$.url}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="587d1957-60bf-4c5a-ac5a-1c9e3dc2d09f" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:originalMessage><![CDATA[<Response xmlns="http://d3-pt-app01.dev.medfusion.net/practice-settings-manager/v1/configuration/pss/practice/24170">
   <enabled>false</enabled>
   <practiceId>24170</practiceId>
   <url>http://www.medfusion122.com</url>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>practiceId</con:name><con:value>${Properties#practiceId}</con:value><con:style>QUERY</con:style><con:default>${Properties#practiceId}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="putPracticePatientSelfSchedulingUrl" id="0f293bbb-7464-442d-a11b-3009925cf6c8"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="putPracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>${Properties#urlBody}</con:request><con:assertion type="Valid HTTP Status Codes" id="827412cd-1aef-411d-9951-404c8e5fcae1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePatientSelfSchedulingUrl" id="d24eb964-9c69-47cf-8095-04919f4fbee5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="12ecd482-913b-4e92-9257-71a6aaa3eaa2" name="GET PracticePatientSelfSchedulingUrl" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/pss/practice/${Properties#practiceId}/url</con:endpoint><con:request>${Properties#url}</con:request><con:assertion type="Valid HTTP Status Codes" id="2dbffed0-41f2-45d4-b161-a6e3ab92e409" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="83650ffa-264c-448a-8fb9-51251dbf5b3b" name="Match content of [data]"><con:configuration><path>//data[1]/text()</path><content>${Properties#urlBody}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>true</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="5d400e5c-66b3-44be-b64e-594b60e8b15e" name="Check for existence of [data]"><con:configuration><path>exists( //data)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="00b8c848-319e-4393-a0b1-7b49a7a46f44" name="Check for existence of [@contentLength]"><con:configuration><path>exists( //data/@contentLength)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Put putPracticePrecheckConfiguration" id="5d5a5baf-2793-49d6-abe5-e7b606ebaa46"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="Put putPracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET PracticePrecheckConfiguration" id="15747070-4060-4f98-aa11-a05fb9023df8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="763f5cb5-6ed2-4896-8703-35659b098aa5" name="GET PracticePrecheckConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/precheck/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "enabled": true,
  "practiceId": ${Properties#practiceId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="350dfc3e-de99-4e70-85e5-55d382e5f78f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7beff507-dc6a-484e-a847-a504ee38fcd3" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dd803f58-ec10-4d97-b39a-3472a4df09ae" name="Match content of [enabled]"><con:configuration><path>$.enabled</path><content>${Put putPracticePrecheckConfiguration#RawRequest#$.enabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration" id="5af9121d-45c1-473e-94cf-1c67f99a539e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="PUT practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "active": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="caa6a2a6-1f6f-4e35-b342-91a6131326ca" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceConfiguration" id="933cd043-cd61-4564-afa2-f418d0286763"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="95ee84e0-bf0b-4ff9-8dc3-e2b625163358" name="GET practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae1324a7-97c8-49db-82a8-589ec049ae4d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="66fe8b28-f4ec-4c87-a438-0859575c7278" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2d66949d-902f-4b18-8dfb-791a27ea8426" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="00d91308-aec3-4a2e-bc6f-a1eca816c89e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dd751d7a-23e1-4591-b5e0-d127fe93aadb" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceNotificationConfiguration" id="91509616-519a-4828-95c9-1d32c2483d1d"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="PUT practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request>

{
  "appointmentRemindersEnabled": "true",
  "emailEnabled": true,
  "enabled": true,
  "notifyFiveDaysOut": false,
  "notifyOneDayOut": false,
  "notifyThreeDaysOut": true,
  "practiceId": ${Properties#practiceId},
  "pushEnabled": false,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET practiceNotificationConfiguration" id="aefb88c6-2156-4199-ac41-0b51715b1ee0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a22f1be2-e67a-41d3-b512-87e480614fee" name="GET practiceNotificationConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v1/configuration/notifications/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="de97ab08-ae31-443c-b841-9c75c8761f9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d44dcc8e-a0ae-461e-8734-117111f5095d" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="671453ee-13c2-47d0-88a0-ade9143eff20" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8dd17cd3-948c-4d81-b7ef-bed8c809af31" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="391832f3-d23d-4b84-b0fd-4ad8884e6899" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>3f587b82-d412-405b-aacc-1a584bdda80a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="5cea8d5a-bdbb-4cfd-8634-89652cbeba8c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager v2 endpoints" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="cead8c0e-e62c-4271-91a9-06357c24ac87"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>invalidAuthorization</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>pssUrl</con:name><con:value>"www.medfusion.com"</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>3544</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="41f0a24a-0fda-4e99-bc4f-248e4dc85913"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration" id="6eb45f9b-9d51-4fa2-b0d1-dc07913fa006"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v2/configuration/general/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": true,
  "practiceDisplayName": ${Properties#practiceDisplayName},
  "practiceId": ${Properties#practiceId},
  "practiceName": ${Properties#practiceName},
  "integrationId":${Properties#integrationId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="68b9dfbb-0784-4f3e-aede-796a1188b338" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4c92c86e-282c-4fa4-adaf-f41450d648e8" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="88ea2a4a-fdd3-44c6-b128-a3cbd4950d2e" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="433dd59f-ba01-4b53-be3c-b1311b675d23" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4540b749-1c0c-49be-b86d-420d692efe9c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v2 practice configuration as a system user" id="1a32d40a-0baf-4e74-b602-07934172c6b9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v2 practice configuration as a system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v2/configuration/general/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="884d2a23-55c5-4d04-bee1-624a8a48e917" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e46b7667-5e8e-4b19-8b6f-df41c154ffd5" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01fada97-9748-4fd4-b810-054d970fbf1e" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration#Response#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5afa34d-c164-4159-a6a5-738613cc9c0c" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19fe9eb9-634f-41b4-bed6-7d47ff21e7d7" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${PUT practiceConfiguration#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf4a1e0-2df1-44b9-a0c2-972900559dcb" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v2 practices configurations with staff creds" id="2843ef4b-3d11-49f6-9478-5e9b13ce7290"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v2 practices configurations with staff creds" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v2/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="884d2a23-55c5-4d04-bee1-624a8a48e917" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e46b7667-5e8e-4b19-8b6f-df41c154ffd5" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01fada97-9748-4fd4-b810-054d970fbf1e" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration#Response#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5afa34d-c164-4159-a6a5-738613cc9c0c" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bec93eed-525d-4d26-b2d4-637b56027979" name="Check for existence of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ce80ef27-ade5-42b4-b572-2cfb17cab4e6" name="Check for existence of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b0a53e60-319e-4796-b0c6-2fc99f45254c" name="Check for existence of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a132796c-35af-435c-a3de-1f44d937fcf9" name="Check for existence of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b53e7d22-1707-4ec5-ba8a-1b2516597cc1" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b159994f-df77-40f1-b38c-467738153f2a" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f38ef510-7ca9-4f73-a484-2049f22ae6a0" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="647daa2f-74c2-40a4-b489-49640a9a4cff" name="Check for existence of [appointmentReminderEnabled]"><con:configuration><path>$.appointmentReminderEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9fa53afd-4339-43e8-a9c8-d18febd84d48" name="Check for existence of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b65fdccd-2c0b-48a6-a028-fe0956c2d82e" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d3a3feca-59e5-4db8-8c8a-d1d8807aa01c" name="Check for existence of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19fe9eb9-634f-41b4-bed6-7d47ff21e7d7" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${PUT practiceConfiguration#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf4a1e0-2df1-44b9-a0c2-972900559dcb" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ad3ed8a0-e043-402b-8dee-008bb01be415" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration for invalid staff" id="780e3304-9608-4d85-b501-11ef3e2931a3"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration for invalid staff" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v2/configuration/general/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": true,
  "practiceDisplayName": ${Properties#practiceDisplayName},
  "practiceId": ${Properties#practiceId},
  "practiceName": ${Properties#practiceName},
  "integrationId":${Properties#integrationId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v2 practice configurations for invalid staff" id="cb80473d-f401-4127-aae9-5ed2da0f586d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v2 practice configurations for invalid staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v2/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET all practices configuration" id="10bd5409-47a1-4bdf-9de3-cfa62ad4d25d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="80588e15-a45a-439b-8538-88ae84e9ce8e" name="GET all practices configuration" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v2/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="dafb3c60-96da-4a83-b3ef-a75febf11773" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script assertion" id="0e3755bf-fd01-49cf-a099-fb09056bb4d8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["GET all practices configuration"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def ids= jsonSlurper.practiceId
assert ids.size >1
def practiceId = context.expand( '${Properties#practiceId}' )
assert ids.contains(practiceId).toString()
	</script></con:config></con:testStep><con:testStep type="httprequest" name="GET all practices configuration as a staff" id="24da4bf5-c937-45ac-a8aa-a0130717d02a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="80588e15-a45a-439b-8538-88ae84e9ce8e" name="GET all practices configuration as a staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v2/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="dafb3c60-96da-4a83-b3ef-a75febf11773" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration as a system user" id="bfd22c73-5de1-46c1-951e-a948a696546b"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration as a system user" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v2/configuration/general/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": true,
  "practiceDisplayName": ${Properties#practiceDisplayName},
  "practiceId": ${Properties#practiceId},
  "practiceName": ${Properties#practiceName},
  "integrationId":${Properties#integrationId}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="68b9dfbb-0784-4f3e-aede-796a1188b338" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4c92c86e-282c-4fa4-adaf-f41450d648e8" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="88ea2a4a-fdd3-44c6-b128-a3cbd4950d2e" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="433dd59f-ba01-4b53-be3c-b1311b675d23" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4540b749-1c0c-49be-b86d-420d692efe9c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v2 practice configurations as a system user" id="6d32d628-13eb-4734-80aa-30da41251dc5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v2 practice configurations as a system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v2/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="884d2a23-55c5-4d04-bee1-624a8a48e917" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e46b7667-5e8e-4b19-8b6f-df41c154ffd5" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01fada97-9748-4fd4-b810-054d970fbf1e" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration#Response#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5afa34d-c164-4159-a6a5-738613cc9c0c" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bec93eed-525d-4d26-b2d4-637b56027979" name="Check for existence of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ce80ef27-ade5-42b4-b572-2cfb17cab4e6" name="Check for existence of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b0a53e60-319e-4796-b0c6-2fc99f45254c" name="Check for existence of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a132796c-35af-435c-a3de-1f44d937fcf9" name="Check for existence of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b53e7d22-1707-4ec5-ba8a-1b2516597cc1" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b159994f-df77-40f1-b38c-467738153f2a" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f38ef510-7ca9-4f73-a484-2049f22ae6a0" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="647daa2f-74c2-40a4-b489-49640a9a4cff" name="Check for existence of [appointmentReminderEnabled]"><con:configuration><path>$.appointmentReminderEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9fa53afd-4339-43e8-a9c8-d18febd84d48" name="Check for existence of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b65fdccd-2c0b-48a6-a028-fe0956c2d82e" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d3a3feca-59e5-4db8-8c8a-d1d8807aa01c" name="Check for existence of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19fe9eb9-634f-41b4-bed6-7d47ff21e7d7" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${PUT practiceConfiguration#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf4a1e0-2df1-44b9-a0c2-972900559dcb" name="Match content of [active]"><con:configuration><path>$.active</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ad3ed8a0-e043-402b-8dee-008bb01be415" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6eb45f9b-9d51-4fa2-b0d1-dc07913fa006</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41f0a24a-0fda-4e99-bc4f-248e4dc85913</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e3755bf-fd01-49cf-a099-fb09056bb4d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24da4bf5-c937-45ac-a8aa-a0130717d02a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1a32d40a-0baf-4e74-b602-07934172c6b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="53e02148-ad3a-4a22-a0fc-bd2d314adca8" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="POST appointments to appointment service" searchProperties="true" maxResults="0"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">true</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="properties" name="Properties" id="90efc7d7-1206-4b97-920f-ee2639203744"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>9</con:value></con:property><con:property><con:name>emrId</con:name><con:value>2016052301</con:value></con:property><con:property><con:name>time</con:name><con:value>1533391313000</con:value></con:property><con:property><con:name>locationName</con:name><con:value>"Appointment location1"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>"x593fa8ap2b7"</con:value></con:property><con:property><con:name>providerName</con:name><con:value>"Eshita williams"</con:value></con:property><con:property><con:name>cancellationReason</con:name><con:value>"test reason mfis"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>227197</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>displayName</con:name><con:value>"Jakub's Practice"</con:value></con:property><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="23e23e00-92ca-4ebd-8af2-fb36266757bb"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
appointmentid = generator( (('1'..'9')+('a'..'z')+('1'..'9')+('1'..'9')).join(), 12 )
log.info appointmentid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmAppointmentId",'"'+appointmentid+'"' )





def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
patientid = generator2( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 6 )
log.info patientid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmExternalId",patientid )


import groovy.time.TimeCategory
now = new Date()
use(TimeCategory) {
 def futuretime = now + 5.days 
 def timeinmillis = futuretime.getTime().toString()
 log.info timeinmillis
 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("time",timeinmillis )

}</script></con:config></con:testStep><con:testStep type="httprequest" name="POST CONFIGS for staff-enable everything" id="6afc0141-3898-4731-86cc-e7c2369c963b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="20e48a78-19a1-42d9-a45e-de0e50acc136" name="POST CONFIGS for staff-enable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": ${Properties#displayName},
   "disableDemographics": false,
   "disableInsurance": false,
   "disableCopay": false,
   "disableBalance": false,
   "minBalanceAmount": 5,
   "minBalancePercent":0 ,
   "minBalanceThreshold": 0,
   "enablePatientMode": false,
   "patientModeCompletionMessage": "",
   "appointmentTimeZone": "America/New_York",
   "disableAppointmentReminders": false,
   "phoneNumber": 8111881019,
   "appointmentReminderFromEmail": "appointments@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a81da7df-e585-44ce-ad90-91d80a5d60fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9343eec7-34f1-40b7-a74f-df0ff1f1d3f9" name="Match content of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="233f3b6f-4037-4e98-9bf9-2c6e4014cc85" name="Match content of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ffbb2e84-cff5-4d73-a685-f9a881eac7a3" name="Match content of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="257298be-3291-462d-8b52-dd27859a6fab" name="Match content of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="beb90e96-5dbf-4009-b407-dbc2d6b72c11" name="Match content of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment without insurance" id="434aa9f0-16b2-4822-82c3-66debab62d8c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment without insurance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v3/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {

    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Daniels",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "John",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane.rasika@medfusion.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  "appointmentId": "",
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment with primary, secondary &amp; tertiary insurance +selenium test" id="0ae68f39-566f-4193-a329-f55f17891b1e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment with primary, secondary &amp; tertiary insurance +selenium test" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v3/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {
 "primaryInsuranceInfo": 
{ "name": "Medicare", "groupNumber": "GROUP2874","memberId": "M8924", "groupName": "G93840989", "dateIssued": "2017-05-31T00:00:00Z"
},
"secondaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber2",
      "groupName": "Random group",
      "memberId": "M34878id",
      "dateIssued": ""
    },
    "tertiaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber3",
      "groupName": "",
      "memberId": "M34878id",
      "dateIssued": ""
    }
    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Daniels",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "Isabella",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane.rasika@medfusion.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  "appointmentId": "",
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment with primary and secondary insurance +selenium test" id="7aacadcb-bf73-4900-86b0-bc1f6baa86c3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment with primary and secondary insurance +selenium test" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v3/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>	{
	  "insurance": {
	 "primaryInsuranceInfo": 
	{ "name": "Medicare", "groupNumber": "GROUP2874","memberId": "M8924", "groupName": "G93840989", "dateIssued": "2017-05-31T00:00:00Z"
	},
	"secondaryInsuranceInfo": {
	      "name": "",
	      "groupNumber": "Gnumber2",
	      "groupName": "Random group",
	      "memberId": "M34878id",
	      "dateIssued": ""
	    }
	    },
	  "locationName": ${Properties#locationName},
	  "pmAppointmentId": ${Properties#pmAppointmentId},
	  "cancellationReason": ${Properties#cancellationReason},
	  "practiceDemographics": {
	    "zip": "27513",
	    "lastName": "Daniels",
	    "address": "1225, parktop drive",
	    "address2": "Weston parkside",
	    "city": "cary",
	    "firstName": "John",
	    "phone": "9194554883",
	    "dob": "",
	    "pmExternalId": ${Properties#pmExternalId},
	    "middleName": "",
	    "state": "NC",
	    "email": "jane.rasika@medfusion.com"
	  },
	  "practiceId": ${Properties#practiceId},
	  "type": "cardio",
	  "coPayment": {
	    "amount": 56
	  },
	 "balance": {
	    "amount": 30,
	    "status":"INCOMPLETE"
	
	  },
	  "appointmentId": "",
	  "time": ${Properties#time},
	  "appointmentAddress": {
	    "zip": "33734",
	    "address": "1256, Avance clinic",
	    "address2": "McCrimon parkway",
	    "city": "Morrisville",
	    "state": "NC"
	  },
	  "providerName": ${Properties#providerName}
	
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment with primary insurance +selenium test" id="00ec29e4-5ec9-41dd-b9af-ff5555d7c2a8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment with primary insurance +selenium test" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v3/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {
 "primaryInsuranceInfo": 
{ "name": "Medicare", "groupNumber": "GROUP2874","memberId": "M8924", "groupName": "G93840989", "dateIssued": "2017-05-31T00:00:00Z"
}
    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Daniels",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "John",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane.rasika@medfusion.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment with primary insurance +selenium test 2" id="d052993c-b939-4099-b184-761dea8e9e4f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment with primary insurance +selenium test 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v3/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {
 "primaryInsuranceInfo": 
{ "name": "Medicare insurance", "groupNumber": "GROUP2874","memberId": "M8924", "groupName": "G93840989", "dateIssued": ""
}
    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Daniels",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "John",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "automationtest123@mailinator.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  "appointmentId": "",
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",  
    "state": "NC"
  },
  "providerName": ${Properties#providerName}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment  with secondary &amp; tertiary insurance" id="9513d3dc-51f7-4832-8967-dfee6f835424"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment  with secondary &amp; tertiary insurance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v3/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {

"secondaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber2",
      "groupName": "Random group",
      "memberId": "M34878id",
      "dateIssued": ""
    },
    "tertiaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber3",
      "groupName": "",
      "memberId": "M34878id",
      "dateIssued": ""
    }
    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Daniels",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "John",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane.rasika@medfusion.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  "appointmentId": "",
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="v4 precheck endpoint to send appointments to reminder service" id="43497182-744a-439c-8855-56c6fc93d67f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55001180-9c42-4b54-a409-90e3f469e709" name="v4 precheck endpoint to send appointments to reminder service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v4/appointments/reminders</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="806ecffe-b090-4ba3-aa19-d187bc2146cc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8343e986-70d9-41ff-a530-abbd7620f372" name="Script Assertion"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#systemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>daysOut[]</con:name><con:value>5</con:value><con:style>QUERY</con:style><con:default>5</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script assertion" id="9da3d44e-e26e-48a3-8ddf-71574f7a8913"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["v4 precheck endpoint to send appointments to reminder service"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def ids= jsonSlurper.pmAppointmentId
def pmAppointmentId = context.expand( '${Properties#pmAppointmentId}' )

for(int i=0; i&lt;ids.size();i++){
	def apptids=ids[i]
	log.info apptids
	if(jsonSlurper.pmAppointmentId.equals(pmAppointmentId).toString()){
		log.info "Appointment created from appointment service is also present in precheck "
		assert jsonSlurper.pmAppointmentId.equals(pmAppointmentId).toString()
		break
	}
}
	if(ids.contains(pmAppointmentId).toString()){
	assert ids.contains(pmAppointmentId).toString()
	}</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>5b65c2e0-325f-4211-a007-dc9f9ab2e35b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24b73c27-7314-482f-b574-7207be6e8db7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4948d2c-d349-49e0-9bae-975721f9a5b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9d67f73f-3def-4ad4-8d1d-bb73be8ecf59</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5050f2ee-ae41-4e32-afd1-77c8319780f4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9faff9e3-79a1-4f75-b428-4c6bcbac3b75</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4bffe85-e5fb-4d5b-b242-8e9ef19f1f8d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9f4d7d4f-b2a1-4d73-b4da-e8d6f6c1a31d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f57bcf2e-1ea8-43bc-b41d-819e7b4b0516</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>23e23e00-92ca-4ebd-8af2-fb36266757bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6afc0141-3898-4731-86cc-e7c2369c963b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="760435c4-1966-41ee-805e-62dee341a4fe" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="single reminder for practice with configuration" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="36769cf0-1d76-422b-bfc6-cd3f5d25e41a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>3544</con:value></con:property><con:property><con:name>timeRangeStart</con:name><con:value>2018-04-13T18:40:00Z</con:value></con:property><con:property><con:name>timeRangeEnd</con:name><con:value>2018-04-13T18:44:00Z</con:value></con:property><con:property><con:name>eventType</con:name><con:value>EMAIL_SENT_EVENT</con:value></con:property><con:property><con:name>eventType2</con:name><con:value>TEXT_SENT_EVENT</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="7386dda1-5ed9-4e40-a564-59e733ba21a6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration -Enable all" id="d14cf15e-cf60-4405-bf94-5f697437ca1e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration -Enable all" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": true,
  "appointmentRemindersEnabled": true,
  "emailEnabled": true,
  "integrationId": ${Properties#integrationId},
  "notificationsEnabled": true,
  "notifyFiveDaysOut": true,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true,
  "practiceDisplayName": "New Test practice",
  "practiceForms": [
  {
    
    "formTitle": "Real form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
    "practiceId": ${Properties#practiceId}
    
  },

  {
    
    "formTitle": "HIPAA policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Financial policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
    "practiceId": ${Properties#practiceId}
    
  }
  
 
  
],
  "practiceId": ${Properties#practiceId},
  "practiceName": "New test practice",
  "practiceTimezone": "America/Anchorage",
  "precheckEnabled": true,
  "pssEnabled": true,
  "pssUrl": "www.medfusion.com",
  "pushEnabled": true,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="68b9dfbb-0784-4f3e-aede-796a1188b338" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4540b749-1c0c-49be-b86d-420d692efe9c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b44a9-3b81-41bf-a985-36bea1d0a227" name="Match content of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceTimezone}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1726a632-f780-489e-8259-39c8185c0d1d" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d207a3cf-389f-487b-8d43-31db715df4b8" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adb8c13a-a512-49b6-815a-0a88c7ab3a1a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ebea5d5c-3f50-4c92-880e-491d164555c0" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f0471ad-4a2f-49b5-828b-8e6f6dfd99e2" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9f363bf9-97e8-4f90-9dbb-21de5085c8c6" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="51de85cb-6005-40e4-ad70-ea247a47f15c" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e3f254a2-8fa5-4fbe-b5a5-9f07228c7980" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9eb20efb-dfe7-43df-bc3e-07b12eba2fa8" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07cba217-07bd-4962-8a95-e7bc8737c3db" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4d4978e5-458f-4e61-afe3-0eb0ecec83a6" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5b708a1-3c04-4aca-b3c4-79b9913cce0d" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b3e3d-e80d-4248-83ca-aff490e9bbbf" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f68f094-5c73-4d5d-9b5b-794b4e465994" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e93322aa-51c5-49b6-929c-4edfc81554b6" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST send single reminder" id="b0c4f9f5-4923-4c1f-8872-74e347ffe85d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4ebdfce2-a2a9-4002-99cb-d85fc45fcea8" name="POST send single reminder" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email</con:endpoint><con:request>{
  "appointmentId": "5ac7c5a0712063b372d299d4",
  "appointmentTime": 1519198200000,
  "dob": "1517443200000",
  "emrId": "98349",
  "encryptedAppointmentId": "7z7vg5ORy2435PZCq3yl9sY0boKbDbu0sA%3D%3D",
  "firstName": "tgest",
  "fromEmailAddress": "appointments@medfusion.com",
  "integrationId": "",
  "lastName": "test",
  "locationAddress": "address",
  "locationAddress2": "",
  "locationCity": "cary",
  "locationName": "test",
  "locationPhone": "",
  "locationState": "AL",
  "locationZipcode": "27513",
  "merchantId": 2560789797,
  "middleName": "",
  "phoneNumber": "9194554883",
  "pmAppointmentId": "",
  "practiceId": 20624,
  "practiceName": "New Jakub's test practice ",
  "timeZoneId": "America/New_York",
  "toEmailAddress": "jane.rasika@medfusion.com"
}
</con:request><con:assertion type="Valid HTTP Status Codes" id="b42de872-3f44-4106-bb2c-cad78302bfac" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="590ba268-cb65-4575-a546-de1e1194387f" name="Match content of [type]"><con:configuration><path>$[0].type</path><content>EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d364c14a-8753-47dd-be80-dfc907a74b0f" name="Match content of [type]"><con:configuration><path>$[1].type</path><content>TEXT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST send single reminder without system authorization" id="9ac21fce-f4ce-4e29-a9ae-9348958dd5e2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4ebdfce2-a2a9-4002-99cb-d85fc45fcea8" name="POST send single reminder without system authorization" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email</con:endpoint><con:request>{
  "appointmentId": "5a7b4eda7120e09af164b0bc",
  "appointmentTime": 1519198200000,
  "dob": "1517443200000",
  "emrId": "98349",
  "encryptedAppointmentId": "7z7vg5ORyUlEwbNJrh%2BkM1y6FHy1remOrPZCq3yl9sY0boKbDbu0sA%3D%3D",
  "firstName": "tgest",
  "fromEmailAddress": "appointments@medfusion.com",
  "integrationId": "",
  "lastName": "string",
  "locationAddress": "address",
  "locationAddress2": "",
  "locationCity": "cary",
  "locationName": "test",
  "locationPhone": "",
  "locationState": "AL",
  "locationZipcode": "27513",
  "merchantId": 2560789797,
  "middleName": "",
  "phoneNumber": 9194554883,
  "pmAppointmentId": "",
  "practiceId": 20624,
  "practiceName": "New Jakub's test practice ",
  "timeZoneId": "America/New_York",
  "toEmailAddress": "jane.rasika@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b42de872-3f44-4106-bb2c-cad78302bfac" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST send single reminder with invalid appointment data" id="bfa271a1-e4e7-499c-9ecf-cc842771793b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4ebdfce2-a2a9-4002-99cb-d85fc45fcea8" name="POST send single reminder with invalid appointment data" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email</con:endpoint><con:request>{
  "appointmentId": "5a13425e09af345bc",
  "appointmentTime": 1519198200000,
  "dob": "1517443200000",
  "emrId": "98349",
  "encryptedAppointmentId": "7z7vg5ORy2435PZCq3yl9sY0boKbDbu0sA%3D%3D",
  "firstName": "tgest",
  "fromEmailAddress": "appointments@medfusion.com",
  "integrationId": "",
  "lastName": "string",
  "locationAddress": "address",
  "locationAddress2": "",
  "locationCity": "cary",
  "locationName": "test",
  "locationPhone": "",
  "locationState": "AL",
  "locationZipcode": "27513",
  "merchantId": 2560789797,
  "middleName": "",
  "phoneNumber": 9194554883,
  "pmAppointmentId": "",
  "practiceId": 20624,
  "practiceName": "New Jakub's test practice ",
  "timeZoneId": "America/New_York",
  "toEmailAddress": "jane.rasika@medfusion.com"
}

</con:request><con:assertion type="Valid HTTP Status Codes" id="b42de872-3f44-4106-bb2c-cad78302bfac" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="590ba268-cb65-4575-a546-de1e1194387f" name="Match content of [type]"><con:configuration><path>$[0].type</path><content>EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d364c14a-8753-47dd-be80-dfc907a74b0f" name="Match content of [type]"><con:configuration><path>$[1].type</path><content>TEXT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="7433a89c-0e16-45ad-b5b6-ac045562f25b"><con:settings/><con:config><script>TimeZone.setDefault(TimeZone.getTimeZone('UTC'))
def now = new Date()

import org.codehaus.groovy.runtime.TimeCategory
import groovy.time.TimeCategory
currenttime = new Date()
use(TimeCategory) {
    starttime = currenttime  - 2.minutes
    log.info starttime
    def timeInUtcstart = starttime.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert timeInUtcstart != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeStart",timeInUtcstart )
}


use(TimeCategory) {
    endtime = currenttime  + 2.minutes
    log.info endtime
    def timeInUtcend = endtime.format("yyyy-MM-dd'T'HH:mm:00'Z'")
assert timeInUtcend != null
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("timeRangeEnd",timeInUtcend )
}
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="85fbaa6e-2c4b-4400-a5cc-5544107aea61"><con:settings/><con:config><delay>4000</delay></con:config></con:testStep><con:testStep type="httprequest" name="Get events  for reminders-Email" id="344cca5c-fbb9-4640-96bd-43342a72c022"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c24d2534-d938-48d7-8615-8fd680efc1ea" name="Get events  for reminders-Email" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="351dc087-47d4-4379-8d63-e932e8d8b198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 2" id="b8d077d1-c0e2-4391-919d-745e6d62f3a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get events  for reminders-Email"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def types= jsonSlurper.eventType
def practiceId = context.expand( '${Properties#practiceId}' )
def eventtype = "EMAIL_SENT_EVENT"

for(int i=0; i&lt;types.size();i++){
	def eventtypes=types[i]
	if(jsonSlurper.practiceId.equals(practiceId).toString()){
		assert eventtypes.equals(eventtype)
		break
	}
}
	</script></con:config></con:testStep><con:testStep type="httprequest" name="Get events  for reminders-Text" id="ae64f32c-7465-4b2c-aac6-ce51898a0f3f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c24d2534-d938-48d7-8615-8fd680efc1ea" name="Get events  for reminders-Text" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8121/apt-event-collector/v1/event/practiceId/${Properties#practiceId}/eventType/${Properties#eventType2}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="351dc087-47d4-4379-8d63-e932e8d8b198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>timeRangeStart</con:name><con:value>${Properties#timeRangeStart}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeStart}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>timeRangeEnd</con:name><con:value>${Properties#timeRangeEnd}</con:value><con:style>QUERY</con:style><con:default>${Properties#timeRangeEnd}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script 3" id="8ba147b5-97ff-4293-9a03-76b94f7a6e3b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get events  for reminders-Text"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def types= jsonSlurper.eventType
def practiceId = context.expand( '${Properties#practiceId}' )
def eventtype = "TEXT_SENT_EVENT"

for(int i=0; i&lt;types.size();i++){
	def eventtypes=types[i]
	if(jsonSlurper.practiceId.equals(practiceId).toString()){
		assert eventtypes.equals(eventtype)
		break
	}
}
	</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>7386dda1-5ed9-4e40-a564-59e733ba21a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d14cf15e-cf60-4405-bf94-5f697437ca1e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>36769cf0-1d76-422b-bfc6-cd3f5d25e41a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85fbaa6e-2c4b-4400-a5cc-5544107aea61</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="34787db9-3d59-4f48-a4ac-69cdd538e1e4" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="single reminder for practice without configuration" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST to get token 1" id="de5ec028-21d4-41cb-9bd5-f820c3691554"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST send single reminder" id="b2dfd67f-a8ff-41a7-a4f2-620990bcc541"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4ebdfce2-a2a9-4002-99cb-d85fc45fcea8" name="POST send single reminder" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email</con:endpoint><con:request>{
  "appointmentId": "5a7c9ad57120e09af164b0ce",
  "appointmentTime": 1518763500000,
  "dob": "1517443200000",
  "emrId": "93489",
  "encryptedAppointmentId": "/HD8LDxoodvmSL9pLBMwZKQRmXPTN0zx6RrR2EfmKmO6vEOX73sidA==",
  "firstName": "test",
  "fromEmailAddress": "appointments@medfusion.com",
  "integrationId": "",
  "lastName": "test",
  "locationAddress": "address",
  "locationAddress2": "",
  "locationCity": "cary",
  "locationName": "test",
  "locationPhone": "",
  "locationState": "AL",
  "locationZipcode": "27513",
  "merchantId": 2560801077,
  "middleName": "t",
  "phoneNumber": 9194554883,
  "pmAppointmentId": "",
  "practiceId": 24170454,
  "practiceName": "",
  "timeZoneId": "",
  "toEmailAddress": "jane.rasika@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b42de872-3f44-4106-bb2c-cad78302bfac" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="5522f7e9-c466-406b-b370-bd77253b3d4d" name="Not Contains"><con:configuration><token>EMAIL</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="34fcd5c2-3827-4492-8a98-a390a26dd04c" name="Not Contains 2"><con:configuration><token>TEXT</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST send single reminder without system authorization" id="4f31cb85-5049-42ca-9bdd-6980e3688c09"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4ebdfce2-a2a9-4002-99cb-d85fc45fcea8" name="POST send single reminder without system authorization" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8083/v2/email</con:endpoint><con:request>{
  "appointmentId": "5a7c9ad57120e09af164b0ce",
  "appointmentTime": 1518763500000,
  "dob": "1517443200000",
  "emrId": "93489",
  "encryptedAppointmentId": "/HD8LDxoodvmSL9pLBMwZKQRmXPTN0zx6RrR2EfmKmO6vEOX73sidA==",
  "firstName": "test",
  "fromEmailAddress": "appointments@medfusion.com",
  "integrationId": "",
  "lastName": "test",
  "locationAddress": "address",
  "locationAddress2": "",
  "locationCity": "cary",
  "locationName": "test",
  "locationPhone": "",
  "locationState": "AL",
  "locationZipcode": "27513",
  "merchantId": 2560801077,
  "middleName": "t",
  "phoneNumber": 9194554883,
  "pmAppointmentId": "",
  "practiceId": 24170,
  "practiceName": "",
  "timeZoneId": "",
  "toEmailAddress": "jane.rasika@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="b42de872-3f44-4106-bb2c-cad78302bfac" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>7386dda1-5ed9-4e40-a564-59e733ba21a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="fea5ab18-c56d-46b9-a10b-9cbf36a94e8b" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager v3 endpoints" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="9b18ec86-a76b-44ce-bf68-0a2d736a665f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>invalidAuthorization</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>pssUrl</con:name><con:value>"www.medfusion.com"</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>3544</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="54637132-7161-40cd-8c79-657a7f850d37"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET ALL PRACTICE configurations for system user" id="941b92a1-7dd0-4702-a452-8285cfc5102c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="41cecf93-a858-4bbc-8847-8c4965eb771c" name="GET ALL PRACTICE configurations for system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="916e73d2-de97-4f64-bb16-201a1229d531" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET ALL PRACTICE configurations for staff user" id="606e31fe-762e-48a3-b6bb-bcb0a405bf3c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="41cecf93-a858-4bbc-8847-8c4965eb771c" name="GET ALL PRACTICE configurations for staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="916e73d2-de97-4f64-bb16-201a1229d531" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration -Disable all" id="e8b520d7-9fc0-4c23-aae0-e2c3621a69e5"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration -Disable all" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": false,
  "appointmentRemindersEnabled": true,
  "emailEnabled": true,
  "integrationId": ${Properties#integrationId},
  "notificationsEnabled": true,
  "notifyFiveDaysOut": true,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true,
  "practiceDisplayName": "New Test practice",
  "practiceForms": [
  {
    
    "formTitle": "Real form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
    "practiceId": ${Properties#practiceId}
    
  },

  {
    
    "formTitle": "HIPAA policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Financial policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
    "practiceId": ${Properties#practiceId}
    
  }
  
 
  
],
  "practiceId": ${Properties#practiceId},
  "practiceName": "New test practice",
  "practiceTimezone": "America/Anchorage",
  "precheckEnabled": true,
  "pssEnabled": true,
  "pssUrl": "www.medfusion.com",
  "pushEnabled": false,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="68b9dfbb-0784-4f3e-aede-796a1188b338" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4540b749-1c0c-49be-b86d-420d692efe9c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b44a9-3b81-41bf-a985-36bea1d0a227" name="Match content of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.practiceTimezone}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1726a632-f780-489e-8259-39c8185c0d1d" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d207a3cf-389f-487b-8d43-31db715df4b8" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adb8c13a-a512-49b6-815a-0a88c7ab3a1a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ebea5d5c-3f50-4c92-880e-491d164555c0" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f0471ad-4a2f-49b5-828b-8e6f6dfd99e2" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9f363bf9-97e8-4f90-9dbb-21de5085c8c6" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="51de85cb-6005-40e4-ad70-ea247a47f15c" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e3f254a2-8fa5-4fbe-b5a5-9f07228c7980" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9eb20efb-dfe7-43df-bc3e-07b12eba2fa8" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07cba217-07bd-4962-8a95-e7bc8737c3db" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4d4978e5-458f-4e61-afe3-0eb0ecec83a6" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5b708a1-3c04-4aca-b3c4-79b9913cce0d" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b3e3d-e80d-4248-83ca-aff490e9bbbf" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f68f094-5c73-4d5d-9b5b-794b4e465994" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e93322aa-51c5-49b6-929c-4edfc81554b6" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v3 practice configurations- Disable all" id="5841dccb-3187-4e17-ae49-22c7c8b260ad"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v3 practice configurations- Disable all" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="884d2a23-55c5-4d04-bee1-624a8a48e917" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e46b7667-5e8e-4b19-8b6f-df41c154ffd5" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration -Disable all#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01fada97-9748-4fd4-b810-054d970fbf1e" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration -Disable all#Response#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5afa34d-c164-4159-a6a5-738613cc9c0c" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bec93eed-525d-4d26-b2d4-637b56027979" name="Check for existence of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Disable all#Response#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ce80ef27-ade5-42b4-b572-2cfb17cab4e6" name="Check for existence of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Disable all#Response#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b0a53e60-319e-4796-b0c6-2fc99f45254c" name="Check for existence of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Disable all#Response#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b53e7d22-1707-4ec5-ba8a-1b2516597cc1" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b159994f-df77-40f1-b38c-467738153f2a" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f38ef510-7ca9-4f73-a484-2049f22ae6a0" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9fa53afd-4339-43e8-a9c8-d18febd84d48" name="Check for existence of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b65fdccd-2c0b-48a6-a028-fe0956c2d82e" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d3a3feca-59e5-4db8-8c8a-d1d8807aa01c" name="Check for existence of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Disable all#Response#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19fe9eb9-634f-41b4-bed6-7d47ff21e7d7" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${PUT practiceConfiguration -Disable all#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fceefd05-5502-4ce7-99ff-bd65f688e97d" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Disable all#Response#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ab87c19d-1689-4739-a738-6c3e2c2a7612" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4b7017f5-d1e5-4931-b12e-e7fe2bdcd8a2" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecc70214-7c23-49f8-955d-a1dd383992b2" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="942a5732-e169-4eb3-8258-123bc04cf1b6" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ea2ffb54-082f-4f38-93f1-981e96777b4d" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT practiceConfiguration -Disable all#Response#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="45e64865-5999-4656-bd43-02b10cd608d2" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT practiceConfiguration -Disable all#Response#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0756dd9b-7d0b-45d7-9a4f-98df04945821" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2d5170e9-7d6e-4ad9-b32b-431e68d71f99" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT practiceConfiguration -Disable all#Response#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5e1e594c-b990-4f7a-b3c5-4bb264db1529" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Disable all#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a55b8e66-63b1-4c8a-a9ac-cb7a0915c433" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT practiceConfiguration -Disable all#Response#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="852b615a-3f4d-4a83-b000-57f4fe4f7131" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT practiceConfiguration -Disable all#Response#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6887b41b-adc0-4ab7-8464-c61b4057f9a9" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration -Enable all" id="28341e5d-21c4-4204-b6bb-8fd8ffe5ebbf"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration -Enable all" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": true,
  "appointmentRemindersEnabled": true,
  "emailEnabled": true,
  "integrationId": ${Properties#integrationId},
  "notificationsEnabled": true,
  "notifyFiveDaysOut": true,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true,
  "practiceDisplayName": "New Test practice",
  "practiceForms": [
  {
    
    "formTitle": "Real form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
    "practiceId": ${Properties#practiceId}
    
  },

  {
    
    "formTitle": "HIPAA policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Financial policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
    "practiceId": ${Properties#practiceId}
    
  }
  
 
  
],
  "practiceId": ${Properties#practiceId},
  "practiceName": "New test practice",
  "practiceTimezone": "America/Anchorage",
  "precheckEnabled": true,
  "pssEnabled": true,
  "pssUrl": "www.medfusion.com",
  "pushEnabled": true,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="68b9dfbb-0784-4f3e-aede-796a1188b338" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4540b749-1c0c-49be-b86d-420d692efe9c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b44a9-3b81-41bf-a985-36bea1d0a227" name="Match content of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceTimezone}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1726a632-f780-489e-8259-39c8185c0d1d" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d207a3cf-389f-487b-8d43-31db715df4b8" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adb8c13a-a512-49b6-815a-0a88c7ab3a1a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ebea5d5c-3f50-4c92-880e-491d164555c0" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f0471ad-4a2f-49b5-828b-8e6f6dfd99e2" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9f363bf9-97e8-4f90-9dbb-21de5085c8c6" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="51de85cb-6005-40e4-ad70-ea247a47f15c" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e3f254a2-8fa5-4fbe-b5a5-9f07228c7980" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9eb20efb-dfe7-43df-bc3e-07b12eba2fa8" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07cba217-07bd-4962-8a95-e7bc8737c3db" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4d4978e5-458f-4e61-afe3-0eb0ecec83a6" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5b708a1-3c04-4aca-b3c4-79b9913cce0d" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b3e3d-e80d-4248-83ca-aff490e9bbbf" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f68f094-5c73-4d5d-9b5b-794b4e465994" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e93322aa-51c5-49b6-929c-4edfc81554b6" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration for invalid staff" id="615ba551-2064-4008-ac84-1a02c827e5ce"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration for invalid staff" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": true,
  "appointmentRemindersEnabled": true,
  "emailEnabled": true,
  "integrationId": ${Properties#integrationId},
  "notificationsEnabled": true,
  "notifyFiveDaysOut": false,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true,
  "practiceDisplayName": "New Test practice",
  "practiceForms": [
  {
    
    "formTitle": "Real form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
    "practiceId": ${Properties#practiceId}
    
  },

  {
    
    "formTitle": "HIPAA policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Financial policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
    "practiceId": ${Properties#practiceId}
    
  }
  
 
  
],
  "practiceId": ${Properties#practiceId},
  "practiceName": "New test practice",
  "practiceTimezone": "America/New_York",
  "precheckEnabled": true,
  "pssEnabled": true,
  "pssUrl": "www.medfusion.com",
  "pushEnabled": false,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v3 practice configurations- Enable all" id="f99f5570-423f-4352-bf6d-0f1510a32f6a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v3 practice configurations- Enable all" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="884d2a23-55c5-4d04-bee1-624a8a48e917" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e46b7667-5e8e-4b19-8b6f-df41c154ffd5" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration -Enable all#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01fada97-9748-4fd4-b810-054d970fbf1e" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration -Enable all#Response#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5afa34d-c164-4159-a6a5-738613cc9c0c" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration -Enable all#Response#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bec93eed-525d-4d26-b2d4-637b56027979" name="Check for existence of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ce80ef27-ade5-42b4-b572-2cfb17cab4e6" name="Check for existence of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b0a53e60-319e-4796-b0c6-2fc99f45254c" name="Check for existence of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b53e7d22-1707-4ec5-ba8a-1b2516597cc1" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b159994f-df77-40f1-b38c-467738153f2a" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f38ef510-7ca9-4f73-a484-2049f22ae6a0" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9fa53afd-4339-43e8-a9c8-d18febd84d48" name="Check for existence of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b65fdccd-2c0b-48a6-a028-fe0956c2d82e" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d3a3feca-59e5-4db8-8c8a-d1d8807aa01c" name="Check for existence of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19fe9eb9-634f-41b4-bed6-7d47ff21e7d7" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${PUT practiceConfiguration -Enable all#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fceefd05-5502-4ce7-99ff-bd65f688e97d" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Enable all#Response#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ab87c19d-1689-4739-a738-6c3e2c2a7612" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4b7017f5-d1e5-4931-b12e-e7fe2bdcd8a2" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecc70214-7c23-49f8-955d-a1dd383992b2" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="942a5732-e169-4eb3-8258-123bc04cf1b6" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ea2ffb54-082f-4f38-93f1-981e96777b4d" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT practiceConfiguration -Enable all#Response#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="45e64865-5999-4656-bd43-02b10cd608d2" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT practiceConfiguration -Enable all#Response#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0756dd9b-7d0b-45d7-9a4f-98df04945821" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2d5170e9-7d6e-4ad9-b32b-431e68d71f99" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5e1e594c-b990-4f7a-b3c5-4bb264db1529" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a55b8e66-63b1-4c8a-a9ac-cb7a0915c433" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT practiceConfiguration -Enable all#Response#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="852b615a-3f4d-4a83-b000-57f4fe4f7131" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6887b41b-adc0-4ab7-8464-c61b4057f9a9" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v3 practice configurations for invalid staff" id="68653e21-5d8c-44be-871f-aede4ccbb060"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v3 practice configurations for invalid staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT practiceConfiguration -Disable pss" id="dbd72ae9-9f4d-40e0-a24e-6cd71381878e"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="d1460068-36c8-4522-8727-e72f041891bd" name="PUT practiceConfiguration -Disable pss" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
  "active": true,
  "appointmentRemindersEnabled": true,
  "emailEnabled": true,
  "integrationId": ${Properties#integrationId},
  "notificationsEnabled": true,
  "notifyFiveDaysOut": true,
  "notifyOneDayOut": true,
  "notifyThreeDaysOut": true,
  "practiceDisplayName": "New Test practice",
  "practiceForms": [
  {
    
    "formTitle": "Real form",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
    "practiceId": ${Properties#practiceId}
    
  },

  {
    
    "formTitle": "HIPAA policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
    "practiceId": ${Properties#practiceId}
    
  },
  {
    
    "formTitle": "Financial policy",
    "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
    "practiceId": ${Properties#practiceId}
    
  }
  
 
  
],
  "practiceId": ${Properties#practiceId},
  "practiceName": "New test practice",
  "practiceTimezone": "America/Anchorage",
  "precheckEnabled": true,
  "pssEnabled": false,
  "pssUrl": "www.medfusion.com",
  "pushEnabled": true,
  "textEnabled": true
}</con:request><con:assertion type="Valid HTTP Status Codes" id="181ffb96-dc05-4d6d-ae91-9854de8c48e9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="68b9dfbb-0784-4f3e-aede-796a1188b338" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4540b749-1c0c-49be-b86d-420d692efe9c" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b44a9-3b81-41bf-a985-36bea1d0a227" name="Match content of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceTimezone}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1726a632-f780-489e-8259-39c8185c0d1d" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d207a3cf-389f-487b-8d43-31db715df4b8" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="adb8c13a-a512-49b6-815a-0a88c7ab3a1a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ebea5d5c-3f50-4c92-880e-491d164555c0" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f0471ad-4a2f-49b5-828b-8e6f6dfd99e2" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9f363bf9-97e8-4f90-9dbb-21de5085c8c6" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="51de85cb-6005-40e4-ad70-ea247a47f15c" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e3f254a2-8fa5-4fbe-b5a5-9f07228c7980" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9eb20efb-dfe7-43df-bc3e-07b12eba2fa8" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="07cba217-07bd-4962-8a95-e7bc8737c3db" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4d4978e5-458f-4e61-afe3-0eb0ecec83a6" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5b708a1-3c04-4aca-b3c4-79b9913cce0d" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT practiceConfiguration -Disable pss#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="518b3e3d-e80d-4248-83ca-aff490e9bbbf" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5f68f094-5c73-4d5d-9b5b-794b4e465994" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Enable all#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e93322aa-51c5-49b6-929c-4edfc81554b6" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a3e851d4-fd78-4870-97dc-c4d2956d7ba7" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v3 practice configurations- GET PSS disabled status" id="8226d913-3d56-4852-8126-41332e3ddb73"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="79b31da7-fb21-4cf5-b7d6-8fbd30665dad" name="GET v3 practice configurations- GET PSS disabled status" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:82/practice-settings-manager/v3/configuration/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4990fc7f-e40d-4f71-86a1-8832904b417c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="884d2a23-55c5-4d04-bee1-624a8a48e917" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e46b7667-5e8e-4b19-8b6f-df41c154ffd5" name="Match content of [practiceName]"><con:configuration><path>$.practiceName</path><content>${PUT practiceConfiguration -Enable all#Response#$.practiceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="01fada97-9748-4fd4-b810-054d970fbf1e" name="Match content of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>${PUT practiceConfiguration -Enable all#Response#$.practiceDisplayName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5afa34d-c164-4159-a6a5-738613cc9c0c" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT practiceConfiguration -Enable all#Response#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bec93eed-525d-4d26-b2d4-637b56027979" name="Check for existence of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ce80ef27-ade5-42b4-b572-2cfb17cab4e6" name="Check for existence of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b0a53e60-319e-4796-b0c6-2fc99f45254c" name="Check for existence of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b53e7d22-1707-4ec5-ba8a-1b2516597cc1" name="Check for existence of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b159994f-df77-40f1-b38c-467738153f2a" name="Check for existence of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f38ef510-7ca9-4f73-a484-2049f22ae6a0" name="Check for existence of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9fa53afd-4339-43e8-a9c8-d18febd84d48" name="Check for existence of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b65fdccd-2c0b-48a6-a028-fe0956c2d82e" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d3a3feca-59e5-4db8-8c8a-d1d8807aa01c" name="Check for existence of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="19fe9eb9-634f-41b4-bed6-7d47ff21e7d7" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${PUT practiceConfiguration -Enable all#Response#$.integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fceefd05-5502-4ce7-99ff-bd65f688e97d" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Enable all#Response#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ab87c19d-1689-4739-a738-6c3e2c2a7612" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT practiceConfiguration -Disable pss#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4b7017f5-d1e5-4931-b12e-e7fe2bdcd8a2" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT practiceConfiguration -Disable pss#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ecc70214-7c23-49f8-955d-a1dd383992b2" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT practiceConfiguration -Disable pss#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="942a5732-e169-4eb3-8258-123bc04cf1b6" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ea2ffb54-082f-4f38-93f1-981e96777b4d" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT practiceConfiguration -Enable all#Response#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="45e64865-5999-4656-bd43-02b10cd608d2" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT practiceConfiguration -Enable all#Response#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0756dd9b-7d0b-45d7-9a4f-98df04945821" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT practiceConfiguration -Disable pss#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2d5170e9-7d6e-4ad9-b32b-431e68d71f99" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5e1e594c-b990-4f7a-b3c5-4bb264db1529" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT practiceConfiguration -Enable all#Response#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a55b8e66-63b1-4c8a-a9ac-cb7a0915c433" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT practiceConfiguration -Enable all#Response#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6887b41b-adc0-4ab7-8464-c61b4057f9a9" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7063a57f-736b-43fd-ae1a-dfb2b5d8fbb2" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT practiceConfiguration -Disable pss#Response#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="80b3bf90-1c37-42ba-9c3d-7c565b3467be" name="Match content of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>${PUT practiceConfiguration -Disable pss#Response#$.pssUrl}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6eb45f9b-9d51-4fa2-b0d1-dc07913fa006</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>941b92a1-7dd0-4702-a452-8285cfc5102c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>54637132-7161-40cd-8c79-657a7f850d37</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>606e31fe-762e-48a3-b6bb-bcb0a405bf3c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>615ba551-2064-4008-ac84-1a02c827e5ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e8b520d7-9fc0-4c23-aae0-e2c3621a69e5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5841dccb-3187-4e17-ae49-22c7c8b260ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="d029c59f-55f0-4701-9fd3-90da540f7dba" discardOkResults="true" failOnError="false" failTestCaseOnErrors="false" keepSession="false" name="Provider images for system user-JPEG basic testing" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="properties" name="Properties" id="fca6a8fc-4eaa-4ace-9555-bd14c0eb9565"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>providerId</con:name><con:value>3ba9s91c3skc55z3a26vq1u6ulfmxl9w633o27op97on2kn4h2</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>providerIdWithQuotes</con:name><con:value>"3ba9s91c3skc55z3a26vq1u6ulfmxl9w633o27op97on2kn4h2"</con:value></con:property><con:property><con:name>imagedataonemb</con:name><con:value></con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="4473eabc-8622-4cde-9324-dbc17890db63"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Delete provider info and image" id="cbb212b0-9915-4a70-a4aa-17a7c0eb1c67"><con:settings/><con:config method="DELETE" xsi:type="con:HttpRequest" id="a00149ca-fec6-4e7d-8d61-7a69e8593a12" name="Delete provider info and image" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="311f1c6f-f112-4569-b9a7-2e1c6ccd074d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET Provider info after delete" id="533ebd79-2166-45aa-a938-61217ee57981"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7c65f947-ac16-4f07-a542-5910d5f94a96" name="GET Provider info after delete" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="c049ab7d-ff2f-4e58-b172-be9467960813" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="cdce7c5e-6fb6-462c-9632-b8cd27655762"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
randomValue = generator( (('1'..'9')+('a'..'z')+('1'..'9')+('1'..'9')).join(), 50 )
log.info randomValue
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("providerId",randomValue )
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("providerIdWithQuotes",'"'+randomValue+'"' )
</script></con:config></con:testStep><con:testStep type="httprequest" name="Get info for all providers for a practice" id="3adeaa7c-7c5c-48c5-bc9f-b5893e22eebe"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d7738cab-73f2-495e-920e-f7dba4f1bd81" name="Get info for all providers for a practice" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="606d9d51-5e05-427e-a65a-a013a4b4f3a6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script assertion" id="9560d810-5c79-4db0-993b-48e414c28e44"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["Get info for all providers for a practice"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def ids= jsonSlurper.practiceId
log.info ids
for(int i=0; i&lt;ids.size();i++){
	def practiceids=ids[i]
	assert practiceids.equals(20624)
	
}

def providers= jsonSlurper.providerId
log.info providers
for(int i=0; i&lt;providers.size();i++){
	def practiceproviders=providers[i]
	assert practiceproviders!=null
	
}</script></con:config></con:testStep><con:testStep type="httprequest" name="Get info for all providers for a practice without security" id="7a648957-246d-48c1-b813-f97b9022780c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="d7738cab-73f2-495e-920e-f7dba4f1bd81" name="Get info for all providers for a practice without security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="606d9d51-5e05-427e-a65a-a013a4b4f3a6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb" id="ef67a489-faff-4fef-b385-b265ed358e02"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7f8fd439-b40a-40e1-893d-c4421f6c4a02" name="POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider</con:endpoint><con:request>{
   "cellPhoneNumber": 9194554647,
    "emailAddress": "test@example.com",
    "firstName": "Test",
    "lastName": "Provider1",
    "middleName": "",
    "officeFaxNumber": "9194554748",
    "officePhoneNumber": "9897881718",
    "practiceId":  ${Properties#practiceId},
    "providerId":  ${Properties#providerIdWithQuotes},

    "providerImage": {

    "fileName": "provider5.jpg",
    "data": "",
    "contentType": "image/jpeg"
  },
    "title": "No title"
  
}</con:request><con:assertion type="Valid HTTP Status Codes" id="f2324987-6748-4362-8127-4c7a42a63f8b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cf7d9865-2cd8-4de0-b2ba-ad037f28e4f0" name="Match content of [fileName]"><con:configuration><path>$.providerImage.fileName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.providerImage.fileName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e6219a59-da99-4dbe-a5bb-fe7f63869269" name="Match content of [firstName]"><con:configuration><path>$.firstName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="762c2c39-765f-4bd6-86f7-cdeb977f116e" name="Match content of [middleName]"><con:configuration><path>$.middleName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.middleName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="329e7a64-e5f3-46e2-ada3-abdc2afc72b2" name="Match content of [lastName]"><con:configuration><path>$.lastName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="69445b8a-e098-44e1-8b8c-e240b0c9a259" name="Match content of [emailAddress]"><con:configuration><path>$.emailAddress</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.emailAddress}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e3663f07-e4cc-4c4a-895b-92fad315306e" name="Match content of [officePhoneNumber]"><con:configuration><path>$.officePhoneNumber</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.officePhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="31cbe4dd-6838-4edf-b892-9f045323ba34" name="Match content of [officeFaxNumber]"><con:configuration><path>$.officeFaxNumber</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.officeFaxNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c7638776-9074-4402-8e4b-2c5af7adb1fc" name="Match content of [cellPhoneNumber]"><con:configuration><path>$.cellPhoneNumber</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.cellPhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="40cd6923-4b0b-42b5-92f0-05475b45a2d9" name="Match content of [contentType]"><con:configuration><path>$.providerImage.contentType</path><content>image/jpeg</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fb5be0ce-70ef-4fe6-938e-c6bdde751cc0" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="87ea831b-0f69-42b3-86cc-387751a92999" name="Match content of [providerId]"><con:configuration><path>$.providerId</path><content>${Properties#providerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f6749721-fdde-4f9b-9afc-603d82cb15ed" name="Match content of [data]"><con:configuration><path>$.providerImage.data</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.providerImage.data}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fb19af1e-0ab1-4b33-b677-1021b3d2b77e" name="Match content of [title]"><con:configuration><path>$.title</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.title}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST uploadProviderInfoAndImage - Create provider with existing providerId" id="d2123a48-8816-41d8-b86f-04101f22ccc3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7f8fd439-b40a-40e1-893d-c4421f6c4a02" name="POST uploadProviderInfoAndImage - Create provider with existing providerId" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider</con:endpoint><con:request>{
   "cellPhoneNumber": 9194554647,
    "emailAddress": "test@example.com",
    "firstName": "Test",
    "lastName": "Provider1",
    "middleName": "",
    "officeFaxNumber": "9194554748",
    "officePhoneNumber": "9897881718",
    "practiceId":  ${Properties#practiceId},
    "providerId":  ${Properties#providerIdWithQuotes},

    "providerImage": {

    "fileName": "provider5.jpg",
    "data": "",
    "contentType": "image/jpeg"
  },
    "title": "No title"
  
}</con:request><con:assertion type="Valid HTTP Status Codes" id="f2324987-6748-4362-8127-4c7a42a63f8b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET Provider info after info/image upload" id="2612b102-cde4-4009-980d-d5fb1745c7c1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7c65f947-ac16-4f07-a542-5910d5f94a96" name="GET Provider info after info/image upload" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="22cceb19-8a08-4206-9bd6-6c87dbbf3b50" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8880a4c-41b0-4081-955b-881c07d0cf30" name="Match content of [providerId]"><con:configuration><path>$.providerId</path><content>${Properties#providerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cef201e1-6668-4a76-8566-afd9101680c2" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dcf6cfb5-ecc7-4e69-aee0-0a5aadc0dcbe" name="Match content of [title]"><con:configuration><path>$.title</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.title}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="89dd745b-9dc5-44ce-b646-ab291a14567d" name="Match content of [middleName]"><con:configuration><path>$.middleName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.middleName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a60f197b-baee-4ad6-a4a0-1ca9713027f4" name="Match content of [lastName]"><con:configuration><path>$.lastName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5672defd-aa8b-421b-aa0a-202eac150500" name="Match content of [firstName]"><con:configuration><path>$.firstName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7fcaa3d0-d1c2-4759-a0e3-c3daf5fbf2b7" name="Match content of [cellPhoneNumber]"><con:configuration><path>$.cellPhoneNumber</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.cellPhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="94d4ea2c-9a39-4135-858d-632ed0150dcd" name="Match content of [officeFaxNumber]"><con:configuration><path>$.officeFaxNumber</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.officeFaxNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f2b498e2-7056-4fc9-b18a-b25edae04fff" name="Match content of [officePhoneNumber]"><con:configuration><path>$.officePhoneNumber</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#RawRequest#$.officePhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b6190cb4-bcb6-4c95-b727-b20bfb8c7c03" name="JsonPath Match"><con:configuration><path>$.providerImage.fileName</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#Response#$.providerImage.fileName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="65650e6d-5dba-44cb-ac6f-0ffdc21af94b" name="JsonPath Match 2"><con:configuration><path>$.providerImage.contentType</path><content>image/jpeg</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5394b8f2-3219-4f29-8b57-168e97c71cf7" name="JsonPath Match 3"><con:configuration><path>$.providerImage.data</path><content>${POST uploadProviderInfoAndImage (Simple jpeg image)-less than 1mb#Response#$.providerImage.data}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get provider info and image after 1 mb image post" id="7ae60751-ef2f-4c00-a1e8-c5908fcdcb36"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="87c6677d-79f1-44f5-b9d9-de54b0b919c4" name="Get provider info and image after 1 mb image post" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}/image</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7fe9992e-c2a4-4179-8320-7de5a02638a0" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="260d8b96-e264-4ff8-8e4f-082bfcdee77d" name="Check for existence of [data]"><con:configuration><path>exists( //data)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ce8269b1-18ec-4be7-94a5-b6e5fb81ab0f" name="Match content of [@contentType]"><con:configuration><path>//data[1]/@contentType</path><content>image/jpeg</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="8c54373e-d1f1-44e3-b740-f34a220db20f" name="Check for existence of [@contentLength]"><con:configuration><path>exists( //data/@contentLength)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="36ec63ae-a416-4db5-9f81-ba838ff4a294" name="Check for existence of [data]"><con:configuration><path>exists( //data)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>thumbnail</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default></con:parameter><con:parameter><con:name>size</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get provider info and image thumbnail 64 jpeg" id="54a221dc-7ed4-494a-a5cc-585aa17cbd1e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9c4507e4-cad6-498c-977a-87c5cac33bae" name="Get provider info and image thumbnail 64 jpeg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}/image</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="8db15ae1-9b34-4346-a9d9-b0ddb75b7e23" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="c324b44d-a84f-4e7c-997c-9e5adcd26dd0" name="Match content of [@contentType]"><con:configuration><path>//data[1]/@contentType</path><content>image/jpeg</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="937f57d4-3aa6-40fb-8d38-d432a3a07d02" name="Check for existence of [@contentLength]"><con:configuration><path>exists( //data/@contentLength)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" id="ba6d9dac-1467-47a9-a05c-ca7de1f8da14" name="Check for existence of [data]"><con:configuration><path>exists( //data)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>thumbnail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter><con:parameter><con:name>size</con:name><con:value>small</con:value><con:style>QUERY</con:style><con:default>small</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get provider info and image thumbnail 128 jpeg" id="289d8e5a-707f-4c3f-804a-76deb7449bc6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9c4507e4-cad6-498c-977a-87c5cac33bae" name="Get provider info and image thumbnail 128 jpeg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}/image</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="8db15ae1-9b34-4346-a9d9-b0ddb75b7e23" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>thumbnail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter><con:parameter><con:name>size</con:name><con:value>medium</con:value><con:style>QUERY</con:style><con:default>medium</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get provider info and image thumbnail 256 jpeg" id="9e694558-f936-421c-a924-e4f59c9c84c8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9c4507e4-cad6-498c-977a-87c5cac33bae" name="Get provider info and image thumbnail 256 jpeg" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}/image</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="8db15ae1-9b34-4346-a9d9-b0ddb75b7e23" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>thumbnail</con:name><con:value>false</con:value><con:style>QUERY</con:style><con:default>false</con:default></con:parameter><con:parameter><con:name>size</con:name><con:value>large</con:value><con:style>QUERY</con:style><con:default>large</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET Provider info after info/image upload without security" id="8741e9b9-dbdc-4782-83c2-012bbfaac841"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7c65f947-ac16-4f07-a542-5910d5f94a96" name="GET Provider info after info/image upload without security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="22cceb19-8a08-4206-9bd6-6c87dbbf3b50" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="update provider info and image PUT" id="63dee682-d26e-475e-a263-c89acc8dcf12"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="b4547b24-3701-472c-9f7b-727623ec2265" name="update provider info and image PUT" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request>{
  "cellPhoneNumber": 1111111111,
  "emailAddress": "test1234@example.com",
  "firstName": "Provider",
  "middleName" :"update",
  "lastName" : "Test",
  "officeFaxNumber": 1111111111,
  "officePhoneNumber": 1111111111,
  "practiceId": ${Properties#practiceId},
  "providerId": ${Properties#providerIdWithQuotes},
   "providerImage": {
    "contentType": "image/jpeg",
    "data": "",
    "fileName": "update1mbphoto"
  },
  "title" : "Update provider info"

}</con:request><con:assertion type="Valid HTTP Status Codes" id="d8e3c3d4-86ec-47f8-b5da-6c23726ce477" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [practiceId]" id="dd1190b7-971d-4688-965c-c6d41c562675"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [providerId]" id="5229dde8-e693-43b3-b197-2c39fe45b6aa"><con:configuration><path>$.providerId</path><content>${Properties#providerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [emailAddress]" id="958fe42d-e18d-435a-93fe-fae32cce2157"><con:configuration><path>$.emailAddress</path><content>${update provider info and image PUT#RawRequest#$.emailAddress}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [officePhoneNumber]" id="3d565455-4333-4beb-a624-c3f218a01441"><con:configuration><path>$.officePhoneNumber</path><content>${update provider info and image PUT#RawRequest#$.officePhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [officeFaxNumber]" id="f22ada63-f4b7-4248-8a29-89add97785de"><con:configuration><path>$.officeFaxNumber</path><content>${update provider info and image PUT#RawRequest#$.officeFaxNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [cellPhoneNumber]" id="b3864833-030a-4415-9bb0-00aace3d2b32"><con:configuration><path>$.cellPhoneNumber</path><content>${update provider info and image PUT#RawRequest#$.cellPhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [title]" id="cd092da4-fa19-4db4-ad9e-f417afd6bdb5"><con:configuration><path>$.title</path><content>${update provider info and image PUT#RawRequest#$.title}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [firstName]" id="6270efc7-c387-404c-a88d-0dcbad1fa8e3"><con:configuration><path>$.firstName</path><content>${update provider info and image PUT#RawRequest#$.firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [middleName]" id="fa3456ce-a5ec-464c-b2d6-0a741ea0a810"><con:configuration><path>$.middleName</path><content>${update provider info and image PUT#RawRequest#$.middleName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" name="Match content of [lastName]" id="9d02f87c-fb4a-4a0d-8a11-5899d03307ff"><con:configuration><path>$.lastName</path><content>${update provider info and image PUT#RawRequest#$.lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c0b1e858-26e8-4f1a-b53c-d754d921fed3" name="JsonPath Match"><con:configuration><path>$.providerImage.data</path><content>${update provider info and image PUT#RawRequest#$.providerImage.data}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c7515aac-3544-4011-b300-50425145f186" name="JsonPath Match 2"><con:configuration><path>$.providerImage.contentType</path><content>image/jpeg</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fd6be3c4-1766-4fec-9179-6d34a3936d97" name="JsonPath Match 3"><con:configuration><path>$.providerImage.fileName</path><content>${update provider info and image PUT#RawRequest#$.providerImage.fileName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="update provider info without image PUT" id="8f26bf51-9047-4a4e-af55-44939a2301cd"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="b4547b24-3701-472c-9f7b-727623ec2265" name="update provider info without image PUT" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request>{
  "cellPhoneNumber": 1111111111,
  "emailAddress": "test1234@example.com",
  "firstName": "Provider",
  "middleName" :"update",
  "lastName" : "Test",
  "officeFaxNumber": 1111111111,
  "officePhoneNumber": 1111111111,
  "practiceId": ${Properties#practiceId},
  "providerId": ${Properties#providerIdWithQuotes},
   "providerImage": {
    "contentType": "image/jpeg",
    "data": "",
    "fileName": ""
  },
  "title" : "Update provider info "

}</con:request><con:assertion type="Valid HTTP Status Codes" id="d8e3c3d4-86ec-47f8-b5da-6c23726ce477" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="update provider info PUT without security" id="17e88a95-236c-4cfe-a4eb-9eb4be46a8c0"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="b4547b24-3701-472c-9f7b-727623ec2265" name="update provider info PUT without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request>{
  "cellPhoneNumber": 9194644655,
  "emailAddress": "test123@example.com",
  "firstName": "Provider",
  "middleName" :"update",
  "lastName" : "Test",
  "officeFaxNumber": 9297865344,
  "officePhoneNumber": 2344523431,
  "practiceId": ${Properties#practiceId},
  "providerId": ${Properties#providerId},
  "title" : "New title"

}</con:request><con:assertion type="Valid HTTP Status Codes" id="d8e3c3d4-86ec-47f8-b5da-6c23726ce477" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET Provider info after info update" id="7981e466-d76c-46d8-a726-0e80b86efdff"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="7c65f947-ac16-4f07-a542-5910d5f94a96" name="GET Provider info after info update" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="22cceb19-8a08-4206-9bd6-6c87dbbf3b50" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d8880a4c-41b0-4081-955b-881c07d0cf30" name="Match content of [providerId]"><con:configuration><path>$.providerId</path><content>${Properties#providerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cef201e1-6668-4a76-8566-afd9101680c2" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dcf6cfb5-ecc7-4e69-aee0-0a5aadc0dcbe" name="Match content of [title]"><con:configuration><path>$.title</path><content>${update provider info and image PUT#Response#$.title}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="89dd745b-9dc5-44ce-b646-ab291a14567d" name="Match content of [middleName]"><con:configuration><path>$.middleName</path><content>${update provider info and image PUT#Response#$.middleName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a60f197b-baee-4ad6-a4a0-1ca9713027f4" name="Match content of [lastName]"><con:configuration><path>$.lastName</path><content>${update provider info and image PUT#Response#$.lastName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5672defd-aa8b-421b-aa0a-202eac150500" name="Match content of [firstName]"><con:configuration><path>$.firstName</path><content>${update provider info and image PUT#Response#$.firstName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8b610143-fd63-4cbf-9d67-d17a7abba43d" name="Match content of [title]"><con:configuration><path>$.title</path><content>${update provider info and image PUT#Response#$.title}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7fcaa3d0-d1c2-4759-a0e3-c3daf5fbf2b7" name="Match content of [cellPhoneNumber]"><con:configuration><path>$.cellPhoneNumber</path><content>${update provider info and image PUT#Response#$.cellPhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="94d4ea2c-9a39-4135-858d-632ed0150dcd" name="Match content of [officeFaxNumber]"><con:configuration><path>$.officeFaxNumber</path><content>${update provider info and image PUT#Response#$.officeFaxNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f2b498e2-7056-4fc9-b18a-b25edae04fff" name="Match content of [officePhoneNumber]"><con:configuration><path>$.officePhoneNumber</path><content>${update provider info and image PUT#Response#$.officePhoneNumber}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0cbed63d-ebe8-4860-ac9e-354a39e35c31" name="JsonPath Match"><con:configuration><path>$.providerImage.contentType</path><content>image/jpeg</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d6d20584-8115-4b25-888d-304b018c03e5" name="JsonPath Match 2"><con:configuration><path>$.providerImage.fileName</path><content>${update provider info and image PUT#Response#$.providerImage.fileName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="910e6875-d27f-4694-a35f-51ecbc699254" name="JsonPath Match 3"><con:configuration><path>$.providerImage.data</path><content>${update provider info and image PUT#Response#$.providerImage.data}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get provider info and image thumbnail without security" id="742b5fb2-065d-4053-a6f5-70d0f643665d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9c4507e4-cad6-498c-977a-87c5cac33bae" name="Get provider info and image thumbnail without security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}/image</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="8db15ae1-9b34-4346-a9d9-b0ddb75b7e23" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>thumbnail</con:name><con:value>true</con:value><con:style>QUERY</con:style><con:default>true</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Update providerImage PUT without security 2" id="6a3a1a4e-e04c-4e67-ba4d-a4664dba958b"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="92c7253c-ec09-43dd-ba35-173291bc2237" name="Update providerImage PUT without security 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider/${Properties#providerId}</con:endpoint><con:request>{
  "fileName": "6mbimage",
  "imageData": "",
  "mimeType": "image/jpeg",
  "practiceId": ${Properties#practiceId},
  "providerId": ${Properties#providerIdWithQuotes}
}</con:request><con:assertion type="Valid HTTP Status Codes" id="bc320322-122c-44d6-8875-5728dc6b1ba9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:attachment><con:name>umass-google-earth-imagery.jpg</con:name><con:contentType>image/jpeg</con:contentType><con:contentId>umass-google-earth-imagery.jpg</con:contentId><con:url>C:/Users/jrasika/Documents/qa-automation/SoapUI/Precheck/Dev/Datadriven/umass-google-earth-imagery.jpg</con:url><con:id>9777d29c-7e33-470f-82f4-d6966c05cb8c</con:id></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST uploadProviderInfoAndImage without security" id="21232140-8c04-4640-a161-4aa7da701b62"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7f8fd439-b40a-40e1-893d-c4421f6c4a02" name="POST uploadProviderInfoAndImage without security" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8122/apt-provider-images/v1/practice/${Properties#practiceId}/provider</con:endpoint><con:request>{
  "imageInfo": {

    "fileName": "provider5.jpg",
    "imageData": "/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAkGBxIQEBUQDxAVFhAVFRUVFRAWFRUQFhUVFRUWFhcXFhUYHSggGRolHRcWIjEhJSktLy4uFx8zODMtNygtLisBCgoKDg0OGxAQGi0lICUtLS0vLSstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf/AABEIAMIBAwMBEQACEQEDEQH/xAAbAAACAgMBAAAAAAAAAAAAAAAAAQUGAgMEB//EAEIQAAIBAwIDBQQHBQcDBQAAAAECAwAEERIhBTFBBhMiUWEUMnGBB0JSYpGhsRUjJENyFjNTc4LB0WOSojVEsuHw/8QAGwEBAAIDAQEAAAAAAAAAAAAAAAEFAwQGAgf/xAA1EQACAgIBAwMDAgQFBAMAAAAAAQIDBBEFEiExE0FRImFxBjIUobHRQoHB4fAjM5HxFSRD/9oADAMBAAIRAxEAPwCHq+KUKAyoB0ICpA6kgyAoAoBgVOgOpIHQDAoB1JA6gDqQGKkDxQgdSB4oAxQgeKAKAKAdAFAFAFAFAFAFAFAKgCgI6sBmHQGVCAqQOhAxUgdAPFSgOpIHQDoQYvKqgszAKASSTgADqahtJbZKTb0iNW8lm8UZSKLo7gu7DzCZAUfE59KwKVk1uPZfczuEIPUu7OOGW8mD+zTIYtwsroFLMOegKMaemSKxJ3T30vt/zwZZKmGupd/g6bC37wENcXCzKcOhdMqeYIAXSVPMHG9e611LvJp/k82PpfaKa/B099LAR3zCSEnHfAaWQnYd4o2K/eGMdR1r2pzh+57XyeOmNn7ez+CUxW0aw6EBigHQBQBigHimgGKnQHigDFCNhig2GKDYYoNixQkMVGgGKaAsU0COrAZh4oQOpA6EDqQOgGKAdSQOpAycb0Bgqat25dB/zQgh+NSITGjkLEzkvyGY41LHJ9SFFa+Q/EX4fk2cdPvJeR3gnmjVYYzHbzSJCJn8LkSE5McfPTgHc4z0qsyuVr1KEPZbN2jAkmpzLbwTsHC2BNJNIqgDBcxLsNgEjwMfHNcnmc/kJdMXot44NUe7WyxL2J4cBj2GH4ldR+ZJyapny+Y3v1GZv4ev4OS9+j2wkVlSN4dQIJhldBg/cJKn5itmnnsyHmXUvueJYlb9iFvOyl5aLmBva4EH93jRdKo+yPdlwPgfjXWcZ+pIXahPsVWTxv8AiicVrcLIgeM5U/LBHMEdCPI11ddkZrqiUs4Sg9SNuK9ngdSB4oAxQjY6DYYqQGKAdCAoAoAoBYoTsKgBihIsUI2RoFa5nGKEDqQMVJA6AeKAdeiB0A8UBruWAXf0oQck1wW9B5f81IRhwXgjXM8N3IitbKzhEPM4U6ZSOqlgAB6A1yfL8lGTlXF90jocDEcEpNFzvbHvjGM4KSpIOuSudvnmuZhf6fU37potZw6tfYt8EQRQo6VQzm5SbZ7NleQFAMHrUxk4vaIaTKZ264QIT+0oBhSQLyMDYgkKtwB0ZTjV5qc/VrvuA5VvUZFNn4nUtoh8V2xzz7DxQgeKEBXrQCmgPFAGKAMUAYoAxQBigDFAFNAVRoBTQIytYzjqQOpIHQDFAOpIHUgYoDIUII66l1N6DlUg4btC+iFCQ0zrECOgb3m+ShjWnyF/o0ORtYdXqWpHokESoqogwigKqjkABgD8K+bTm5ycn7nXRWlpHXYDMq/H9N6w3P8A6bJLFVQAoAoAoDNI1cNFIMxyKUZTyKsCCPwJ/GrDjbnXdr5MN0dxPK7CJo1aBzl4JJICTzPdMVVj8V0n519bwbfVpUmcjlw6LWdNbejWGKkBigHigHihAYoAxQBigDFAGKAMUAsUJDFALFCCLrVNgdSBipIHQGQqQOpIGKAyAoQa7hsKakEZUkGfDVzfWoPLVKfmImx+pqj55tYxa8Uv+qXyuDOlN9icSL/UKx3L6GCx1UAKAKAKAyQ4IPrXuqXTNP7nmS2ihdqrF7a9kmZc293IpjlByFmESqY3HQnuyQeR3HMV9Q4POrlBV7Od5GiTfX8HIBXSFKPFAPFAGKAMUICpA6AKAKAKAVAFQSGKAWKAiq1jYGKkgdAMUBkK9EDFAMUIMqkGm8HgP/7rUgjgKEBE4S4tpDyWZVJ8hKrRfq61VczX14six42fTcX+vnh1Iu9CeMkAL4iScAAb5J6CnS5/Sg2l3ZK8Ohu+IgSQN7LZn3J2TXcTDo8cb+GJD0ZwSeeBsas8Lgq4Lqv7v49ivtym3qJJ/wBhUx/6hf6/t+0Dn56NGj5acVbfwGNrXpowerP5IzisV1w0d7O/tVkPfmEYjuIF+3IqeGWMdSoUgb4I5VWbwVcouVPZ/HsZ68qS/cY8PW64l47Vxb2W4W6ZO8mn6aoY28Kp5OwOeYGN684XBQjFSv7v49hZkt9okp/Yc424nfa/t64D/wCBi04+VWr47F1r00YPWn8lQ7fQX1vAlvc6JrV7iAi/Ve6aLRIGCzRDIBYgKHUhd9wNs5cHAqotXR2W/B4vtlKt7I3Fdgc2FCB1IDFAOgCgDFAOpAqAKAKgBQCxQBQEQK1TZHU9kQcqcSRslBI6DnIkUkiDHPxqpFaks6iMulyRsrEta3o6+G2dxdKssJiSJ/cLBpXccgSqsoT4ZJ8wOVVOZz0KJOKj4N+ji+uPVJm3iFnPaOiXapiQ4jnjJMbNjOhg26PjOBuDg4NbHGc1Tm7S7P4NbLwJUra7oQFXZXmQqSBipBjKuQR6VJBFgUBov4y0TBfexlf6l8S/mBWDIr663H7GWifRYmX2wuhNFHKvKRFcf6gD/vXzK6DhY4s7OEuqKZi1mLq7tbJt4pXeSYfaht1DlD6M5jB9CaseKqTm5v2NbLlqKXyX7tj2st+EwLPch9DOI1WNQzEkE8iQAAATzq+K8mrK5WaNJYzlJFV1OCMqwDA4PLYigNjqCCCMg7EHcEeRoCsdg07lbmyzlLS6eKLcnEMiRzxpv9kS6R6KKAtNAVCXtFa8Qu7vgbxSa1hPeMyju2VlTOk5yCO8XBIHLI6UB5rwh2aCMuctoUM3mQME/PGa6PHk5VRb+ChyElY0jsrMYQxUkDxQBigHigOS7uyrrDEmudwSqZ0hVHN3b6q/mTsK0c3OrxIdU33+DbxMSeRLS8GfsV6PEBBJ5xKJI2/0uxIJ+IHxFUNf6ni56lHsWs+FSjtS7nJFx62YD98qnkQ3h0t1VjyDema6KGbTLX1eSoliWx32JMVsmuGKkgWKAMUAsUBW5L3HLGB1Najeu5tJbOeGdJ5YxOWSzJJaUq6xSMMaYu9xpwSck5wQMdapOSzX6bhS9v8AmWmFjal1WI9i4SsYiXuwAAAMAAYwPTpXzbKdnqPrbOgWtfYqXaKWPh14kiA93chyYI1LsZ49JDpGu/iBIbplQT1q3w1PMx3GfmPu/h/2MDkq5/Zm7i3G1u7Z4ZuHXqxupHeCOJyjc1cKshbUrAEbdKjFxJY96nC6O192RY+uOnF6Klwe976IFtpVGmRMFSrjY5U7jzr6Vj3K2CkmctkVOuejvrZMIxQDFSQRc64Yj1oQcHEb8QaCy5Vm0k/ZGCc46j/asF1yr1teTPTU7N6fgluFXzrw/uYn0yi59lR8A6Q8gYMB1xGxPyri83His2UpLsk2dJRY3QtefBN9m+LtDcWtxcHxQTS2dy/IATAKkhHQFhA3oHNesPprtcY+JLaF25QTfldj2HiXDYblO7uYY5Y8g6JEWRcjkcMOe9WhqHUqgDAGANgOWKAwnmVFZ3YKqgszE4AAGSSegAoDzjs1x67PtNzBw8st3cGeKaWeO3jMPdxxRHHikyUjDY0fWrVtzKK3qUkZI1yfhEsLniz+Lv7BD0gEU8wPo0pkU/MJ8q1lytDekz36Ekjg4p24QWMrJEsfFXd7T2fZmE6Ddy2MmFVYOGO2CBzNWlcXY0o+5rTkoLbKhZWwiiSJeSKqg+ekYzXTVw6IqPwc/ZPrk5G8CvZ4HQDoDmvLjSMDmfyoCIurspjGpndgqIvvMx5AeXx5DFYMnIhRW5zM9FErp9MSW4FwPiS65QtqWkbLF3l1BVGFQOqkYX0HMmvn3J8njZFm7HL/ACOqxsedENRSOvivE5Jnj4dLbvbag7zDWGWaOPThIZVxrVi2W2BCqQRvWlRRCuMsmE+v4+2/lfYyuTnJQfYs1pwSPugjKAmMd2AAoXHLTjHKquebY5/S+/yZ9RS0UZ7m2tro2sFzG8DDVGBIrd0+rDwZBxjkVH9Q6V9F4DOtnT05C0/bZzfJ4y6uuv8AzJLFdLopgqAFAKgKzwOyS4vYoZgDbqrSyoeThSqop+7qYEjqFxXMc9k2U47Vfll7xtKnNuR7E8SumgqrRlcFCAVKkcsciMdK+ZKdkZb20zoelNaKZxGT9it3qhm4e+od1uxgl0llRTz7t8EAfVbA5Ha7pUeSh0z7WL3+V/c13un8Eh2X4OxJvLvD3UnvHmEXmIk8kXl6kEnetfPyulehT2iv5/dmSuGu78llaQLjJAydIyQMnBOB5nAO3pVXGuc05JbS8mXaRSfpBtAk9rcqMF2e3kI21AoZYyT1IKPj+o12f6UypNuplRydS6NkNXeHPGQqSDCfOk4ODtv86EHFdHJ3543+IoCK4koLQ5AIMhUg9dUcgxWvek3Dfz/obNDaUtfBu7JWkgvBbneGN/adZOdu6aCNceYzz+5XMczWqVJ/K1/Mu+Pn6qTX5LiOGfxE7MFaCeNA6Hq66lOR5FCoz92qD+I1VFL90X/IslX9T34ZZeB8WvbOJU7s3lsNlIdUuo1GwU6yEmAxsdStjnnnW/TzNO+m3s/n2NOzGkn9JMt21GMLYXpf7Hcov/mzhPzrd/8AkcXW/URh9KfwQ/FGub8YvVW3sti1or95JNg5AnlXwhPONM56sRtVXmcz2cMZNv5M9eN33I7VvoujbD7rAfpXMyx7m9tdzfWkRvFe1lrb+9JqkPuxL4pGPQKg8RPyrax+MyLJLS19zHOyMV3ZQzJDLpvG0pxKa/bvYN1miheGVRE6sA2AI1bOMEmu5452xyVDX0pLv8v3KbLUXTJ+5MYrrjnR00AqQa7mXQuevSgIl3LHJO9AZ9noe8vmY/yYV0jyaZmBPx0pj5muQ/U97SUDouGrWnI9ItbyMSm0GRIkavgjAdGJGpT1AYYPkSPMV8+tpk4ev203r8F31rq6Q4xwlbuPuydLghopR70Uo911+HUciMg7GvfH3TrtSXdPs18o82xTiU2C4n4thJ1McEZ7uSFWx7ROnhlLkfyFYEBevXlirmddPHtuHeT7p/C9v8zFXu1fV4/qWb+z1uIe6lVe6xgphVjA5Yxjaqv+Pvc9wb2Z3COtNFUFqba4ltCxZYwkkTMct3MmoBWPUqyOueoC9a+m8Dnyy8ZSl5RynJY6qs3H3N9XZWhigFQFa7PSBL5NQ2liki9NQKyAfMK34VyvPVt1KS9mdDxc11OJYfo+4vPCPYrgB0iZk1ggPABnQroTloiuCrjPPGNtuU5TErsXrw7Nrf5/3LSiUo/SyZ+kCeKWxa3DKZZ2jjhUHJMneKQ39K41E9ADWlxNVkMj1GtJJ7/B7yH9OvdmadqltoD7XZ3ayRIS6pAZYzpGWZJh4NPM5JHrWdcZVfZ1KxNN9u/f/wAHh3yS8HRwyzluZkvbsKoVf4a1Vu8WEOPFI7jZ5WG2RsBsM86w5mVXVW8ajx7v5PVdcpPrkcn0lJ/CQSYOlL2EseiqySx6j5DVIo+Yqz/S+o27NbkVuDRWRX0c5cYqQKYZU4oQc1+nJuvKgI650gAsuohl0KOZkJwgX1JOPnWLInCuDnP27mWmMpy6Y+5ZOGdkruOTvhd263JjANoULjTnUA0gcNnJPiC4361wXI8zXlPc65dK90dHi4rx1qL7k2gYACRQsmBqUHWA3UBsDIz1qpbi3uPgslvXc2XnaJbWJIkTvbp9RjgB07A7vI31EHn15DNeKeOlk2OTeory/wCxistUey8kUbK8uvFc3ThT/JgJtogPLUv7x/iTV3VjY9HaEFv5fdmHUpfuZg3Yi1O7xKzebl5D/wBzMTWx6zXgj0o/Av7D2vIxrj7OqTH/AG6sVPryHpxJfhPA4LXeGJFPmqhf0rHKyUvLPSil4Rv4twuG7UC4j1MvuTKdE0fqkg3HwOR6V7qyJ1vszxOqMlpoq0/fQT+yaGuZCoeN4VXUUJI/fqSBEwx7xOk9PKukxuUi692FJfxz6/oNiTSLJ3NxbvBKV1qrFHDpnBKuhKnBxkcxkVvY2bC96Xk08jEnSts6sVuGocPE+S/OgOA7DJ5dT5VDelthd+yOzsYjNLLcgEQyd0sZO2vuy+XA+z4sA9cGuB/UeTXbZqL8HWcXTOuv6i89oOHrIonEvczQanjucBu7GPGHB2aMgeJT5Z2IBrlMHJlCfR09Sl2cfn/c3rYJrfwR/CuP8QngV4+HxI7g6bh5mCBeSydxp7zfmEJ5Eb1bS/gMWxvfdey7/wAzAvVmjh7ESpah7O6kVbxHkyHIQzK0jP30efeVsg7cjkbYrX5SFmQ1bUtxa9vb7MyUyUV0y8mjjEs1/fRWscsZt4p45ZY4j3v7uI6wbmTZQWYKFiGTuWJ2FZseqrFx5WafU1pb7d38L/UxzcrJ69hcXlEnErhl92KOG3J85E1yv+HegfEGuy/TWM6sbuUfLWKU0kKukKcVCRUBSpoyw8LaXBDI4+q6nKn8ar76lbBwkb1NjrkpItHDWg4igkkTTcx+CTSzRSIfR0IYoeY3xvXB5Nd2FY4L9v37o6iqVd8VL3JKx4NDC3eIpMmMd47vM+PIM5JA+FaluVZYul+PhdjNGqMXtFj4vG81hJHCuqSSFo1BOBl10ZJPQZyfhVVjONeVGUuyT2TYm4tIkbWERosYOQiqoPmFAH+1ats+ubl8kxWkbXRHRopVDxOCroRkMpGCCK2MLLlRPfseba1JHmnGOFPw+UROS1rIcW9yd9+kMp/xB0P1gPMGvpvF8nC+CTfc5vMxHB9UUYVdlYDtgE+VARTuWOTUoGi4fQY5cEiKWOVlG5Kq3iwPPBJ+VaPJVO3HlBG3hWKFybJ0cDiubg3kbrhljaKeJiHWQMS7ZGzZGgb8gCMCuG/iJ1Vqlr7NNdmjp/SjOXUmT0t2gRpSwKKGZmBDDC51b+mD+FaEapOahruZ3JJbIvsjaGXN1MP3s2JGH2U/lRDPQLj55q8mlBKuPhGrBb+p+5bKwnsKAKAKAKAhW7RR+2rYpjvXBdyTp2VTgAY8b7cugBPkDnVb9PqZicl1aI7idz7RejTvFaLJFq6NPKUMoHogRV/qJ8qv+Gx2vrZT8petdCNjEAZJq/KQir26ByzEBFBOTsAOpJqHJRW2SouT0jVwzhbXhEkylbQbrGcq0/kzjpH5Lzbrtz5DmOb81UnScfxvT9cy8cOtdbDA8K4z5YHIVxeRd0p78l59jv7QcNN1bvAG0hygYnfKCRGdf9Shl/1Vp4eRGi1WSXz/AOfYx2Q6o6JGtaT29ntLsc17w2G4ASeGOUA5CyIsgB9AwOKz0W3RlqqTT+x5nGLX1IjeOcSj4bELe1jj9rkB7i2RVVIxyM0iryjX8yMD06Ti+LuybVK1tv7+xo5GRCqD12KxYWncxhNRZsszu27O7ks7n1JJNfSqKY1QUI+xyd1rtm5M34rKYwIoBYoCmitM2zHxo4mgbRMo2P1XHPRIOqn8RzFaeZhQyYaku5s42VKmXbwXjgvE1uoVlUYPuunVJB7yn4fmCDXz/Kx5Y9jhI6mq1WRUkWfg8+V0HmOXqDVPlV6fUZCRrUAUBru7aOaNoZ0DwuMNG24I8x5EcwRuCK3cPNnjz2vBitrU13PPOM8Jk4ewDsZLNjiK5O7ITyjnPQ9A/JuuDz+k8Vy8MiKjJnO5mC4vqiaWXIxV8VZHSW7KeWR51INYoCK4tYxrE8gXHJmClkDDUNWpQcHIzzrQzcWv03NLubuJkT61FvsXPtTEsfDp0iUIgiKhVGAqkgHYdME1wWK3LJTl52dRckqmkT/ClAU488fgKsJeTGjurGSFAFAFCDmvb+ODR3rhQ7hFY7LqIJALclzjr12r3GDl4IckvJD3/B7a0kk4s6/vI42Kkk4L6dKKoJwWbZR8a2KpTeoaMc1FfV7kZwmHuLaNX94IC/UmRvE5z1JYneu0xq+iqKOTvn12NnJxLiAA1OcLnAHMknkABuWPkK922wrj1SfY8VVSslqKN3CuCPMRNdrhAcx2p33HJ5uhbyXkOuTy4jlublduursjqMHjY1Lql5LhZWZkPko5n/j1rlLr1BfctidhiCDSowKrJTcntgzryAqUm3pAg+1vG3t9NpaEC8lGppMBhbw5wZCDsWPJQeZyeQrsuC4h2NNr8lXm5arWytWtmsZZss8rnMkznXJIfNmP6ch0Ar6Dj41dEemKOXvvna/qOjFbBgFUEhQkVAVO4h0nI5GtNG0ahUkGVlfG0m78ZMTYE6DfKjlIo+0v5jI8qpuX45ZEOqPlFnx+Y65dMvB6Da3PuyRsCCAVYbggjb4giuDtr8xkdImmuxYrS5Ei5HPqPI1UW1uD0Sb6xgKAUiKysjqrxuCrxsAysp5gg8xWzjZU6JdUWeJ1qS7lD452ceyzLbB5bIbtHvJLbD06yRD5svqOX0HiOdjaumbKLMwP8UfJwRSK6hlIKkZDA5BB6g11UZKS2ikkmnpkTivSPJx8bH8NL/lt+lYcn/tS/Bmx/wDuovV5aieBom2EkZUny1LjP518xjP07ur4Z2jj1Q0Ydj78yRFJNp4zolTqJF8LfI7MD5GrmxLfUvD8GtCW1r3LBWE9hQBQBQgq3aC/F0Ws4d4gdNzLzGOfcoftnqfqj1O1xxuBK2XXLwV+dmKqPSvJHfsu2hIYRDK7opLMFPmqsSF+VdNHFpi9qJz8sm2S02cl7xAs4jRTJMwysK+X2mPJV+8ax5mbXjRbmz3jYll8tLwS/BuA92wnuCJLjpj+7iz0iB6+bHc+lcFyPLW5UtJ6idViYUKIr5LRY2Jk3Oyefn8KoLr1BaXk3SbjQKAAMAdKrZScntgyqAFAcXHeMLYwd8V1zMdEEAODLIeQ9FHMnoATXQcPxsrZpteTUyb1CL7lMs7dgXlmbXcStrml5amxgBR0RRsB0A+NfUsPFjj1qKOQycl3T37HTits1RYoSFQBVAFig2QLoCMGtNG4R0iFTg16IMRQHb2d4p7K4gkP8M5/dt0icn3D5Ix5eR261yvNcZ/+1a/Jf8bm7XRMvNvMY21Lz6jz9DXIWVqS0y5LBbXAkXK/MeRqrsrcHpg21jAUA1bByOde67JQluJDW/JUuP8AZTxNccPCrITqktCdMMp6sh5RSf8AieuOddfxX6k9PULX2KrL49WLaPPZeI6WYSQyppfu31KMo+gyYZAS2NKsdWMYB3rtK+Rplpx8P3KWWBYvyLizBraQoQQ0ZwQcg5GBg1sZM16EpLxoxY8Wrkn8noqjAx5bfhXy6b3JnaLwR11wiR51uLN1S6AwQ2e7mUAkJJjkeeGG4z5VtUZqqj02d4/0MNlTf1R8nRF2ljRhFeq1rOfqTbRsevdz+4w+YPpVjBRtj1VS6l9jD167S7Ews6Eag6lfMMCPxqOh/B66l8kdd9o7WNtHfB5ekMQNxIT5BI8n8a9qqXl9l9yHZFEHe8QurmWS3dHtIk0a0JUzyCRNQBZSREMEZAJb1FXHHcfXb9cntIrM3OlWumK8nPcXSwKkFtFqkY6IoE+s3kPTqSeQyTXQW2wx6/8AQpa655Fhp4zwXikIDSQqyEjXPbk3DRKef7kgMxHmMjaquzkrHF9KWyxjx9akm29Ev2dtbZIdVqwcPu0xOp3Yc9bc8/d2x5CuJzbr52P1joqIQjH6Cy8P4fr8T+70HU//AFVRdkKK1HyZiaAxsOVV7bfkBUAKA1Xl3FbxPcXDaYUGSeZJ5BVHVicADqSBVlx+FLImu3Yw3WqCKOZJbmY3lyNMhGmKDORbxc9P+Y2xY/AchX1bi8CONWm/JyWflu2XSn2N+KtSuHQCxQCxQkVQBUBBVpm4a54tQ9elSQcDDBwaEGMsYdSrDKkYI8xRxUlpkxbi9omey/GGBFpcNlv5Mp/mKPqMf8RR/wBw355riOX4x0zdkF2OmwcxWx6X5LdbTmNtS/MeYrnba1NaLIn7acSLqX5jqD5GqqyDg9MG2vACgCgK9Nw9LvjVqgUaraGW4kl076X/AHMUZbyJLtp+7XXfp6E1VKTfbwl/Ur8prqWisfSJ2INoTNbHu7RnU3CBO9EA1gmaNMjwZ95Ry5jbOOkVslBw9maTri5Kfuiet+x8zgNJxaZgwBzFFBCpBAOV8LbH41orCoX+FGz6037kzwz6PY8B2vr4nOx79V/+KD8q9fwlD8wR5ds/k7bjsHEylWvb3SRuGmSRfmroQfnUxxKI94wS/B5dkn5ZR/7PWMHdXEkMNzw64OmK+a3SF4nLFVE6oqq0bkbSaRvgHOQa0uQpyFW50Taa9t/0MlMo71JF04fw+G3GmCGONfJEWMfPAGa46WTbOadkm/yWHRFLsincY4HJPxLiEvtiQQp7OXLR95hfZlJOouoUDSeeedfROOyZ1Urp9ylyMeFsvqOrg3AG4beRSzus6Xi91Dc6O6aBwjSiPRkjEihjkYOVwazXWyte5CquFa6You9YTKRXFexOtjd2umK82JBB7qfH1bhR+TjxD1G1Yb6IXx6Zr/M9RscHtGvhPFBNrjZDFcRELNbNjVGxG242ZDzVxsR8wOHz8CzFn9Xh+H8llVarESNaBlCgGSqq0kjBIkBZ3Y6VVQMkknkMVuYeJK+WvYxWWKKKJfX7cRlWdgVtIjm2hIKlzy9okU9SM6VPug55nb6fw/FxpipyX4OZ5DN6voi/ybsV0JTBipAqAKAKAVAY0BBCtM3RihBouYNW45/rQhnDUoGu4gDrpbPQgg4KkbhlPQg9a8WVRsj0s9Qm65dSLD2a460h9muSBcAeF+QnQfWHk4+svzG3LhOU4yWNNyiuzOpw8uN0fuWi1uDG2V+Y86orK1YtG8WC3nDrqXl+noaq5wcHpg2V4BhPMsaM7sFRVLMx2CqoySfQAV7rhKclGPlkSelsX0dWLGOW/lXEt64kCkYKW6jTbofXT4j6yGvomJQqKY1r2KiyfVJstF5arKhVgCCCNxkb7YI6j0rOzwULs5C1pctwts93gy2jE5/dasSQ5PPu2Ix9xl8qEnoSLgADkKkgr30hXbR8OmERxLKFt4yNjruHWFSPhrz8qAk04PD7KLNow1uIhD3Z5GMIEx+AoCk8LElnMeG3Lliql7Wduc9uDjST1ljyFbzGluprkea4/wBOXrwXZ+fszfxrdrpZFcRZX4rI8xP7LD2aXTBcp7UocxRyNn+6y8Rc7792DgE10WDv0I7NS39zLt9IVsz8OmeMHvYNNzHjnrt2EoA+IUr/AKq3DGSnCER40mQhg6q6tzGlgGGPkRvQnZI0IK12t7OG403NqQl/CD3bnZZUO7QTY5xt5/VOCOoOvkUQvrdc12Z7hNxe0RnCOJLcxCRVKsCySRNs8UiHDxuPMH8Rg8jXBZmJLGtdcv8A2i0qsU47RIImeZwo3LHYADzNRjY0r5aRNk+lFG45xP8AaTd2n/psbAgcva3U+8f+iCNh9YjPLFfSuF4iNcVOS/BzvIZ2vpj5M66ooQoQFAFALFAKgCgFigIAVpm4MUBkKEHNdW+fEvPqPOpQOKvQNdxAHA3IYEMrjZkYcmU9DWG+mN0OmSPdN0qpbRYuzvHjKfZ7nAuQPCeSzKPrL5N5r0+HLg+T4yWNJuPg6nEzI3R+5Z7W5MbZHLqPMVSW1KcdG6T8EwddS8v0qqnBwemCLlt/2jdexLvaxFXvH6NyaO2B66tmcdFAH1q6fg8DX/2Jr8f3NHJt39KPQlGBiulNIdSCo/SHbtFAvEYUDT2Le0BSdOqNQVnXVjbMTP8AML5UBuj4pxVlDLw+1wQCD7c5yCMj/wBvQGieyvr2a29stoIbeCcXDaLh7hneNHEa6TEgADsr5JPuCgLfQET2j4El7EEZ2jkRhJFOmNcUg5MuQQQRkEHYgkV5lBTTjJbTJT13QuGdnYILP2LTrhKssmvxGXXnvGkPVmJJJ9alLRBWOF8elte84XNaXV1LbgKskYibvbZwRC8jSOviwCjc90J61ILF2Is5YOHW0NwmmWOFEZCVYroGlQSuxOkDOKAnKAKApHaW0FnepeKdMFyyQXPRVl5QT+mf7tj6p5VV8ngLKrXyv+aM9NvQyscd4z+0Cbe3JHD1JWWUbG7ZTgoh/wAAHm31yMDbnZ8LwyglOS7GhyGf0/THyJVAAAGANgBsAPIV16SS0jn223tmVCAoAoAoBUAjQCoAoCvCtM3DIUBkKkgdEDmubbPiXn1HnXog46gg1XNuJBg5BBDK4OGRhyZT0IrHdTG2PTIy1Wyrl1Jk52f7QksLW7YCfHgl91Zx54+q/mv4eVcPyfFSx5dUF2Onw81XLTJ1b2ZpxZ2JHtDjxyNvHbof5kn3vsr1PpmtHF45ZDUrF9K/mZr71FaXk9K7PcFjsrdLeLJC5LSMdTyOxy8jt1ZiSSa6VJLsitJOpAUBruIRIjIwyrKVI8wwwfyNAR3ZS1khsbaGf++jgiR99XiVFU79dxQErQBQBQBQFU7W/wANdWnEBsokFpcesNywVCf6Zu7PwZqAtdAFAFAU/wCla4i/Zc8Em7zjuoY+rzEgpgfdIDE9Apr1GLk0kRKSS2ynwoFUKAAAAABsNhjb0rqoLUUjmZy3Jszr0eR0AUAUAsUAUAqAVAKgK8K0zcMhQGQqSB1IMqkg5L6IDxDnmhByUBx3cXj1nHdshhlPd988cbOrGWFcj94pXIPOtDOplNdS9jew7Yx+lnsHZKxtYrZfYmEkT+Mz6u8eVjzaR+renTlgVT67FoWizvseF+XRvL41JDRJg5qSB0AUAUAUAUAUAUBGdpuFi7s57Y/zYnQHyYqdLfJsH5UBp7H8TN3YW9w3vvEhccsSAaZBj0YNQEzmgKn2j7dW9szQQfxN4NvZ4yCEP/Wk3WIfHfyBr3XXKx6ijHZZGtbkyjMJZpvarxw9yRpGNo4UP8uJTyHmx3br5Ve4mHGpbfdlNk5crXpdl/U6K3jTGBQBQBQBQBQCNAI0AjQCoCvitM3BigMhUkDqQZCpIFJGGGDQgjpoCvPl50BgKkGdhcS2zmW0lMTk5Zca4pP8yM7E/eGD61qX4cLO67M2qsuUOz7otvDvpEI8N7aup/xYP36H1KHDr8Bq+NVtmHbD23+CwhlVyXnX5LDw/wCkXh42F7GPOOTVCR8nAwa1tNeTP2ZZ+CdpbW8JFtMshAydGXUf6wNPXlnNCCXoAoAoAoAoAoDnvzKImMAQzYOgSEqhboGKgkD1AoDyPhXaviNk8vD/AGOGCXvp5k7+R3GiaVpD3QRQJVUsdww9QKzUUO16T0YrrlUttDvrm8usi7vZCh5wQD2SPHkSpMjD4vVrVxsF+97KyzkJP9q0Y2lqkShIkVEH1VAUflVhCEYLUVo0ZzlN7k9m+vZ4HQDoAoB0AqAKAKAxNAI0AUBXhWmbgxQGQqSB1IMhUkGVCANAaZLNTy2oDjmi0nGc16RBomdhpWNC8rsEjjHN3bkPh1J6AGsN9yqh1GWmp2y0erdleArZW4iGGlY65ZP8SVsZI+6NgB0AFc9KTk9svYpRWkXSzg0Ljr1oiDfQBQBQBQBQBQBQET2k7PwX8Pc3CnbxJIp0yROOTxv9Vh+B5HI2qU2ntEPv2Z5dNBNaT+xXmDJgtDOBpS5jHNgPqyLtqTpkEbGr3Dy1YumXkpsvF9P6o+DoqwNAKAyFAOgCgCgCgCgEaARoBUAUBXRWmbhkKAyFSQOpAxQgyFSQOgMJ5tAz16UBFTzhVLucKASTUTkorbJjFyekXvsJ2ZMX8bcri4dcRxEf3EZ6f5jbaj02Xoc0ORe7ZbZd0UqqOi/cMi1Pnov61gMrJepICgCgCgCgCgCgCgCgIXtZ2fS/tzEx0SA64ZgMtFKPdcenQjqCRUxk4vaIaTWmeYWMzMGSZdE8TmOaP7Mi+XmpGGB6giukxr1dBS9/c57JpdU9e3sdVbJgGKAeaAdAFAFAGaAVAKgEaAVAV8Vpm4MUBkKEDqUBipIMhUkA7gDJoCMllLHJ+VSCZ7C8F9snNzIM2sDYRSNpZxzb1WP82/pqmzcjrfRHwi2xKOmPU/LPUK0DdJjhiYTPmc16PLOuhAUAUAUAUAUAUAUAUAUB5v8ASRw3uLiLiCDCSFba5+Z/h5D8GJQ+jjyrcwbvTs0/DNTLq9St/KIgV0RQhQDoB0A80AqAKAVAKgFQBQFfFaZuDFAZChAVKBkKkgyFSQcvEDsPjQEbeHETkc9Db/I14s/a/wAHqv8Aevyer9h0A4ZZgAAezQnA23KAk/Mkn51znyX6JuoJJ+390fAfpXog2UICgCgCgCgCgCgCgCgCgKv9Jqg8IvcjOIHI9CMEH4ggH5UQZRozsPgP0rrIftRzE/3MyFejyOgCgHQCoAoAoBUAqAKA/9k=",
    "mimeType": "image/jpeg",
    "practiceId": ${Properties#practiceId},
    "providerId":  ${Properties#providerIdWithQuotes}
  },
  "providerInfo": {
    "cellPhoneNumber": 9194554647,
    "emailAddress": "test@example.com",
    "firstName": "Test",
    "lastName": "Provider1",
    "middleName": "",
    "officeFaxNumber": "9194554748",
    "officePhoneNumber": "9897881718",
    "practiceId":  ${Properties#practiceId},
    "providerId":  ${Properties#providerIdWithQuotes},
    "title": ""
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" id="f2324987-6748-4362-8127-4c7a42a63f8b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>50f13553-1c52-4999-a147-71880fbbb790</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>14759e1b-454b-486d-b452-c76150e131c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40f6d545-cce6-4cef-bd58-beb82e0fdb1e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5682b5af-f1c3-44dd-be8a-c97c34267d4b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7bbb42aa-6684-4125-85f2-4809bbf81d9e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>da25757d-6002-4714-beff-dacd58c413a9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1f063bd3-2842-4f93-8cd4-1d8c5e4a1573</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>023ac7fb-4bb7-441c-b248-c087a81d529f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4d4d357c-d1c0-4939-b3db-2d2e318ccf85</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71bf3007-af59-472a-a74e-5c14460c1e14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa7642fd-2c4d-4456-815a-dc3709f00deb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d891c299-b92a-469b-a38c-e5ea6c2f7beb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d348d6e6-969f-4c22-aa74-57d37f1644cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed3b9edb-5c89-4dbf-bd28-7efb233bbc68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5b02884-d9f3-443d-bf24-d28eaa2d9ac9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4020e354-0b47-4eed-b1d5-f492acd26519</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58a86c29-b89a-42f0-97c2-aff5fc58d5e7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dd5e2d80-20b7-4ad9-8237-a2af64f2db2b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bda18520-762a-450c-9fb6-1f044965fed8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00420a58-f012-42e4-8693-6128121c345e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dbcd7e9c-f552-4acc-881c-c20265dd89ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0583817b-f7d7-4a56-9c69-dceae25866e5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1986447f-0fe2-4482-99ce-7ffc720c4ddf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>87ebf6cc-5ecf-4858-8218-e1a716f0d9d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27fb5d2a-8eac-4dca-bcf8-3005fcb1a980</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7b43f83-7200-4ed4-993c-2a820723fd74</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bdabf358-415f-40a1-9118-a498b3fab8bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3cfd6e34-2121-492a-b7c5-47b56dec5bcf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6d00f2f9-0e94-4cba-a051-e0545428740e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>393c3721-7a7f-4009-8391-6294d2d30201</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c17e59a2-e060-45a9-98ec-7811172a8c7d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e2748afd-cb0a-48e5-b2d6-704f6f402bb1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bc7fe9f6-64d7-4516-baa7-e0849f2fc3c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>77c19dd5-601f-4508-bf8d-53240a0afca2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>51c652f7-01f1-4787-8549-34172b080a50</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4e63da23-a384-41ea-871e-f014aa9c1604</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9089f45b-e5ea-45d8-9bb1-d9c40ea41755</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d2e810a0-b89f-4b24-8535-4219909f4402</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>51348fbc-7496-4ccb-b2b2-f60de5aa7481</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>20d30cd0-d52b-4057-b534-34e4f3f730ee</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>39ec7a8f-a68e-4025-8131-644d98a49689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>675bbc50-3142-4e64-9c77-b2e8ad8537e5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98a2b4cc-5dba-4358-a6da-40c834035184</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a544d45-97ad-4646-8eb4-ded10caa1b3d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79975407-7b39-4a60-8ea1-8d0d611fe119</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a702265-7033-468f-8fb5-11611d902310</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2b4f14e6-bc41-44b4-b733-05e3c368cffa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4a0156a9-9c21-4ddf-b001-f40450438a11</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f3bb812e-a7ff-425a-9c30-9385fad6a827</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e1e5a7e-f810-4cd5-b635-51ac0ae1ba51</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f71e57bb-9d1d-4470-96e4-46183c14bf7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3dbeb920-1000-4407-b677-80bcfeea5145</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ff26d1a-ecf4-4cad-9480-9a84fb83faf9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93450324-df94-4cca-b01a-ad1a6cf0d152</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90ed3b9f-f731-4ded-9dcb-250b5901aeaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8ca9771d-b011-4c5c-a88c-7d23156064fb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4c5fc72-33e6-42f1-a897-8283a792ccdf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bde1b56-8c7e-4c68-b991-d51baa37f294</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ad5fb47-9147-42cb-bce3-693868199f89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a59cabf8-49db-494e-bd33-c191c9d9f952</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b2fd1c3-2778-47de-8e4b-ebae56ffc676</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b98c840-434c-4558-a8e4-3acec51d85c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d2123a48-8816-41d8-b86f-04101f22ccc3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8f26bf51-9047-4a4e-af55-44939a2301cd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cbb212b0-9915-4a70-a4aa-17a7c0eb1c67</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>533ebd79-2166-45aa-a938-61217ee57981</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3267344c-464d-44ae-a233-687fd0a96011" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager v4 endpoints" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="properties" name="Properties" id="41ddd1b4-c0f8-422b-8daa-8680646b377b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>invalidAuthorization</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>pssUrl</con:name><con:value>"www.medfusion.com"</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>3544</con:value></con:property><con:property><con:name>practiceTimezone</con:name><con:value>"America/New_York"</con:value></con:property><con:property><con:name>language</con:name><con:value>"en"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="6734b113-d979-436f-badf-fa2422f41678"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET all practices info for system user" id="27e5f767-3909-43aa-9b20-b60b74881f3b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET all practices info for system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1222cbb4-ef5a-4ae3-9898-c93e731c29d2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET all practices info for staff user" id="d60f834f-6e9b-4612-80dc-44bb058b2cc6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET all practices info for staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v4 practice configuration for staff - Enable everything and set language as english" id="91d3d62f-1eee-450a-aa02-ada5e5a72db1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v4 practice configuration for staff - Enable everything and set language as english" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": "en",
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v4 practice configuration for staff - Enable everything" id="54d1eb0a-4057-4916-b61b-2030c649bcf0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v4 practice configuration for staff - Enable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v4 practice configuration for invalid staff" id="bb4c3151-1b48-4e45-8e3d-0a7ce4ce8b9a"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v4 practice configuration for invalid staff" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v4 practice configuration for invalid staff" id="db50210b-3d78-412b-9bb7-625047a43be3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v4 practice configuration for invalid staff" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v4 practice configuration for staff - Disable everything" id="91ee5b05-a5ae-4c59-8e6d-aa1b66a9d0d7"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v4 practice configuration for staff - Disable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": "",
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": false,
   "notificationsEnabled": false,
   "emailEnabled": false,
   "textEnabled": false,
   "pushEnabled": false,
   "appointmentRemindersEnabled": false,
   "notifyFiveDaysOut": false,
   "notifyThreeDaysOut": false,
   "notifyOneDayOut": false,
   "notifyLanguage": "",
   "pssEnabled": false,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": false,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v4 practice configuration for staff - Disable everything" id="72fe43a4-f574-433a-9e1e-162a53fc6279"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v4 practice configuration for staff - Disable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Disable everything#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v4 practice configuration for staff - Default language" id="ebb64c81-0848-4db5-9876-219c1e847964"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v4 practice configuration for staff - Default language" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": "",
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v4 practice configuration for staff - Enable everything(default language)" id="9bbb7693-7929-43c6-8db9-55f40bb75c11"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v4 practice configuration for staff - Enable everything(default language)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v4 practice configuration for staff - Enable everything and set language as espanol-english" id="f40e1561-c2a8-470c-8bf0-3c3993bfe58f"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v4 practice configuration for staff - Enable everything and set language as espanol-english" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": "en-es",
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en-es</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v4 practice configuration for staff - Enable everything(language-espanol/english)" id="080e2e4b-58f3-4bab-a071-d13417458997"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v4 practice configuration for staff - Enable everything(language-espanol/english)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v4/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en-es</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v4 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6734b113-d979-436f-badf-fa2422f41678</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>91d3d62f-1eee-450a-aa02-ada5e5a72db1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ebb64c81-0848-4db5-9876-219c1e847964</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9bbb7693-7929-43c6-8db9-55f40bb75c11</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="56002115-4e5f-4654-a8ef-618535199d5c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="SendRecall" searchProperties="true"><con:settings/><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b6ab5948-d5d4-4ab5-8684-af2926090c12" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Text notifier v3" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="4d0d3cfe-bab9-4926-90bf-570d590411ed"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>phone</con:name><con:value>9194554883</con:value></con:property><con:property><con:name>sendingApplication</con:name><con:value>"SOAPUI"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST Send text" id="21f514c2-c06e-4cf2-aa56-065dba2d7ca8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="3b08edd3-f6ec-4140-bf8d-b725d56e9b48" name="POST Send text" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8050/text-notifier/services/v3/text/sendText</con:endpoint><con:request>{
  "content": "hELLO TEXT MESSAGE FOR YOU",
  "phoneNumber": ${Properties#phone},
  "practiceId": ${Properties#practiceId},
  "sendingApplication": ${Properties#sendingApplication},
   "sendingReason":"PRECHECK_NOTIFICATION"
  
}</con:request><con:assertion type="JsonPath Existence Match" id="f6baef76-e4fa-46eb-a51f-0d47da04a370" name="Check for existence of [status]"><con:configuration><path>$.status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="64426c33-a546-4052-b058-40546facd700" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c3c2246a-7e9e-454c-bfb1-78d3537713d3" name="Match content of [status]"><con:configuration><path>$.status</path><content>Text notification sent.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>ce6184a5-99ec-4516-ac7a-ca38ff0647bc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="03c27424-dc18-4ec6-8532-8d2300f72799" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="POST appointments to appointment service v4 with timezone and location" searchProperties="true" maxResults="0"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">true</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="properties" name="Properties" id="26442cd5-8782-4c5f-9cac-54ca076c9dcd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>9</con:value></con:property><con:property><con:name>emrId</con:name><con:value>73483833223</con:value></con:property><con:property><con:name>time</con:name><con:value>1542554253000</con:value></con:property><con:property><con:name>locationName</con:name><con:value>"jane's medfusion location 5 days 2"</con:value></con:property><con:property><con:name>pmAppointmentId</con:name><con:value>"3hhh42433432532"</con:value></con:property><con:property><con:name>providerName</con:name><con:value>"Leena smith 2"</con:value></con:property><con:property><con:name>cancellationReason</con:name><con:value>"test reason v4"</con:value></con:property><con:property><con:name>pmExternalId</con:name><con:value>73483833223</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>displayName</con:name><con:value>"Jakub's Practice"</con:value></con:property><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>locationId</con:name><con:value>""</con:value></con:property><con:property><con:name>timezoneId</con:name><con:value>"America/New_York"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="8a586950-2769-4a16-8a56-35ae93afdad8"><con:settings/><con:config><script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
appointmentid = generator( (('1'..'9')+('a'..'z')+('1'..'9')+('1'..'9')).join(), 12 )
log.info appointmentid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmAppointmentId",'"'+appointmentid+'"' )





def generator2 = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}
patientid = generator2( (('1'..'9')+('1'..'9')+('1'..'9')).join(), 6 )
log.info patientid
testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("pmExternalId",patientid )


import groovy.time.TimeCategory
now = new Date()
use(TimeCategory) {
 def futuretime = now + 5.days 
 def timeinmillis = futuretime.getTime().toString()
 log.info timeinmillis
 testRunner.testCase.getTestStepByName( "Properties" ).setPropertyValue("time",timeinmillis )

}</script></con:config></con:testStep><con:testStep type="httprequest" name="POST CONFIGS for staff-enable everything" id="3c2923c5-b060-472c-bab9-cd2359416720"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="20e48a78-19a1-42d9-a45e-de0e50acc136" name="POST CONFIGS for staff-enable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/practices/me/configs</con:endpoint><con:request>{
   "merchantId": 2560789797,
   "practiceId": 20624,
   "displayName": ${Properties#displayName},
   "disableDemographics": false,
   "disableInsurance": false,
   "disableCopay": false,
   "disableBalance": false,
   "minBalanceAmount": 5,
   "minBalancePercent":0 ,
   "minBalanceThreshold": 0,
   "enablePatientMode": false,
   "patientModeCompletionMessage": "",
   "appointmentTimeZone": "America/New_York",
   "disableAppointmentReminders": false,
   "phoneNumber": 8111881019,
   "appointmentReminderFromEmail": "appointments@medfusion.com"
}</con:request><con:assertion type="Valid HTTP Status Codes" id="a81da7df-e585-44ce-ad90-91d80a5d60fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9343eec7-34f1-40b7-a74f-df0ff1f1d3f9" name="Match content of [disableDemographics]"><con:configuration><path>$.disableDemographics</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="233f3b6f-4037-4e98-9bf9-2c6e4014cc85" name="Match content of [disableInsurance]"><con:configuration><path>$.disableInsurance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ffbb2e84-cff5-4d73-a685-f9a881eac7a3" name="Match content of [disableCopay]"><con:configuration><path>$.disableCopay</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="257298be-3291-462d-8b52-dd27859a6fab" name="Match content of [disableBalance]"><con:configuration><path>$.disableBalance</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="beb90e96-5dbf-4009-b407-dbc2d6b72c11" name="Match content of [disableAppointmentReminders]"><con:configuration><path>$.disableAppointmentReminders</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment without insurance" id="4e17edd1-273b-4129-bfe3-4688d446d74a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment without insurance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v4/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {

    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Daniels",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "John",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane.rasika@medfusion.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  "appointmentId": "",
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName},
  "locationId": ${Properties#locationId},
  "timezoneId": ${Properties#timezoneId}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment with primary, secondary &amp; tertiary insurance +selenium test" id="2e4d13bf-938e-4662-839e-20924f34efae"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment with primary, secondary &amp; tertiary insurance +selenium test" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v4/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {
 "primaryInsuranceInfo": 
{ "name": "Medicare", "groupNumber": "GROUP2874","memberId": "M8924", "groupName": "G93840989", "dateIssued": "2017-05-31T00:00:00Z"
},
"secondaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber2",
      "groupName": "Random group",
      "memberId": "M34878id",
      "dateIssued": ""
    },
    "tertiaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber3",
      "groupName": "",
      "memberId": "M34878id",
      "dateIssued": ""
    }
    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Vincent",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "Neil",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane.rasika@medfusion.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  "appointmentId": "",
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName},
  "locationId": ${Properties#locationId},
  "timezoneId": ${Properties#timezoneId}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment with primary and secondary insurance +selenium test" id="b04a1db0-121c-4bfa-aca2-79e0672998c4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment with primary and secondary insurance +selenium test" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v4/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>	{
	  "insurance": {
	 "primaryInsuranceInfo": 
	{ "name": "Medicare", "groupNumber": "GROUP2874","memberId": "M8924", "groupName": "G93840989", "dateIssued": "2017-05-31T00:00:00Z"
	},
	"secondaryInsuranceInfo": {
	      "name": "",
	      "groupNumber": "Gnumber2",
	      "groupName": "Random group",
	      "memberId": "M34878id",
	      "dateIssued": ""
	    }
	    },
	  "locationName": ${Properties#locationName},
	  "pmAppointmentId": ${Properties#pmAppointmentId},
	  "cancellationReason": ${Properties#cancellationReason},
	  "practiceDemographics": {
	    "zip": "27513",
	    "lastName": "Daniels",
	    "address": "1225, parktop drive",
	    "address2": "Weston parkside",
	    "city": "cary",
	    "firstName": "John",
	    "phone": "9194554883",
	    "dob": "1990-05-01",
	    "pmExternalId": ${Properties#pmExternalId},
	    "middleName": "",
	    "state": "NC",
	    "email": "jane.rasika@medfusion.com"
	  },
	  "practiceId": ${Properties#practiceId},
	  "type": "cardio",
	  "coPayment": {
	    "amount": 56
	  },
	 "balance": {
	    "amount": 30,
	    "status":"INCOMPLETE"
	
	  },
	  "appointmentId": "",
	  "time": ${Properties#time},
	  "appointmentAddress": {
	    "zip": "33734",
	    "address": "1256, Avance clinic",
	    "address2": "McCrimon parkway",
	    "city": "Morrisville",
	    "state": "NC"
	  },
	  "providerName": ${Properties#providerName},
	  "locationId":${Properties#locationId},
  "timezoneId": ${Properties#timezoneId}
	
	}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment with primary insurance +selenium test" id="4d1e8ce2-031d-4e8f-89ad-1a7ece614dba"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment with primary insurance +selenium test" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v4/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {
 "primaryInsuranceInfo": 
{ "name": "Medicare", "groupNumber": "GROUP2874","memberId": "M8924", "groupName": "G93840989", "dateIssued": "2017-05-31T00:00:00Z"
}
    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Matthew",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "Riyanka",
    "phone": 9194554883,
    "dob": "2018-09-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane20rasika@gmail.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 33
  },
 "balance": {
    "amount": 44,
    "status":"INCOMPLETE"

  },
  
  "time": ${Properties#time},
  "appointmentAddress": {
  	"phone":1234567893,
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName},
  "locationId": ${Properties#locationId},
  "timezoneId": ${Properties#timezoneId}

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="POST single Appointment  with secondary &amp; tertiary insurance" id="128443ec-fff5-41f1-9e69-70768c1c9d94"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="2907f1fc-751d-4495-913f-a9cc3cd4c4d0" name="POST single Appointment  with secondary &amp; tertiary insurance" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8085/appointments/services/v4/appointments/practice/${Properties#practiceId}/integration/${Properties#integrationId}/emr/${Properties#emrId}</con:endpoint><con:request>{
  "insurance": {

"secondaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber2",
      "groupName": "Random group",
      "memberId": "M34878id",
      "dateIssued": ""
    },
    "tertiaryInsuranceInfo": {
      "name": "",
      "groupNumber": "Gnumber3",
      "groupName": "",
      "memberId": "M34878id",
      "dateIssued": ""
    }
    },
  "locationName": ${Properties#locationName},
  "pmAppointmentId": ${Properties#pmAppointmentId},
  "cancellationReason": ${Properties#cancellationReason},
  "practiceDemographics": {
    "zip": "27513",
    "lastName": "Daniels",
    "address": "1225, parktop drive",
    "address2": "Weston parkside",
    "city": "cary",
    "firstName": "John",
    "phone": 9194554883,
    "dob": "1990-05-01",
    "pmExternalId": ${Properties#pmExternalId},
    "middleName": "",
    "state": "NC",
    "email": "jane.rasika@medfusion.com"
  },
  "practiceId": ${Properties#practiceId},
  "type": "cardio",
  "coPayment": {
    "amount": 56
  },
 "balance": {
    "amount": 30,
    "status":"INCOMPLETE"

  },
  "appointmentId": "",
  "time": ${Properties#time},
  "appointmentAddress": {
    "zip": "33734",
    "address": "1256, Avance clinic",
    "address2": "McCrimon parkway",
    "city": "Morrisville",
    "state": "NC"
  },
  "providerName": ${Properties#providerName},
  "locationId": "234fgh",
  "timezoneId": "America/New_York"

}</con:request><con:assertion type="Valid HTTP Status Codes" id="6fa6e069-794c-4d17-a838-dc47ecc1a750" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200,202</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cd483741-1d45-414e-90c4-32ca8b105527" name="Match content of [resourceType]"><con:configuration><path>$.contained[0].resourceType</path><content>Location</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cc47d166-75df-4537-a63c-37cce45a9343" name="Match content of [status]"><con:configuration><path>$.status</path><content>booked</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="v4 precheck endpoint to send appointments to reminder service" id="a4c79607-e679-4ba2-98ad-8ba48c307c4a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="55001180-9c42-4b54-a409-90e3f469e709" name="v4 precheck endpoint to send appointments to reminder service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v4/appointments/reminders</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="806ecffe-b090-4ba3-aa19-d187bc2146cc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8343e986-70d9-41ff-a530-abbd7620f372" name="Script Assertion"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#systemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>daysOut[]</con:name><con:value>5</con:value><con:style>QUERY</con:style><con:default>5</con:default></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script assertion" id="05412738-2b31-4927-a227-32bb94dba35d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import groovy.json.JsonSlurper
import com.eviware.soapui.support.XmlHolder
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;




def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def ResponseMessage = testRunner.testCase.testSteps["v4 precheck endpoint to send appointments to reminder service"].testRequest.response.contentAsString
def jsonSlurper = new JsonSlurper().parseText(ResponseMessage)
assert jsonSlurper !=null
def ids= jsonSlurper.pmAppointmentId
def pmAppointmentId = context.expand( '${Properties#pmAppointmentId}' )

for(int i=0; i&lt;ids.size();i++){
	def apptids=ids[i]
	log.info apptids
	if(jsonSlurper.pmAppointmentId.equals(pmAppointmentId).toString()){
		log.info "Appointment created from appointment service is also present in precheck "
		assert jsonSlurper.pmAppointmentId.equals(pmAppointmentId).toString()
		break
	}
}
	if(ids.contains(pmAppointmentId).toString()){
	assert ids.contains(pmAppointmentId).toString()
	}</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>5b65c2e0-325f-4211-a007-dc9f9ab2e35b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24b73c27-7314-482f-b574-7207be6e8db7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4948d2c-d349-49e0-9bae-975721f9a5b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9d67f73f-3def-4ad4-8d1d-bb73be8ecf59</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5050f2ee-ae41-4e32-afd1-77c8319780f4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9faff9e3-79a1-4f75-b428-4c6bcbac3b75</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4bffe85-e5fb-4d5b-b242-8e9ef19f1f8d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9f4d7d4f-b2a1-4d73-b4da-e8d6f6c1a31d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f57bcf2e-1ea8-43bc-b41d-819e7b4b0516</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>23e23e00-92ca-4ebd-8af2-fb36266757bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6afc0141-3898-4731-86cc-e7c2369c963b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="51ec0867-baa8-488d-8722-014123564824" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Practice settings manager v5 endpoints" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="properties" name="Properties" id="79774723-9529-4e13-a89c-52e5330a2343"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property><con:property><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value></con:property><con:property><con:name>invalidAuthorization</con:name><con:value>Basic bWJ1c2g3OndlbGNvbWUy</con:value></con:property><con:property><con:name>practiceName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>practiceDisplayName</con:name><con:value>"Automation Jakub's practice"</con:value></con:property><con:property><con:name>pssUrl</con:name><con:value>"www.medfusion.com"</con:value></con:property><con:property><con:name>integrationId</con:name><con:value>3544</con:value></con:property><con:property><con:name>practiceTimezone</con:name><con:value>"America/New_York"</con:value></con:property><con:property><con:name>language</con:name><con:value>"en"</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST to get token 1" id="a5e645c7-20ba-4954-9a99-2ef8390716d2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="8ae11df4-4f10-4870-9017-b2df7f6e1a57" name="POST to get token 1" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://d1-ping-01.dev.medfusion.net/as/token.oauth2</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="54c6e7e2-2c13-4e97-8076-847d427be6da" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e8dd7307-20dc-4b62-9b7c-a6864fb4966f" name="Check for existence of [access_token]"><con:configuration><path>$.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="aee5e10e-16f8-4295-a51f-b183e79f8a30" name="Match content of [token_type]"><con:configuration><path>$.token_type</path><content>Bearer</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>grant_type</con:name><con:value>client_credentials</con:value><con:style>QUERY</con:style><con:default>client_credentials</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_id</con:name><con:value>SystemJwtValidationClientV1</con:value><con:style>QUERY</con:style><con:default>SystemJwtValidationClientV1</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>client_secret</con:name><con:value>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:value><con:style>QUERY</con:style><con:default>lWiNlRcD1snTlSNXmi0GfGFYRHmNtf1iFoawSKAL4M1kICsALm1pF4gwwvEddpIF</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET all practices info for system user" id="949442f9-1810-4635-b030-1dcef97a4068"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET all practices info for system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1222cbb4-ef5a-4ae3-9898-c93e731c29d2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Bearer ${POST to get token 1#Response#$.access_token}</con:value><con:style>HEADER</con:style><con:default>Bearer ${POST to get token 1#Response#$.access_token}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET all practices info for staff user" id="59229b02-1ede-45e9-be6c-134627c0e52b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET all practices info for staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v5 practice configuration for staff - Enable everything and set language as english" id="231d30a5-093a-4daa-a4c0-c793affbc112"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v5 practice configuration for staff - Enable everything and set language as english" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": "en",
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ],
    "locationMap":    {
      "22384":       {
         "locationId": "223844545",
         "longitude": -95.3934946,
         "latitude": 29.7219072
      },
      "22385":       {
         "locationId": 22385,
         "longitude": -70.8952337,
         "latitude": 42.5235097
      },
      "20821":       {
         "locationId": 20821,
         "longitude": -78.7324977,
         "latitude": 35.7531652
      },
      "28616":       {
         "locationId": 28616,
         "longitude": -76.5590098,
         "latitude": 38.9847195
      },
      "28763":       {
         "locationId": 28763,
         "longitude": -144.6652778,
         "latitude": 63.6533333
      },
      "22383":       {
         "locationId": 22383,
         "longitude": -73.8801301,
         "latitude": 40.737975
      }
   }
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="dee340ba-6b6f-468e-b72b-3302ce688c80" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v5 practice configuration for staff - Enable everything" id="e2ad4144-43b2-4d6a-a623-e7778fb1f27f"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v5 practice configuration for staff - Enable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="700df251-0cfe-4334-8432-0301a011ed5f" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v5 practice configuration for invalid staff" id="1f3ae4b2-9d50-47d5-b316-f1d790d81ed1"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v5 practice configuration for invalid staff" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v5 practice configuration for invalid staff" id="a4e82bf9-9884-4712-8105-de265259ee7d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v5 practice configuration for invalid staff" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#invalidAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#invalidAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v5 practice configuration for staff - Disable everything" id="1291fc1b-c174-4d8d-990b-1ccf0df6d469"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v5 practice configuration for staff - Disable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": "",
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": false,
   "notificationsEnabled": false,
   "emailEnabled": false,
   "textEnabled": false,
   "pushEnabled": false,
   "appointmentRemindersEnabled": false,
   "notifyFiveDaysOut": false,
   "notifyThreeDaysOut": false,
   "notifyOneDayOut": false,
   "notifyLanguage": "",
   "pssEnabled": false,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": false,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ea2d11d8-7b60-4843-82c7-e1a25cc4497f" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v5 practice configuration for staff - Disable everything" id="16b530e0-df84-4274-a7e4-add41dfbd9e0"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v5 practice configuration for staff - Disable everything" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>null</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Disable everything#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="13d15e64-d58d-4180-a8d4-fd07558bd150" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v5 practice configuration for staff - Default language" id="8c93effb-3360-498e-ad1c-31737462c63d"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v5 practice configuration for staff - Default language" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": "",
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7960656c-0841-495e-a64b-c90410936d9c" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v5 practice configuration for staff - Enable everything(default language)" id="7147dc43-441f-45d2-a983-8c0213821970"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v5 practice configuration for staff - Enable everything(default language)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="513f437d-73c2-45cd-ade4-85f8b2c3be7c" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="PUT v5 practice configuration for staff - Enable everything and set language as espanol-english" id="9f1bf404-9f92-4960-9b27-063e01cd9874"><con:settings/><con:config method="PUT" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="PUT v5 practice configuration for staff - Enable everything and set language as espanol-english" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": "en-es",
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en-es</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b5377a8-895a-4f8b-b3ca-952af59227a1" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f3681670-fc71-4b1f-b0ae-8eea6215b46c" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="GET v5 practice configuration for staff - Enable everything(language-espanol/english)" id="35581542-395f-41ed-aa56-1fee1bfb404e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4a0b434f-9cae-40de-99ed-d513d1b5d1c8" name="GET v5 practice configuration for staff - Enable everything(language-espanol/english)" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8114/practice-settings-manager/v5/configuration/practice/${Properties#practiceId}</con:endpoint><con:request>{
   "practiceId": ${Properties#practiceId},
   "integrationId": ${Properties#integrationId},
   "practiceName": ${Properties#practiceName},
   "practiceDisplayName": ${Properties#practiceDisplayName},
   "practiceTimezone": ${Properties#practiceTimezone},
   "active": true,
   "notificationsEnabled": true,
   "emailEnabled": true,
   "textEnabled": true,
   "pushEnabled": true,
   "appointmentRemindersEnabled": true,
   "notifyFiveDaysOut": true,
   "notifyThreeDaysOut": true,
   "notifyOneDayOut": true,
   "notifyLanguage": ${Properties#language},
   "pssEnabled": true,
   "pssUrl": ${Properties#pssUrl},
   "precheckEnabled": true,
   "practiceForms":    [
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/2db6ff28-5781-4f52-941e-4247d8f91303/20624",
         "formTitle": "Real form"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/6e7b6585-399f-4819-a00c-21c14dc5a47c/20624",
         "formTitle": "HIPAA policy"
      },
            {
         "practiceId": ${Properties#practiceId},
         "formUrl": "https://dev3.dev.medfusion.net/consumer/index.php/externalForms/start/95c241c6-762b-4e06-94db-d80f537888ea/20624",
         "formTitle": "Financial policy"
      }
   ]
}</con:request><con:assertion type="Valid HTTP Status Codes" id="e095c7e1-3af8-4707-8a69-c5ddff9780ff" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9b9cd846-0f73-4b0d-863e-7d14adb98db8" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7fb3c6d-88e9-478c-813e-5191743bfd40" name="Check for existence of [integrationId]"><con:configuration><path>$.integrationId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="81afc852-06c3-4597-931d-17025371a7a9" name="Match content of [integrationId]"><con:configuration><path>$.integrationId</path><content>${Properties#integrationId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3f94a4dc-0e30-45ed-82d4-d4d6a3495a0e" name="Check for existence of [practiceName]"><con:configuration><path>$.practiceName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3be9b936-51ef-417c-a209-3a3833d26c62" name="Check for existence of [practiceDisplayName]"><con:configuration><path>$.practiceDisplayName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30cb78ea-7d83-4945-a3b5-3a7f9ea90c8a" name="Match content of [active]"><con:configuration><path>$.active</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.active}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="79bc8bf1-10cc-4551-bba6-2e064f3c3fa5" name="Match content of [notificationsEnabled]"><con:configuration><path>$.notificationsEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notificationsEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b5bfac32-c447-4b11-ba41-8bf90aa71f14" name="Match content of [emailEnabled]"><con:configuration><path>$.emailEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.emailEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f33d8b0b-e2cf-411f-a4fc-fa45aa26efa7" name="Match content of [textEnabled]"><con:configuration><path>$.textEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.textEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1bf10bf4-22db-4043-93b5-c1371cfe9b44" name="Match content of [pushEnabled]"><con:configuration><path>$.pushEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pushEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="820140e9-cf97-4f2d-83b2-dda53351406b" name="Match content of [appointmentRemindersEnabled]"><con:configuration><path>$.appointmentRemindersEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.appointmentRemindersEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="133db974-a0fb-48ff-95cc-a8223f7c789a" name="Match content of [notifyFiveDaysOut]"><con:configuration><path>$.notifyFiveDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyFiveDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0aaf05d0-8fa0-461f-b77a-52d13426c95e" name="Match content of [notifyThreeDaysOut]"><con:configuration><path>$.notifyThreeDaysOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyThreeDaysOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="32114e03-9bec-4961-bb97-ef1764bd971c" name="Match content of [notifyOneDayOut]"><con:configuration><path>$.notifyOneDayOut</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.notifyOneDayOut}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5a5a43d8-7c88-468e-9227-c8f474c6ba11" name="Match content of [notifyLanguage]"><con:configuration><path>$.notifyLanguage</path><content>en-es</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="78366092-5b35-4130-9224-6c743037713b" name="Match content of [pssEnabled]"><con:configuration><path>$.pssEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.pssEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4b65969d-0fe2-4376-89b5-8c72830df9ba" name="Check for existence of [pssUrl]"><con:configuration><path>$.pssUrl</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8f50fcd8-75fb-45c4-8091-81a2334ec664" name="Match content of [precheckEnabled]"><con:configuration><path>$.precheckEnabled</path><content>${PUT v5 practice configuration for staff - Enable everything and set language as english#RawRequest#$.precheckEnabled}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="37b92c09-bf60-478c-ba5f-8325b387c017" name="Check for existence of [practiceForms]"><con:configuration><path>$.practiceForms</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cd16022-e20f-40dc-8300-346f8a5ebb2f" name="Check for existence of [created]"><con:configuration><path>$.created</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1949aa3c-af65-4ff9-8952-33359e27cac0" name="Check for existence of [updated]"><con:configuration><path>$.updated</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c090e831-08a1-47af-a46a-128fe2ee61d7" name="Check for existence of [practiceTimezone]"><con:configuration><path>$.practiceTimezone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e3177f20-d6d2-484b-ae8a-e3c06626f2a3" name="Check for existence of [locationMap]"><con:configuration><path>$.locationMap</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6734b113-d979-436f-badf-fa2422f41678</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>91d3d62f-1eee-450a-aa02-ada5e5a72db1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ebb64c81-0848-4db5-9876-219c1e847964</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9bbb7693-7929-43c6-8db9-55f40bb75c11</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="6af83727-802c-4cb8-8a81-244ccacc0dc1" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Medfusion Timezone" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="008ef372-3956-4968-ae9f-243862eff2c7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>city</con:name><con:value>"Toledo"</con:value></con:property><con:property><con:name>state</con:name><con:value>"Ohio"</con:value></con:property><con:property><con:name>latitude</con:name><con:value>41.6639383</con:value></con:property><con:property><con:name>longitude</con:name><con:value>-83.55521200000001</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="POST Timezone" id="75695c59-4cc6-4fb8-be1a-56aa5e7f5120"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="dcfa6e98-a311-489b-976e-ae118ee25f63" name="POST Timezone" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8123/mf-timezone-service/services/v1/timezone</con:endpoint><con:request>[
      {
        "city": ${Properties#city}, 
        "latitude": ${Properties#latitude}, 
        "longitude": ${Properties#longitude}, 
        "state": ${Properties#state}
    }
]</con:request><con:assertion type="Valid HTTP Status Codes" id="9ecb82e4-200c-4da7-9f72-996cd83ef98a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="0188ba9b-0183-40a1-bb55-6d09828ddf33" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://d3-pt-app01.dev.medfusion.net/mf-timezone-service/services/v1/timezone';
//ns1:Response[1]/ns1:lat_41.663938_lng_-83.555212[1]/ns1:timezoneId[1]</con:xpath><con:element>timezoneId</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>America/New_York</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://d3-pt-app01.dev.medfusion.net/mf-timezone-service/services/v1/timezone';
//ns1:Response[1]/ns1:lat_41.663938_lng_-83.555212[1]/ns1:timezoneName[1]</con:xpath><con:element>timezoneName</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Eastern Standard Time</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://d3-pt-app01.dev.medfusion.net/mf-timezone-service/services/v1/timezone">
   <lat_41.663938_lng_-83.555212>
      <timezoneId>America/New_York</timezoneId>
      <timezoneName>Eastern Standard Time</timezoneName>
   </lat_41.663938_lng_-83.555212>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Get timezone" id="6bde03aa-a5e7-43db-b062-0d4fe7ede663"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c8216da6-d35c-46ba-ad8c-5c480700276c" name="Get timezone" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-pt-app01.dev.medfusion.net:8123/mf-timezone-service/services/v1/timezone/latitude/${Properties#latitude}/longitude/${Properties#longitude}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="175824e3-158a-48ec-979b-dbe5a631480c" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b4230fad-1482-4197-9306-7aaf12e9bf84" name="Check for existence of [timezoneId]"><con:configuration><path>$.timezoneId</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cf35dda6-b555-478b-b609-7029248028c4" name="Check for existence of [timezoneName]"><con:configuration><path>$.timezoneName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>008ef372-3956-4968-ae9f-243862eff2c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="5dbccb47-d91b-468f-97cd-410374e72b8d" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Precheck v5 reminders endpoint" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="a2be514c-d06d-464c-a0f5-32d482f6cce2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>systemAuthorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Get reminders v5" id="d6e93e98-b82e-42e6-b979-17d4a78d88ec"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="b5734958-7380-44fb-b903-63113dc4908c" name="Get reminders v5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/v5/appointments/reminders/practice/${Properties#practiceId}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="4e31f079-e806-4bd0-a3aa-c0be7acfc934" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#systemAuthorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#systemAuthorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>daysOut[]</con:name><con:value>5</con:value><con:style>QUERY</con:style><con:default>5</con:default></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a2be514c-d06d-464c-a0f5-32d482f6cce2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="60ba8a84-ca63-47c8-8ac9-d0a6699a2e46" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Patient info" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="47352cf4-de8b-43d6-8257-89dccdf3d843"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Authorization</con:name><con:value>Bearer b7efe86ab2a0769e562083cdbcf87c1b</con:value></con:property><con:property><con:name>precheckAppointmentId</con:name><con:value>5bb502ba7120283b482b2a7c</con:value></con:property><con:property><con:name>mfisAppointmentId</con:name><con:value>5bb52a357120264032e12f43</con:value></con:property><con:property><con:name>practiceId</con:name><con:value>20624</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Get patient info for precheck appointment as system user" id="f2b8a2dc-2559-443c-93c5-0b26602fa467"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="8e0be0bd-5d07-4a0e-b652-95a9a19f973d" name="Get patient info for precheck appointment as system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#precheckAppointmentId}/patient_info</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3ced51bf-9bc3-4edc-acda-c5623751b548" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ae892331-6ad6-43d0-af0e-a9928103b70a" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c4f7322a-028e-46c8-a19a-ba794bc19426" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#precheckAppointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6c82b557-dcf0-4c76-acbe-55ff36e6d073" name="Check for existence of [firstName]"><con:configuration><path>$.patientDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60874789-961d-4a97-9816-84e27f6c0110" name="Check for existence of [middleName]"><con:configuration><path>$.patientDemographics.middleName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4a434248-50e6-45e6-a572-3534256d3341" name="Check for existence of [lastName]"><con:configuration><path>$.patientDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8d7e8536-ea36-4d4f-9d09-b442e55f49b4" name="Check for existence of [address]"><con:configuration><path>$.patientDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="346f343e-8f5d-41c3-b7ff-7fc1cf61b996" name="Check for existence of [address2]"><con:configuration><path>$.patientDemographics.address2</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6bfcda50-9191-4994-accf-76caff23e6a7" name="Check for existence of [city]"><con:configuration><path>$.patientDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f45520ab-21c8-4e38-850b-47fea56e04d1" name="Check for existence of [state]"><con:configuration><path>$.patientDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="06d288b1-de25-4b22-a182-813a1e664d20" name="Check for existence of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c2633c86-9945-4850-acf4-4152cee6a1f3" name="Check for existence of [dob]"><con:configuration><path>$.patientDemographics.dob</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e2c3ee83-27c3-4efc-8d08-62606d6cba81" name="Check for existence of [phone]"><con:configuration><path>$.patientDemographics.phone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="258727a7-b14a-4737-bae5-b0867e9e0d02" name="Check for existence of [email]"><con:configuration><path>$.patientDemographics.email</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6527c5c6-9c77-4faa-a7af-e32d12893d94" name="Match content of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>27513</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="305ada6e-da35-45b6-94e0-267f5a093c22" name="Match content of [dob]"><con:configuration><path>$.patientDemographics.dob</path><content>1535760000000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get patient info for mfis appointment as system user" id="1dc0f485-ea03-4b78-906a-1ae0046e9c35"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="8e0be0bd-5d07-4a0e-b652-95a9a19f973d" name="Get patient info for mfis appointment as system user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#mfisAppointmentId}/patient_info</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3ced51bf-9bc3-4edc-acda-c5623751b548" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ae892331-6ad6-43d0-af0e-a9928103b70a" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c4f7322a-028e-46c8-a19a-ba794bc19426" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#mfisAppointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6c82b557-dcf0-4c76-acbe-55ff36e6d073" name="Check for existence of [firstName]"><con:configuration><path>$.patientDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60874789-961d-4a97-9816-84e27f6c0110" name="Check for existence of [middleName]"><con:configuration><path>$.patientDemographics.middleName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4a434248-50e6-45e6-a572-3534256d3341" name="Check for existence of [lastName]"><con:configuration><path>$.patientDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8d7e8536-ea36-4d4f-9d09-b442e55f49b4" name="Check for existence of [address]"><con:configuration><path>$.patientDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="346f343e-8f5d-41c3-b7ff-7fc1cf61b996" name="Check for existence of [address2]"><con:configuration><path>$.patientDemographics.address2</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6bfcda50-9191-4994-accf-76caff23e6a7" name="Check for existence of [city]"><con:configuration><path>$.patientDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f45520ab-21c8-4e38-850b-47fea56e04d1" name="Check for existence of [state]"><con:configuration><path>$.patientDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="06d288b1-de25-4b22-a182-813a1e664d20" name="Check for existence of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c2633c86-9945-4850-acf4-4152cee6a1f3" name="Check for existence of [dob]"><con:configuration><path>$.patientDemographics.dob</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e2c3ee83-27c3-4efc-8d08-62606d6cba81" name="Check for existence of [phone]"><con:configuration><path>$.patientDemographics.phone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="258727a7-b14a-4737-bae5-b0867e9e0d02" name="Check for existence of [email]"><con:configuration><path>$.patientDemographics.email</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6527c5c6-9c77-4faa-a7af-e32d12893d94" name="Match content of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>27513</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>${Properties#Authorization}</con:value><con:style>HEADER</con:style><con:default>${Properties#Authorization}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get patient info for precheck appointment for staff user" id="fbf96d72-d406-4b1f-9849-0d55835a95bb"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="8e0be0bd-5d07-4a0e-b652-95a9a19f973d" name="Get patient info for precheck appointment for staff user" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#precheckAppointmentId}/patient_info</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3ced51bf-9bc3-4edc-acda-c5623751b548" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ae892331-6ad6-43d0-af0e-a9928103b70a" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c4f7322a-028e-46c8-a19a-ba794bc19426" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#precheckAppointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6c82b557-dcf0-4c76-acbe-55ff36e6d073" name="Check for existence of [firstName]"><con:configuration><path>$.patientDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60874789-961d-4a97-9816-84e27f6c0110" name="Check for existence of [middleName]"><con:configuration><path>$.patientDemographics.middleName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4a434248-50e6-45e6-a572-3534256d3341" name="Check for existence of [lastName]"><con:configuration><path>$.patientDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8d7e8536-ea36-4d4f-9d09-b442e55f49b4" name="Check for existence of [address]"><con:configuration><path>$.patientDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="346f343e-8f5d-41c3-b7ff-7fc1cf61b996" name="Check for existence of [address2]"><con:configuration><path>$.patientDemographics.address2</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6bfcda50-9191-4994-accf-76caff23e6a7" name="Check for existence of [city]"><con:configuration><path>$.patientDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f45520ab-21c8-4e38-850b-47fea56e04d1" name="Check for existence of [state]"><con:configuration><path>$.patientDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="06d288b1-de25-4b22-a182-813a1e664d20" name="Check for existence of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c2633c86-9945-4850-acf4-4152cee6a1f3" name="Check for existence of [dob]"><con:configuration><path>$.patientDemographics.dob</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e2c3ee83-27c3-4efc-8d08-62606d6cba81" name="Check for existence of [phone]"><con:configuration><path>$.patientDemographics.phone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="258727a7-b14a-4737-bae5-b0867e9e0d02" name="Check for existence of [email]"><con:configuration><path>$.patientDemographics.email</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6527c5c6-9c77-4faa-a7af-e32d12893d94" name="Match content of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>27513</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="305ada6e-da35-45b6-94e0-267f5a093c22" name="Match content of [dob]"><con:configuration><path>$.patientDemographics.dob</path><content>1535760000000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value><con:style>HEADER</con:style><con:default>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Get patient info for mfis appointment for staff" id="ea4ce44f-ee91-438e-bde2-d6db18ce3489"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="8e0be0bd-5d07-4a0e-b652-95a9a19f973d" name="Get patient info for mfis appointment for staff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-prechk01.dev.medfusion.net:8081/precheck/services/appointments/${Properties#mfisAppointmentId}/patient_info</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3ced51bf-9bc3-4edc-acda-c5623751b548" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ae892331-6ad6-43d0-af0e-a9928103b70a" name="Match content of [practiceId]"><con:configuration><path>$.practiceId</path><content>${Properties#practiceId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c4f7322a-028e-46c8-a19a-ba794bc19426" name="Match content of [appointmentId]"><con:configuration><path>$.appointmentId</path><content>${Properties#mfisAppointmentId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6c82b557-dcf0-4c76-acbe-55ff36e6d073" name="Check for existence of [firstName]"><con:configuration><path>$.patientDemographics.firstName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60874789-961d-4a97-9816-84e27f6c0110" name="Check for existence of [middleName]"><con:configuration><path>$.patientDemographics.middleName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4a434248-50e6-45e6-a572-3534256d3341" name="Check for existence of [lastName]"><con:configuration><path>$.patientDemographics.lastName</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8d7e8536-ea36-4d4f-9d09-b442e55f49b4" name="Check for existence of [address]"><con:configuration><path>$.patientDemographics.address</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="346f343e-8f5d-41c3-b7ff-7fc1cf61b996" name="Check for existence of [address2]"><con:configuration><path>$.patientDemographics.address2</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6bfcda50-9191-4994-accf-76caff23e6a7" name="Check for existence of [city]"><con:configuration><path>$.patientDemographics.city</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f45520ab-21c8-4e38-850b-47fea56e04d1" name="Check for existence of [state]"><con:configuration><path>$.patientDemographics.state</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="06d288b1-de25-4b22-a182-813a1e664d20" name="Check for existence of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c2633c86-9945-4850-acf4-4152cee6a1f3" name="Check for existence of [dob]"><con:configuration><path>$.patientDemographics.dob</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e2c3ee83-27c3-4efc-8d08-62606d6cba81" name="Check for existence of [phone]"><con:configuration><path>$.patientDemographics.phone</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="258727a7-b14a-4737-bae5-b0867e9e0d02" name="Check for existence of [email]"><con:configuration><path>$.patientDemographics.email</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6527c5c6-9c77-4faa-a7af-e32d12893d94" name="Match content of [zip]"><con:configuration><path>$.patientDemographics.zip</path><content>27513</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:parameter><con:name>Authorization</con:name><con:value>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:value><con:style>HEADER</con:style><con:default>Basic RHBhdHRlcnNvbjk6cGFzc3dvcmQy</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="11ee363d-e5b4-432a-9d68-6e343bce2e8f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Appointment scheduler" searchProperties="true"><con:settings/><con:testStep type="properties" name="Properties" id="04781f31-f029-4258-8469-86d6cb1b19a5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>practiceId</con:name><con:value>24170</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="Get Metadata for practice appointments" id="ae8df033-a9d4-45a1-86f2-7ff59834c390"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="c5b5895a-c7ac-4882-bac7-774daa45227a" name="Get Metadata for practice appointments" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://d3-ap-app01.dev.medfusion.net:8124/apt-reminder-scheduler/v1/metadata/practice/${Properties#practiceId}</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>04781f31-f029-4258-8469-86d6cb1b19a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:environment id="9f9687fd-13de-4fd9-bb61-2bc5819ab591" name="dev3"><con:service type="REST" name="http://d1-prechk01.ops.medfusion.net:8081"><con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://d1-prechk01.ops.medfusion.net:8081</con:endpoint></con:service><con:databaseConnectionContainer/></con:environment><con:authRepository><con:oAuth20AuthEntry><con:name>ddd</con:name><con:type>OAuth 2.0</con:type><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit></con:oAuth20AuthEntry></con:authRepository><con:environmentSpec><con:entry environmentId="9f9687fd-13de-4fd9-bb61-2bc5819ab591"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:tags/></con:soapui-project>